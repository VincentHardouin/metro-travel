[{"data":1,"prerenderedAt":9881},["ShallowReactive",2],{"blogs":3},[4,141,219,4457,4495,4533,4635,4791,4959,5679,7183,7814,8027,8108,8273,8360,8413,8449,8519,8563,8660,9026,9395,9568,9676],{"id":5,"title":6,"body":7,"description":17,"extension":135,"meta":136,"navigation":82,"path":137,"seo":138,"stem":139,"__hash__":140},"blog/blog/2024-05-08.md","2024-05-08",{"type":8,"value":9,"toc":133},"minimark",[10,14,18,34,45,48,64,67,107,110,118,121,129],[11,12,6],"h1",{"id":13},"_2024-05-08",[15,16,17],"p",{},"Je souhaite publier mes pages de journal directement sur le site. Pour cela, j'aimerais lire les fichiers markdown et\nles rendre en tant que pages. Pour Vue, je sais qu'il existe VuePress mais cela bootstrap un projet complet. Il existe\naussi Nuxt Content, mais il faut être sous Nuxt.js.",[15,19,20,21,28,29,33],{},"Je trouve un transformer Parcel pour importer des\nMarkdown : ",[22,23,27],"a",{"href":24,"rel":25},"https://github.com/indoorequal/parcel-transformer-markdown-front-matter",[26],"nofollow","parcel-transformer-markdown-front-matter",".\nJe vois qu'il est maintenu par François un ancien collègue, c'est donc un bon choix.\nGrâce à ça, je peux importer facilement du Markdown comme suit :\n",[30,31,32],"code",{},"import markdown from './content.md'",".",[15,35,36,37,40,41,44],{},"Cependant, j'aimerais lister tous les billets de journal disponibles, on est dans le navigateur, donc je ne peux pas\nutiliser les outils de Node.js comme\n",[30,38,39],{},"fs",", mais Parcel permet de résoudre des globs\ncomme\n",[30,42,43],{},"import all from './content/*.md'",".\nCela me permet de récupérer tous les fichiers markdown dans le dossier. Il me reste alors à ajouter dans le front matter\nles date des pages et leur titre, pour afficher correctement la liste.",[15,46,47],{},"Du côté du billet de journal en lui-même, j'ai essayé de faire un import dynamique avec un template string, mais cela ne\nfonctionne pas :",[49,50,55],"pre",{"className":51,"code":52,"language":53,"meta":54,"style":54},"language-javascript shiki shiki-themes github-light github-dark","const markdown = await import(`./content/${date}.md`);\n","javascript","",[30,56,57],{"__ignoreMap":54},[58,59,62],"span",{"class":60,"line":61},"line",1,[58,63,52],{},[15,65,66],{},"Je suis donc passé par l'import de glob, et ensuite je récupère le fichier qui m'intéresse :",[49,68,70],{"className":51,"code":69,"language":53,"meta":54,"style":54},"import * as posts from '../../docs/diary/*.md';\n\nconst route = useRoute();\n\nconst date = route.params.date;\nconst markdown = posts[date].default;\n",[30,71,72,77,84,90,95,101],{"__ignoreMap":54},[58,73,74],{"class":60,"line":61},[58,75,76],{},"import * as posts from '../../docs/diary/*.md';\n",[58,78,80],{"class":60,"line":79},2,[58,81,83],{"emptyLinePlaceholder":82},true,"\n",[58,85,87],{"class":60,"line":86},3,[58,88,89],{},"const route = useRoute();\n",[58,91,93],{"class":60,"line":92},4,[58,94,83],{"emptyLinePlaceholder":82},[58,96,98],{"class":60,"line":97},5,[58,99,100],{},"const date = route.params.date;\n",[58,102,104],{"class":60,"line":103},6,[58,105,106],{},"const markdown = posts[date].default;\n",[15,108,109],{},"Maintenant, un souci que j'ai est la gestion des assets comment gérer leurs imports ?",[15,111,112,113],{},"Je fais quelque chose rapidement avec la\nlibrairie ",[22,114,117],{"href":115,"rel":116},"https://github.com/elwin013/parcel-reporter-static-files-copy",[26],"parcel-reporter-static-files-copy",[15,119,120],{},"Que je configure pour simplement copier les assets dans le bon sous-dossier :",[49,122,127],{"className":123,"code":125,"language":126},[124],"language-text","// package.json\n  \"staticFiles\": [\n    {\n      \"staticPath\": \"./docs/diary/assets\",\n      \"staticOutPath\": \"/posts/assets\"\n    }\n  ]\n","text",[30,128,125],{"__ignoreMap":54},[130,131,132],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":54,"searchDepth":79,"depth":79,"links":134},[],"md",{"date":6},"/blog/2024-05-08",{"title":6,"description":17},"blog/2024-05-08","UeDZ5OfoFeta7qHC155o2zO_PNSY7QXmztzuEeFtdeM",{"id":142,"title":143,"body":144,"description":151,"extension":135,"meta":214,"navigation":82,"path":215,"seo":216,"stem":217,"__hash__":218},"blog/blog/2024-04-26.md","2024-04-26",{"type":8,"value":145,"toc":212},[146,149,152,155,158,161,164,174,181,184,187,201,206],[11,147,143],{"id":148},"_2024-04-26",[15,150,151],{},"Longtemps que je n'ai pas pris le temps d'écrire dans ce journal. Récapitulons la semaine passée, le 20 avril, j'ai mis\nen production l'utilisation des données provenant de GTFS. Heureux d'être arrivé au bout de cette migration.",[15,153,154],{},"Le 23, j'ai migré le projet de Javascript natif vers Vue.js, ce qui m'a permis au passage d'ajouter la fonctionnalité de\ntoggle les stations ajoutées.",[15,156,157],{},"Enfin, le 25, j'ai ajouté le mode \"Practice\", qui permet de s'entraîner à trouver les stations avec un départ et une\narrivée différente à chaque fois.",[15,159,160],{},"Aujourd'hui, je vais corriger un bug qui survient quand on désactive une station et qu'on l'ajoute à nouveau via le\nchamp de recherche. Ce qui en plus a pour conséquence d'inverser la coche de la liste des stations.",[15,162,163],{},"Là-dedans, on peut voir deux choses :",[165,166,167,171],"ol",{},[168,169,170],"li",{},"la recherche des stations ne retire plus les stations déjà ajoutées, c'était\nplutôt voulu pour déléguer les stations ajoutées au composant d'en dessous.",[168,172,173],{},"la coche de la liste des stations est inversée, car les coches ne sont pas liées à l'état des stations.",[15,175,176,177,180],{},"Ce qui ne me convient pas, c'est lorsque j'ajoute une station, la méthode\n",[30,178,179],{},"addStation"," me retourne si le jeu est fini ou\nnon. Ensuite quand je désactive une station, je la retire de la liste des stations ajoutées de la partie, alors qu'il ne\nfaudrait pas, je pense.",[15,182,183],{},"J'ai une méthode toggleStation, qui décide si la station est ajoutée ou retirée, mais je ne l'utilise pas pour ajouter\nuniquement pour les checkbox.\nActuellement, la class Game, ne sait pas si une station est simplement désactivée, elle sait juste qu'elle n'est pas\najoutée.",[15,185,186],{},"D'ailleurs, le fait que la class n'ait pas l'information fait que ça biaise les résultats du jeu, où seulement les\nstations ajoutées et encore actives sont prises en compte. Donc si l'utilisateur fait une erreur, il peut désactiver et\nobtenir quand même le plus petit score.",[15,188,189,190,193,194,197,198,33],{},"Il faut donc que la classe ait connaissance de l'état de la station. Dans un premier temps, je renomme la\nMap\n",[30,191,192],{},"addedStops"," en\n",[30,195,196],{},"currentState",", qui contient les stations ajoutées et leur état\n",[30,199,200],{},"{ isActive: true }",[15,202,203,204,33],{},"J'ajoute ensuite un getter qui remplace l'ancienne variable\n",[30,205,192],{},[15,207,208,209,211],{},"Maintenant, j'essaie d'utiliser un ref qui pointe vers l'instance de Game, mais cela ne fonctionne pas. Après quelques\nessais infructueux, je décide de mettre à jour à chaque ajout ou toggle la ref\n",[30,210,192],{},". Je pense que je pourrais\nutiliser les events, mais j'ai quelque chose de fonctionnel qui peut partir en production, c'est déjà une première\nétape.",{"title":54,"searchDepth":79,"depth":79,"links":213},[],{"date":143},"/blog/2024-04-26",{"title":143,"description":151},"blog/2024-04-26","CpX83hRRKwYeAt6UfcRQocL368nb-oieHqRU3pRnY9M",{"id":220,"title":221,"body":222,"description":4451,"extension":135,"meta":4452,"navigation":82,"path":4453,"seo":4454,"stem":4455,"__hash__":4456},"blog/blog/2024-04-15.md","2024-04-15",{"type":8,"value":223,"toc":4449},[224,227,245,248,4446],[11,225,221],{"id":226},"_2024-04-15",[15,228,229,230,233,234,237,238,241,242,33],{},"J'ai commencé à migrer la class Map, cela avance tranquillement. Je n'arrive pas à afficher le chemin entre 2 stations,\npour au final me rendre compte que ce n'est pas un problème de code, mais de données. Le moyen de lié les données entre\nles\n",[30,231,232],{},"stops"," et les\n",[30,235,236],{},"unique_stops"," a été un peu fatal. En effet, j'ai fait en sorte que dès que le nom est contenu dans\nle nom d'une station unique un match se fait. Mais, le problème :\n",[30,239,240],{},"Villiers"," est contenu dans\n",[30,243,244],{},"Fort d'Aubervilliers\"",[15,246,247],{},"Je suis bon pour faire en sorte de récupérer tous les cas comme ça pour pouvoir voir ce que je peux faire ensuite.\nJ'ai plus de cas que je ne le pensais (23 cas) :",[49,249,253],{"className":250,"code":251,"language":252,"meta":54,"style":54},"language-json shiki shiki-themes github-light github-dark","[\n  {\n    \"stop_name\": \"Nation\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"339\",\n        \"stop_name\": \"Nation\",\n        \"stop_lon\": 48.848237109475654,\n        \"stop_lat\": 2.3958235888261252,\n        \"id_red_zdc\": \"71673\"\n      },\n      {\n        \"stop_unique_id\": \"106047\",\n        \"stop_name\": \"Nationale\",\n        \"stop_lon\": 48.83321671877524,\n        \"stop_lat\": 2.362856399519012,\n        \"id_red_zdc\": \"71043\"\n      },\n      {\n        \"stop_unique_id\": \"112059\",\n        \"stop_name\": \"Assemblée Nationale\",\n        \"stop_lon\": 48.86078696169296,\n        \"stop_lat\": 2.320998191965805,\n        \"id_red_zdc\": \"73642\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Miromesnil\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"114059\",\n        \"stop_name\": \"Miromesnil\",\n        \"stop_lon\": 48.87368520970193,\n        \"stop_lat\": 2.3144679895687355,\n        \"id_red_zdc\": \"71346\"\n      },\n      {\n        \"stop_unique_id\": \"102067\",\n        \"stop_name\": \"Rome\",\n        \"stop_lon\": 48.88233342277264,\n        \"stop_lat\": 2.321801731063168,\n        \"id_red_zdc\": \"71408\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Jaurès\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"117039\",\n        \"stop_name\": \"Jaurès\",\n        \"stop_lon\": 48.88273813184986,\n        \"stop_lat\": 2.3701223122811044,\n        \"id_red_zdc\": \"71940\"\n      },\n      {\n        \"stop_unique_id\": \"110025\",\n        \"stop_name\": \"Boulogne - Jean Jaurès\",\n        \"stop_lon\": 48.84200534636367,\n        \"stop_lat\": 2.238887328515536,\n        \"id_red_zdc\": \"71147\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Boulogne Jean Jaurès\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"117039\",\n        \"stop_name\": \"Jaurès\",\n        \"stop_lon\": 48.88273813184986,\n        \"stop_lat\": 2.3701223122811044,\n        \"id_red_zdc\": \"71940\"\n      },\n      {\n        \"stop_unique_id\": \"110025\",\n        \"stop_name\": \"Boulogne - Jean Jaurès\",\n        \"stop_lon\": 48.84200534636367,\n        \"stop_lat\": 2.238887328515536,\n        \"id_red_zdc\": \"71147\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Villiers\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"107027\",\n        \"stop_name\": \"Fort d'Aubervilliers\",\n        \"stop_lon\": 48.91494975634199,\n        \"stop_lat\": 2.4044090887818634,\n        \"id_red_zdc\": \"73695\"\n      },\n      {\n        \"stop_unique_id\": \"107029\",\n        \"stop_name\": \"Aubervilliers Pantin - Quatre Chemins\",\n        \"stop_lon\": 48.90378388011075,\n        \"stop_lat\": 2.392221221171115,\n        \"id_red_zdc\": \"72460\"\n      },\n      {\n        \"stop_unique_id\": \"117093\",\n        \"stop_name\": \"Mairie d'Aubervilliers\",\n        \"stop_lon\": 48.913710544615356,\n        \"stop_lat\": 2.3807356063950937,\n        \"id_red_zdc\": \"72524\"\n      },\n      {\n        \"stop_unique_id\": \"103067\",\n        \"stop_name\": \"Villiers\",\n        \"stop_lon\": 48.881094426231876,\n        \"stop_lat\": 2.3147210047461946,\n        \"id_red_zdc\": \"71403\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Porte de la Chapelle\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"112085\",\n        \"stop_name\": \"Porte de la Chapelle\",\n        \"stop_lon\": 48.898392952351074,\n        \"stop_lat\": 2.3593939011158835,\n        \"id_red_zdc\": \"72064\"\n      },\n      {\n        \"stop_unique_id\": \"102055\",\n        \"stop_name\": \"La Chapelle\",\n        \"stop_lon\": 48.88439967613092,\n        \"stop_lat\": 2.360399500808731,\n        \"id_red_zdc\": \"71434\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Marcadet - Poissonniers\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"112081\",\n        \"stop_name\": \"Marcadet-Poissonniers\",\n        \"stop_lon\": 48.89150083893872,\n        \"stop_lat\": 2.3496204845329847,\n        \"id_red_zdc\": \"71511\"\n      },\n      {\n        \"stop_unique_id\": \"107049\",\n        \"stop_name\": \"Cadet\",\n        \"stop_lon\": 48.87600859287756,\n        \"stop_lat\": 2.344572482089328,\n        \"id_red_zdc\": \"71351\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Assemblée Nationale\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"339\",\n        \"stop_name\": \"Nation\",\n        \"stop_lon\": 48.848237109475654,\n        \"stop_lat\": 2.3958235888261252,\n        \"id_red_zdc\": \"71673\"\n      },\n      {\n        \"stop_unique_id\": \"106047\",\n        \"stop_name\": \"Nationale\",\n        \"stop_lon\": 48.83321671877524,\n        \"stop_lat\": 2.362856399519012,\n        \"id_red_zdc\": \"71043\"\n      },\n      {\n        \"stop_unique_id\": \"112059\",\n        \"stop_name\": \"Assemblée Nationale\",\n        \"stop_lon\": 48.86078696169296,\n        \"stop_lat\": 2.320998191965805,\n        \"id_red_zdc\": \"73642\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Esplanade de la Défense\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"390\",\n        \"stop_name\": \"La Défense\",\n        \"stop_lon\": 48.89218707551516,\n        \"stop_lat\": 2.2370180563950135,\n        \"id_red_zdc\": \"71517\"\n      },\n      {\n        \"stop_unique_id\": \"101079\",\n        \"stop_name\": \"Esplanade de la Défense\",\n        \"stop_lon\": 48.88813847667783,\n        \"stop_lat\": 2.249792769009765,\n        \"id_red_zdc\": \"71485\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Rome\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"114059\",\n        \"stop_name\": \"Miromesnil\",\n        \"stop_lon\": 48.87368520970193,\n        \"stop_lat\": 2.3144679895687355,\n        \"id_red_zdc\": \"71346\"\n      },\n      {\n        \"stop_unique_id\": \"102067\",\n        \"stop_name\": \"Rome\",\n        \"stop_lon\": 48.88233342277264,\n        \"stop_lat\": 2.321801731063168,\n        \"id_red_zdc\": \"71408\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"La Chapelle\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"112085\",\n        \"stop_name\": \"Porte de la Chapelle\",\n        \"stop_lon\": 48.898392952351074,\n        \"stop_lat\": 2.3593939011158835,\n        \"id_red_zdc\": \"72064\"\n      },\n      {\n        \"stop_unique_id\": \"102055\",\n        \"stop_name\": \"La Chapelle\",\n        \"stop_lon\": 48.88439967613092,\n        \"stop_lat\": 2.360399500808731,\n        \"id_red_zdc\": \"71434\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Blanche\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"107081\",\n        \"stop_name\": \"Maison Blanche\",\n        \"stop_lon\": 48.82218265762191,\n        \"stop_lat\": 2.3585513482022034,\n        \"id_red_zdc\": \"70645\"\n      },\n      {\n        \"stop_unique_id\": \"102063\",\n        \"stop_name\": \"Blanche\",\n        \"stop_lon\": 48.88355628923431,\n        \"stop_lat\": 2.3333796724221587,\n        \"id_red_zdc\": \"71420\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Nationale\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"339\",\n        \"stop_name\": \"Nation\",\n        \"stop_lon\": 48.848237109475654,\n        \"stop_lat\": 2.3958235888261252,\n        \"id_red_zdc\": \"71673\"\n      },\n      {\n        \"stop_unique_id\": \"106047\",\n        \"stop_name\": \"Nationale\",\n        \"stop_lon\": 48.83321671877524,\n        \"stop_lat\": 2.362856399519012,\n        \"id_red_zdc\": \"71043\"\n      },\n      {\n        \"stop_unique_id\": \"112059\",\n        \"stop_name\": \"Assemblée Nationale\",\n        \"stop_lon\": 48.86078696169296,\n        \"stop_lat\": 2.320998191965805,\n        \"id_red_zdc\": \"73642\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Porte de Saint-Ouen\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"430\",\n        \"stop_name\": \"Saint-Ouen\",\n        \"stop_lon\": 48.90456638896682,\n        \"stop_lat\": 2.3226263683342263,\n        \"id_red_zdc\": \"72126\"\n      },\n      {\n        \"stop_unique_id\": \"114071\",\n        \"stop_name\": \"Porte de Saint-Ouen\",\n        \"stop_lon\": 48.89737479459521,\n        \"stop_lat\": 2.3289428127798923,\n        \"id_red_zdc\": \"72078\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Asnières - Gennevilliers Les Courtilles\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"113079\",\n        \"stop_name\": \"Les Courtilles\",\n        \"stop_lon\": 48.930757002402125,\n        \"stop_lat\": 2.2841744482832955,\n        \"id_red_zdc\": \"72286\"\n      },\n      {\n        \"stop_unique_id\": \"103067\",\n        \"stop_name\": \"Villiers\",\n        \"stop_lon\": 48.881094426231876,\n        \"stop_lat\": 2.3147210047461946,\n        \"id_red_zdc\": \"71403\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Mairie de Saint-Ouen\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"430\",\n        \"stop_name\": \"Saint-Ouen\",\n        \"stop_lon\": 48.90456638896682,\n        \"stop_lat\": 2.3226263683342263,\n        \"id_red_zdc\": \"72126\"\n      },\n      {\n        \"stop_unique_id\": \"114075\",\n        \"stop_name\": \"Mairie de Saint-Ouen\",\n        \"stop_lon\": 48.91258349677915,\n        \"stop_lat\": 2.3342940159066474,\n        \"id_red_zdc\": \"72168\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Pont Marie (Cité des Arts)\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"107065\",\n        \"stop_name\": \"Pont Marie\",\n        \"stop_lon\": 48.85357547245371,\n        \"stop_lat\": 2.357162568881775,\n        \"id_red_zdc\": \"71217\"\n      },\n      {\n        \"stop_unique_id\": \"104055\",\n        \"stop_name\": \"Cité\",\n        \"stop_lon\": 48.854936379230175,\n        \"stop_lat\": 2.347321318407715,\n        \"id_red_zdc\": \"71223\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Maison Blanche\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"107081\",\n        \"stop_name\": \"Maison Blanche\",\n        \"stop_lon\": 48.82218265762191,\n        \"stop_lat\": 2.3585513482022034,\n        \"id_red_zdc\": \"70645\"\n      },\n      {\n        \"stop_unique_id\": \"102063\",\n        \"stop_name\": \"Blanche\",\n        \"stop_lon\": 48.88355628923431,\n        \"stop_lat\": 2.3333796724221587,\n        \"id_red_zdc\": \"71420\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Cadet\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"112081\",\n        \"stop_name\": \"Marcadet-Poissonniers\",\n        \"stop_lon\": 48.89150083893872,\n        \"stop_lat\": 2.3496204845329847,\n        \"id_red_zdc\": \"71511\"\n      },\n      {\n        \"stop_unique_id\": \"107049\",\n        \"stop_name\": \"Cadet\",\n        \"stop_lon\": 48.87600859287756,\n        \"stop_lat\": 2.344572482089328,\n        \"id_red_zdc\": \"71351\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Fort d'Aubervilliers\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"107027\",\n        \"stop_name\": \"Fort d'Aubervilliers\",\n        \"stop_lon\": 48.91494975634199,\n        \"stop_lat\": 2.4044090887818634,\n        \"id_red_zdc\": \"73695\"\n      },\n      {\n        \"stop_unique_id\": \"103067\",\n        \"stop_name\": \"Villiers\",\n        \"stop_lon\": 48.881094426231876,\n        \"stop_lat\": 2.3147210047461946,\n        \"id_red_zdc\": \"71403\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Aubervilliers-Pantin Quatre Chemins\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"107029\",\n        \"stop_name\": \"Aubervilliers Pantin - Quatre Chemins\",\n        \"stop_lon\": 48.90378388011075,\n        \"stop_lat\": 2.392221221171115,\n        \"id_red_zdc\": \"72460\"\n      },\n      {\n        \"stop_unique_id\": \"103067\",\n        \"stop_name\": \"Villiers\",\n        \"stop_lon\": 48.881094426231876,\n        \"stop_lat\": 2.3147210047461946,\n        \"id_red_zdc\": \"71403\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Saint-Ouen\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"430\",\n        \"stop_name\": \"Saint-Ouen\",\n        \"stop_lon\": 48.90456638896682,\n        \"stop_lat\": 2.3226263683342263,\n        \"id_red_zdc\": \"72126\"\n      },\n      {\n        \"stop_unique_id\": \"114075\",\n        \"stop_name\": \"Mairie de Saint-Ouen\",\n        \"stop_lon\": 48.91258349677915,\n        \"stop_lat\": 2.3342940159066474,\n        \"id_red_zdc\": \"72168\"\n      },\n      {\n        \"stop_unique_id\": \"114071\",\n        \"stop_name\": \"Porte de Saint-Ouen\",\n        \"stop_lon\": 48.89737479459521,\n        \"stop_lat\": 2.3289428127798923,\n        \"id_red_zdc\": \"72078\"\n      }\n    ]\n  },\n  {\n    \"stop_name\": \"Mairie d'Aubervilliers\",\n    \"foundUniqueStops\": [\n      {\n        \"stop_unique_id\": \"117093\",\n        \"stop_name\": \"Mairie d'Aubervilliers\",\n        \"stop_lon\": 48.913710544615356,\n        \"stop_lat\": 2.3807356063950937,\n        \"id_red_zdc\": \"72524\"\n      },\n      {\n        \"stop_unique_id\": \"103067\",\n        \"stop_name\": \"Villiers\",\n        \"stop_lon\": 48.881094426231876,\n        \"stop_lat\": 2.3147210047461946,\n        \"id_red_zdc\": \"71403\"\n      }\n    ]\n  }\n]\n","json",[30,254,255,261,266,282,290,295,307,319,332,345,356,362,367,379,391,403,415,425,430,435,447,459,471,483,493,499,505,511,516,528,535,540,552,563,575,587,597,602,607,619,631,643,655,665,670,675,680,685,697,704,709,721,732,744,756,766,771,776,788,800,812,824,834,839,844,849,854,866,873,878,889,900,911,922,931,936,941,952,963,974,985,994,999,1004,1009,1014,1026,1033,1038,1050,1062,1074,1086,1096,1101,1106,1118,1130,1142,1154,1164,1169,1174,1186,1198,1210,1222,1232,1237,1242,1254,1265,1277,1289,1299,1304,1309,1314,1319,1331,1338,1343,1355,1366,1378,1390,1400,1405,1410,1422,1434,1446,1458,1468,1473,1478,1483,1488,1500,1507,1512,1524,1536,1548,1560,1570,1575,1580,1592,1604,1616,1628,1638,1643,1648,1653,1658,1669,1676,1681,1692,1703,1714,1725,1734,1739,1744,1755,1766,1777,1788,1797,1802,1807,1818,1829,1840,1851,1860,1865,1870,1875,1880,1892,1899,1904,1916,1928,1940,1952,1962,1967,1972,1984,1995,2007,2019,2029,2034,2039,2044,2049,2060,2067,2072,2083,2094,2105,2116,2125,2130,2135,2146,2157,2168,2179,2188,2193,2198,2203,2208,2219,2226,2231,2242,2253,2264,2275,2284,2289,2294,2305,2316,2327,2338,2347,2352,2357,2362,2367,2379,2386,2391,2403,2415,2427,2439,2449,2454,2459,2471,2482,2494,2506,2516,2521,2526,2531,2536,2547,2554,2559,2570,2581,2592,2603,2612,2617,2622,2633,2644,2655,2666,2675,2680,2685,2696,2707,2718,2729,2738,2743,2748,2753,2758,2770,2777,2782,2794,2806,2818,2830,2840,2845,2850,2862,2873,2885,2897,2907,2912,2917,2922,2927,2939,2946,2951,2963,2975,2987,2999,3009,3014,3019,3030,3041,3052,3063,3072,3077,3082,3087,3092,3104,3111,3116,3127,3138,3149,3160,3169,3174,3179,3191,3202,3214,3226,3236,3241,3246,3251,3256,3268,3275,3280,3292,3304,3316,3328,3338,3343,3348,3360,3372,3384,3396,3406,3411,3416,3421,3426,3437,3444,3449,3460,3471,3482,3493,3502,3507,3512,3523,3534,3545,3556,3565,3570,3575,3580,3585,3596,3603,3608,3619,3630,3641,3652,3661,3666,3671,3682,3693,3704,3715,3724,3729,3734,3739,3744,3755,3762,3767,3778,3789,3800,3811,3820,3825,3830,3841,3852,3863,3874,3883,3888,3893,3898,3903,3915,3922,3927,3938,3949,3960,3971,3980,3985,3990,4001,4012,4023,4034,4043,4048,4053,4058,4063,4074,4081,4086,4097,4108,4119,4130,4139,4144,4149,4160,4171,4182,4193,4202,4207,4212,4223,4234,4245,4256,4265,4270,4275,4280,4285,4296,4303,4308,4319,4330,4341,4352,4361,4366,4371,4382,4393,4404,4415,4424,4429,4434,4440],{"__ignoreMap":54},[58,256,257],{"class":60,"line":61},[58,258,260],{"class":259},"sVt8B","[\n",[58,262,263],{"class":60,"line":79},[58,264,265],{"class":259},"  {\n",[58,267,268,272,275,279],{"class":60,"line":86},[58,269,271],{"class":270},"sj4cs","    \"stop_name\"",[58,273,274],{"class":259},": ",[58,276,278],{"class":277},"sZZnC","\"Nation\"",[58,280,281],{"class":259},",\n",[58,283,284,287],{"class":60,"line":92},[58,285,286],{"class":270},"    \"foundUniqueStops\"",[58,288,289],{"class":259},": [\n",[58,291,292],{"class":60,"line":97},[58,293,294],{"class":259},"      {\n",[58,296,297,300,302,305],{"class":60,"line":103},[58,298,299],{"class":270},"        \"stop_unique_id\"",[58,301,274],{"class":259},[58,303,304],{"class":277},"\"339\"",[58,306,281],{"class":259},[58,308,310,313,315,317],{"class":60,"line":309},7,[58,311,312],{"class":270},"        \"stop_name\"",[58,314,274],{"class":259},[58,316,278],{"class":277},[58,318,281],{"class":259},[58,320,322,325,327,330],{"class":60,"line":321},8,[58,323,324],{"class":270},"        \"stop_lon\"",[58,326,274],{"class":259},[58,328,329],{"class":270},"48.848237109475654",[58,331,281],{"class":259},[58,333,335,338,340,343],{"class":60,"line":334},9,[58,336,337],{"class":270},"        \"stop_lat\"",[58,339,274],{"class":259},[58,341,342],{"class":270},"2.3958235888261252",[58,344,281],{"class":259},[58,346,348,351,353],{"class":60,"line":347},10,[58,349,350],{"class":270},"        \"id_red_zdc\"",[58,352,274],{"class":259},[58,354,355],{"class":277},"\"71673\"\n",[58,357,359],{"class":60,"line":358},11,[58,360,361],{"class":259},"      },\n",[58,363,365],{"class":60,"line":364},12,[58,366,294],{"class":259},[58,368,370,372,374,377],{"class":60,"line":369},13,[58,371,299],{"class":270},[58,373,274],{"class":259},[58,375,376],{"class":277},"\"106047\"",[58,378,281],{"class":259},[58,380,382,384,386,389],{"class":60,"line":381},14,[58,383,312],{"class":270},[58,385,274],{"class":259},[58,387,388],{"class":277},"\"Nationale\"",[58,390,281],{"class":259},[58,392,394,396,398,401],{"class":60,"line":393},15,[58,395,324],{"class":270},[58,397,274],{"class":259},[58,399,400],{"class":270},"48.83321671877524",[58,402,281],{"class":259},[58,404,406,408,410,413],{"class":60,"line":405},16,[58,407,337],{"class":270},[58,409,274],{"class":259},[58,411,412],{"class":270},"2.362856399519012",[58,414,281],{"class":259},[58,416,418,420,422],{"class":60,"line":417},17,[58,419,350],{"class":270},[58,421,274],{"class":259},[58,423,424],{"class":277},"\"71043\"\n",[58,426,428],{"class":60,"line":427},18,[58,429,361],{"class":259},[58,431,433],{"class":60,"line":432},19,[58,434,294],{"class":259},[58,436,438,440,442,445],{"class":60,"line":437},20,[58,439,299],{"class":270},[58,441,274],{"class":259},[58,443,444],{"class":277},"\"112059\"",[58,446,281],{"class":259},[58,448,450,452,454,457],{"class":60,"line":449},21,[58,451,312],{"class":270},[58,453,274],{"class":259},[58,455,456],{"class":277},"\"Assemblée Nationale\"",[58,458,281],{"class":259},[58,460,462,464,466,469],{"class":60,"line":461},22,[58,463,324],{"class":270},[58,465,274],{"class":259},[58,467,468],{"class":270},"48.86078696169296",[58,470,281],{"class":259},[58,472,474,476,478,481],{"class":60,"line":473},23,[58,475,337],{"class":270},[58,477,274],{"class":259},[58,479,480],{"class":270},"2.320998191965805",[58,482,281],{"class":259},[58,484,486,488,490],{"class":60,"line":485},24,[58,487,350],{"class":270},[58,489,274],{"class":259},[58,491,492],{"class":277},"\"73642\"\n",[58,494,496],{"class":60,"line":495},25,[58,497,498],{"class":259},"      }\n",[58,500,502],{"class":60,"line":501},26,[58,503,504],{"class":259},"    ]\n",[58,506,508],{"class":60,"line":507},27,[58,509,510],{"class":259},"  },\n",[58,512,514],{"class":60,"line":513},28,[58,515,265],{"class":259},[58,517,519,521,523,526],{"class":60,"line":518},29,[58,520,271],{"class":270},[58,522,274],{"class":259},[58,524,525],{"class":277},"\"Miromesnil\"",[58,527,281],{"class":259},[58,529,531,533],{"class":60,"line":530},30,[58,532,286],{"class":270},[58,534,289],{"class":259},[58,536,538],{"class":60,"line":537},31,[58,539,294],{"class":259},[58,541,543,545,547,550],{"class":60,"line":542},32,[58,544,299],{"class":270},[58,546,274],{"class":259},[58,548,549],{"class":277},"\"114059\"",[58,551,281],{"class":259},[58,553,555,557,559,561],{"class":60,"line":554},33,[58,556,312],{"class":270},[58,558,274],{"class":259},[58,560,525],{"class":277},[58,562,281],{"class":259},[58,564,566,568,570,573],{"class":60,"line":565},34,[58,567,324],{"class":270},[58,569,274],{"class":259},[58,571,572],{"class":270},"48.87368520970193",[58,574,281],{"class":259},[58,576,578,580,582,585],{"class":60,"line":577},35,[58,579,337],{"class":270},[58,581,274],{"class":259},[58,583,584],{"class":270},"2.3144679895687355",[58,586,281],{"class":259},[58,588,590,592,594],{"class":60,"line":589},36,[58,591,350],{"class":270},[58,593,274],{"class":259},[58,595,596],{"class":277},"\"71346\"\n",[58,598,600],{"class":60,"line":599},37,[58,601,361],{"class":259},[58,603,605],{"class":60,"line":604},38,[58,606,294],{"class":259},[58,608,610,612,614,617],{"class":60,"line":609},39,[58,611,299],{"class":270},[58,613,274],{"class":259},[58,615,616],{"class":277},"\"102067\"",[58,618,281],{"class":259},[58,620,622,624,626,629],{"class":60,"line":621},40,[58,623,312],{"class":270},[58,625,274],{"class":259},[58,627,628],{"class":277},"\"Rome\"",[58,630,281],{"class":259},[58,632,634,636,638,641],{"class":60,"line":633},41,[58,635,324],{"class":270},[58,637,274],{"class":259},[58,639,640],{"class":270},"48.88233342277264",[58,642,281],{"class":259},[58,644,646,648,650,653],{"class":60,"line":645},42,[58,647,337],{"class":270},[58,649,274],{"class":259},[58,651,652],{"class":270},"2.321801731063168",[58,654,281],{"class":259},[58,656,658,660,662],{"class":60,"line":657},43,[58,659,350],{"class":270},[58,661,274],{"class":259},[58,663,664],{"class":277},"\"71408\"\n",[58,666,668],{"class":60,"line":667},44,[58,669,498],{"class":259},[58,671,673],{"class":60,"line":672},45,[58,674,504],{"class":259},[58,676,678],{"class":60,"line":677},46,[58,679,510],{"class":259},[58,681,683],{"class":60,"line":682},47,[58,684,265],{"class":259},[58,686,688,690,692,695],{"class":60,"line":687},48,[58,689,271],{"class":270},[58,691,274],{"class":259},[58,693,694],{"class":277},"\"Jaurès\"",[58,696,281],{"class":259},[58,698,700,702],{"class":60,"line":699},49,[58,701,286],{"class":270},[58,703,289],{"class":259},[58,705,707],{"class":60,"line":706},50,[58,708,294],{"class":259},[58,710,712,714,716,719],{"class":60,"line":711},51,[58,713,299],{"class":270},[58,715,274],{"class":259},[58,717,718],{"class":277},"\"117039\"",[58,720,281],{"class":259},[58,722,724,726,728,730],{"class":60,"line":723},52,[58,725,312],{"class":270},[58,727,274],{"class":259},[58,729,694],{"class":277},[58,731,281],{"class":259},[58,733,735,737,739,742],{"class":60,"line":734},53,[58,736,324],{"class":270},[58,738,274],{"class":259},[58,740,741],{"class":270},"48.88273813184986",[58,743,281],{"class":259},[58,745,747,749,751,754],{"class":60,"line":746},54,[58,748,337],{"class":270},[58,750,274],{"class":259},[58,752,753],{"class":270},"2.3701223122811044",[58,755,281],{"class":259},[58,757,759,761,763],{"class":60,"line":758},55,[58,760,350],{"class":270},[58,762,274],{"class":259},[58,764,765],{"class":277},"\"71940\"\n",[58,767,769],{"class":60,"line":768},56,[58,770,361],{"class":259},[58,772,774],{"class":60,"line":773},57,[58,775,294],{"class":259},[58,777,779,781,783,786],{"class":60,"line":778},58,[58,780,299],{"class":270},[58,782,274],{"class":259},[58,784,785],{"class":277},"\"110025\"",[58,787,281],{"class":259},[58,789,791,793,795,798],{"class":60,"line":790},59,[58,792,312],{"class":270},[58,794,274],{"class":259},[58,796,797],{"class":277},"\"Boulogne - Jean Jaurès\"",[58,799,281],{"class":259},[58,801,803,805,807,810],{"class":60,"line":802},60,[58,804,324],{"class":270},[58,806,274],{"class":259},[58,808,809],{"class":270},"48.84200534636367",[58,811,281],{"class":259},[58,813,815,817,819,822],{"class":60,"line":814},61,[58,816,337],{"class":270},[58,818,274],{"class":259},[58,820,821],{"class":270},"2.238887328515536",[58,823,281],{"class":259},[58,825,827,829,831],{"class":60,"line":826},62,[58,828,350],{"class":270},[58,830,274],{"class":259},[58,832,833],{"class":277},"\"71147\"\n",[58,835,837],{"class":60,"line":836},63,[58,838,498],{"class":259},[58,840,842],{"class":60,"line":841},64,[58,843,504],{"class":259},[58,845,847],{"class":60,"line":846},65,[58,848,510],{"class":259},[58,850,852],{"class":60,"line":851},66,[58,853,265],{"class":259},[58,855,857,859,861,864],{"class":60,"line":856},67,[58,858,271],{"class":270},[58,860,274],{"class":259},[58,862,863],{"class":277},"\"Boulogne Jean Jaurès\"",[58,865,281],{"class":259},[58,867,869,871],{"class":60,"line":868},68,[58,870,286],{"class":270},[58,872,289],{"class":259},[58,874,876],{"class":60,"line":875},69,[58,877,294],{"class":259},[58,879,881,883,885,887],{"class":60,"line":880},70,[58,882,299],{"class":270},[58,884,274],{"class":259},[58,886,718],{"class":277},[58,888,281],{"class":259},[58,890,892,894,896,898],{"class":60,"line":891},71,[58,893,312],{"class":270},[58,895,274],{"class":259},[58,897,694],{"class":277},[58,899,281],{"class":259},[58,901,903,905,907,909],{"class":60,"line":902},72,[58,904,324],{"class":270},[58,906,274],{"class":259},[58,908,741],{"class":270},[58,910,281],{"class":259},[58,912,914,916,918,920],{"class":60,"line":913},73,[58,915,337],{"class":270},[58,917,274],{"class":259},[58,919,753],{"class":270},[58,921,281],{"class":259},[58,923,925,927,929],{"class":60,"line":924},74,[58,926,350],{"class":270},[58,928,274],{"class":259},[58,930,765],{"class":277},[58,932,934],{"class":60,"line":933},75,[58,935,361],{"class":259},[58,937,939],{"class":60,"line":938},76,[58,940,294],{"class":259},[58,942,944,946,948,950],{"class":60,"line":943},77,[58,945,299],{"class":270},[58,947,274],{"class":259},[58,949,785],{"class":277},[58,951,281],{"class":259},[58,953,955,957,959,961],{"class":60,"line":954},78,[58,956,312],{"class":270},[58,958,274],{"class":259},[58,960,797],{"class":277},[58,962,281],{"class":259},[58,964,966,968,970,972],{"class":60,"line":965},79,[58,967,324],{"class":270},[58,969,274],{"class":259},[58,971,809],{"class":270},[58,973,281],{"class":259},[58,975,977,979,981,983],{"class":60,"line":976},80,[58,978,337],{"class":270},[58,980,274],{"class":259},[58,982,821],{"class":270},[58,984,281],{"class":259},[58,986,988,990,992],{"class":60,"line":987},81,[58,989,350],{"class":270},[58,991,274],{"class":259},[58,993,833],{"class":277},[58,995,997],{"class":60,"line":996},82,[58,998,498],{"class":259},[58,1000,1002],{"class":60,"line":1001},83,[58,1003,504],{"class":259},[58,1005,1007],{"class":60,"line":1006},84,[58,1008,510],{"class":259},[58,1010,1012],{"class":60,"line":1011},85,[58,1013,265],{"class":259},[58,1015,1017,1019,1021,1024],{"class":60,"line":1016},86,[58,1018,271],{"class":270},[58,1020,274],{"class":259},[58,1022,1023],{"class":277},"\"Villiers\"",[58,1025,281],{"class":259},[58,1027,1029,1031],{"class":60,"line":1028},87,[58,1030,286],{"class":270},[58,1032,289],{"class":259},[58,1034,1036],{"class":60,"line":1035},88,[58,1037,294],{"class":259},[58,1039,1041,1043,1045,1048],{"class":60,"line":1040},89,[58,1042,299],{"class":270},[58,1044,274],{"class":259},[58,1046,1047],{"class":277},"\"107027\"",[58,1049,281],{"class":259},[58,1051,1053,1055,1057,1060],{"class":60,"line":1052},90,[58,1054,312],{"class":270},[58,1056,274],{"class":259},[58,1058,1059],{"class":277},"\"Fort d'Aubervilliers\"",[58,1061,281],{"class":259},[58,1063,1065,1067,1069,1072],{"class":60,"line":1064},91,[58,1066,324],{"class":270},[58,1068,274],{"class":259},[58,1070,1071],{"class":270},"48.91494975634199",[58,1073,281],{"class":259},[58,1075,1077,1079,1081,1084],{"class":60,"line":1076},92,[58,1078,337],{"class":270},[58,1080,274],{"class":259},[58,1082,1083],{"class":270},"2.4044090887818634",[58,1085,281],{"class":259},[58,1087,1089,1091,1093],{"class":60,"line":1088},93,[58,1090,350],{"class":270},[58,1092,274],{"class":259},[58,1094,1095],{"class":277},"\"73695\"\n",[58,1097,1099],{"class":60,"line":1098},94,[58,1100,361],{"class":259},[58,1102,1104],{"class":60,"line":1103},95,[58,1105,294],{"class":259},[58,1107,1109,1111,1113,1116],{"class":60,"line":1108},96,[58,1110,299],{"class":270},[58,1112,274],{"class":259},[58,1114,1115],{"class":277},"\"107029\"",[58,1117,281],{"class":259},[58,1119,1121,1123,1125,1128],{"class":60,"line":1120},97,[58,1122,312],{"class":270},[58,1124,274],{"class":259},[58,1126,1127],{"class":277},"\"Aubervilliers Pantin - Quatre Chemins\"",[58,1129,281],{"class":259},[58,1131,1133,1135,1137,1140],{"class":60,"line":1132},98,[58,1134,324],{"class":270},[58,1136,274],{"class":259},[58,1138,1139],{"class":270},"48.90378388011075",[58,1141,281],{"class":259},[58,1143,1145,1147,1149,1152],{"class":60,"line":1144},99,[58,1146,337],{"class":270},[58,1148,274],{"class":259},[58,1150,1151],{"class":270},"2.392221221171115",[58,1153,281],{"class":259},[58,1155,1157,1159,1161],{"class":60,"line":1156},100,[58,1158,350],{"class":270},[58,1160,274],{"class":259},[58,1162,1163],{"class":277},"\"72460\"\n",[58,1165,1167],{"class":60,"line":1166},101,[58,1168,361],{"class":259},[58,1170,1172],{"class":60,"line":1171},102,[58,1173,294],{"class":259},[58,1175,1177,1179,1181,1184],{"class":60,"line":1176},103,[58,1178,299],{"class":270},[58,1180,274],{"class":259},[58,1182,1183],{"class":277},"\"117093\"",[58,1185,281],{"class":259},[58,1187,1189,1191,1193,1196],{"class":60,"line":1188},104,[58,1190,312],{"class":270},[58,1192,274],{"class":259},[58,1194,1195],{"class":277},"\"Mairie d'Aubervilliers\"",[58,1197,281],{"class":259},[58,1199,1201,1203,1205,1208],{"class":60,"line":1200},105,[58,1202,324],{"class":270},[58,1204,274],{"class":259},[58,1206,1207],{"class":270},"48.913710544615356",[58,1209,281],{"class":259},[58,1211,1213,1215,1217,1220],{"class":60,"line":1212},106,[58,1214,337],{"class":270},[58,1216,274],{"class":259},[58,1218,1219],{"class":270},"2.3807356063950937",[58,1221,281],{"class":259},[58,1223,1225,1227,1229],{"class":60,"line":1224},107,[58,1226,350],{"class":270},[58,1228,274],{"class":259},[58,1230,1231],{"class":277},"\"72524\"\n",[58,1233,1235],{"class":60,"line":1234},108,[58,1236,361],{"class":259},[58,1238,1240],{"class":60,"line":1239},109,[58,1241,294],{"class":259},[58,1243,1245,1247,1249,1252],{"class":60,"line":1244},110,[58,1246,299],{"class":270},[58,1248,274],{"class":259},[58,1250,1251],{"class":277},"\"103067\"",[58,1253,281],{"class":259},[58,1255,1257,1259,1261,1263],{"class":60,"line":1256},111,[58,1258,312],{"class":270},[58,1260,274],{"class":259},[58,1262,1023],{"class":277},[58,1264,281],{"class":259},[58,1266,1268,1270,1272,1275],{"class":60,"line":1267},112,[58,1269,324],{"class":270},[58,1271,274],{"class":259},[58,1273,1274],{"class":270},"48.881094426231876",[58,1276,281],{"class":259},[58,1278,1280,1282,1284,1287],{"class":60,"line":1279},113,[58,1281,337],{"class":270},[58,1283,274],{"class":259},[58,1285,1286],{"class":270},"2.3147210047461946",[58,1288,281],{"class":259},[58,1290,1292,1294,1296],{"class":60,"line":1291},114,[58,1293,350],{"class":270},[58,1295,274],{"class":259},[58,1297,1298],{"class":277},"\"71403\"\n",[58,1300,1302],{"class":60,"line":1301},115,[58,1303,498],{"class":259},[58,1305,1307],{"class":60,"line":1306},116,[58,1308,504],{"class":259},[58,1310,1312],{"class":60,"line":1311},117,[58,1313,510],{"class":259},[58,1315,1317],{"class":60,"line":1316},118,[58,1318,265],{"class":259},[58,1320,1322,1324,1326,1329],{"class":60,"line":1321},119,[58,1323,271],{"class":270},[58,1325,274],{"class":259},[58,1327,1328],{"class":277},"\"Porte de la Chapelle\"",[58,1330,281],{"class":259},[58,1332,1334,1336],{"class":60,"line":1333},120,[58,1335,286],{"class":270},[58,1337,289],{"class":259},[58,1339,1341],{"class":60,"line":1340},121,[58,1342,294],{"class":259},[58,1344,1346,1348,1350,1353],{"class":60,"line":1345},122,[58,1347,299],{"class":270},[58,1349,274],{"class":259},[58,1351,1352],{"class":277},"\"112085\"",[58,1354,281],{"class":259},[58,1356,1358,1360,1362,1364],{"class":60,"line":1357},123,[58,1359,312],{"class":270},[58,1361,274],{"class":259},[58,1363,1328],{"class":277},[58,1365,281],{"class":259},[58,1367,1369,1371,1373,1376],{"class":60,"line":1368},124,[58,1370,324],{"class":270},[58,1372,274],{"class":259},[58,1374,1375],{"class":270},"48.898392952351074",[58,1377,281],{"class":259},[58,1379,1381,1383,1385,1388],{"class":60,"line":1380},125,[58,1382,337],{"class":270},[58,1384,274],{"class":259},[58,1386,1387],{"class":270},"2.3593939011158835",[58,1389,281],{"class":259},[58,1391,1393,1395,1397],{"class":60,"line":1392},126,[58,1394,350],{"class":270},[58,1396,274],{"class":259},[58,1398,1399],{"class":277},"\"72064\"\n",[58,1401,1403],{"class":60,"line":1402},127,[58,1404,361],{"class":259},[58,1406,1408],{"class":60,"line":1407},128,[58,1409,294],{"class":259},[58,1411,1413,1415,1417,1420],{"class":60,"line":1412},129,[58,1414,299],{"class":270},[58,1416,274],{"class":259},[58,1418,1419],{"class":277},"\"102055\"",[58,1421,281],{"class":259},[58,1423,1425,1427,1429,1432],{"class":60,"line":1424},130,[58,1426,312],{"class":270},[58,1428,274],{"class":259},[58,1430,1431],{"class":277},"\"La Chapelle\"",[58,1433,281],{"class":259},[58,1435,1437,1439,1441,1444],{"class":60,"line":1436},131,[58,1438,324],{"class":270},[58,1440,274],{"class":259},[58,1442,1443],{"class":270},"48.88439967613092",[58,1445,281],{"class":259},[58,1447,1449,1451,1453,1456],{"class":60,"line":1448},132,[58,1450,337],{"class":270},[58,1452,274],{"class":259},[58,1454,1455],{"class":270},"2.360399500808731",[58,1457,281],{"class":259},[58,1459,1461,1463,1465],{"class":60,"line":1460},133,[58,1462,350],{"class":270},[58,1464,274],{"class":259},[58,1466,1467],{"class":277},"\"71434\"\n",[58,1469,1471],{"class":60,"line":1470},134,[58,1472,498],{"class":259},[58,1474,1476],{"class":60,"line":1475},135,[58,1477,504],{"class":259},[58,1479,1481],{"class":60,"line":1480},136,[58,1482,510],{"class":259},[58,1484,1486],{"class":60,"line":1485},137,[58,1487,265],{"class":259},[58,1489,1491,1493,1495,1498],{"class":60,"line":1490},138,[58,1492,271],{"class":270},[58,1494,274],{"class":259},[58,1496,1497],{"class":277},"\"Marcadet - Poissonniers\"",[58,1499,281],{"class":259},[58,1501,1503,1505],{"class":60,"line":1502},139,[58,1504,286],{"class":270},[58,1506,289],{"class":259},[58,1508,1510],{"class":60,"line":1509},140,[58,1511,294],{"class":259},[58,1513,1515,1517,1519,1522],{"class":60,"line":1514},141,[58,1516,299],{"class":270},[58,1518,274],{"class":259},[58,1520,1521],{"class":277},"\"112081\"",[58,1523,281],{"class":259},[58,1525,1527,1529,1531,1534],{"class":60,"line":1526},142,[58,1528,312],{"class":270},[58,1530,274],{"class":259},[58,1532,1533],{"class":277},"\"Marcadet-Poissonniers\"",[58,1535,281],{"class":259},[58,1537,1539,1541,1543,1546],{"class":60,"line":1538},143,[58,1540,324],{"class":270},[58,1542,274],{"class":259},[58,1544,1545],{"class":270},"48.89150083893872",[58,1547,281],{"class":259},[58,1549,1551,1553,1555,1558],{"class":60,"line":1550},144,[58,1552,337],{"class":270},[58,1554,274],{"class":259},[58,1556,1557],{"class":270},"2.3496204845329847",[58,1559,281],{"class":259},[58,1561,1563,1565,1567],{"class":60,"line":1562},145,[58,1564,350],{"class":270},[58,1566,274],{"class":259},[58,1568,1569],{"class":277},"\"71511\"\n",[58,1571,1573],{"class":60,"line":1572},146,[58,1574,361],{"class":259},[58,1576,1578],{"class":60,"line":1577},147,[58,1579,294],{"class":259},[58,1581,1583,1585,1587,1590],{"class":60,"line":1582},148,[58,1584,299],{"class":270},[58,1586,274],{"class":259},[58,1588,1589],{"class":277},"\"107049\"",[58,1591,281],{"class":259},[58,1593,1595,1597,1599,1602],{"class":60,"line":1594},149,[58,1596,312],{"class":270},[58,1598,274],{"class":259},[58,1600,1601],{"class":277},"\"Cadet\"",[58,1603,281],{"class":259},[58,1605,1607,1609,1611,1614],{"class":60,"line":1606},150,[58,1608,324],{"class":270},[58,1610,274],{"class":259},[58,1612,1613],{"class":270},"48.87600859287756",[58,1615,281],{"class":259},[58,1617,1619,1621,1623,1626],{"class":60,"line":1618},151,[58,1620,337],{"class":270},[58,1622,274],{"class":259},[58,1624,1625],{"class":270},"2.344572482089328",[58,1627,281],{"class":259},[58,1629,1631,1633,1635],{"class":60,"line":1630},152,[58,1632,350],{"class":270},[58,1634,274],{"class":259},[58,1636,1637],{"class":277},"\"71351\"\n",[58,1639,1641],{"class":60,"line":1640},153,[58,1642,498],{"class":259},[58,1644,1646],{"class":60,"line":1645},154,[58,1647,504],{"class":259},[58,1649,1651],{"class":60,"line":1650},155,[58,1652,510],{"class":259},[58,1654,1656],{"class":60,"line":1655},156,[58,1657,265],{"class":259},[58,1659,1661,1663,1665,1667],{"class":60,"line":1660},157,[58,1662,271],{"class":270},[58,1664,274],{"class":259},[58,1666,456],{"class":277},[58,1668,281],{"class":259},[58,1670,1672,1674],{"class":60,"line":1671},158,[58,1673,286],{"class":270},[58,1675,289],{"class":259},[58,1677,1679],{"class":60,"line":1678},159,[58,1680,294],{"class":259},[58,1682,1684,1686,1688,1690],{"class":60,"line":1683},160,[58,1685,299],{"class":270},[58,1687,274],{"class":259},[58,1689,304],{"class":277},[58,1691,281],{"class":259},[58,1693,1695,1697,1699,1701],{"class":60,"line":1694},161,[58,1696,312],{"class":270},[58,1698,274],{"class":259},[58,1700,278],{"class":277},[58,1702,281],{"class":259},[58,1704,1706,1708,1710,1712],{"class":60,"line":1705},162,[58,1707,324],{"class":270},[58,1709,274],{"class":259},[58,1711,329],{"class":270},[58,1713,281],{"class":259},[58,1715,1717,1719,1721,1723],{"class":60,"line":1716},163,[58,1718,337],{"class":270},[58,1720,274],{"class":259},[58,1722,342],{"class":270},[58,1724,281],{"class":259},[58,1726,1728,1730,1732],{"class":60,"line":1727},164,[58,1729,350],{"class":270},[58,1731,274],{"class":259},[58,1733,355],{"class":277},[58,1735,1737],{"class":60,"line":1736},165,[58,1738,361],{"class":259},[58,1740,1742],{"class":60,"line":1741},166,[58,1743,294],{"class":259},[58,1745,1747,1749,1751,1753],{"class":60,"line":1746},167,[58,1748,299],{"class":270},[58,1750,274],{"class":259},[58,1752,376],{"class":277},[58,1754,281],{"class":259},[58,1756,1758,1760,1762,1764],{"class":60,"line":1757},168,[58,1759,312],{"class":270},[58,1761,274],{"class":259},[58,1763,388],{"class":277},[58,1765,281],{"class":259},[58,1767,1769,1771,1773,1775],{"class":60,"line":1768},169,[58,1770,324],{"class":270},[58,1772,274],{"class":259},[58,1774,400],{"class":270},[58,1776,281],{"class":259},[58,1778,1780,1782,1784,1786],{"class":60,"line":1779},170,[58,1781,337],{"class":270},[58,1783,274],{"class":259},[58,1785,412],{"class":270},[58,1787,281],{"class":259},[58,1789,1791,1793,1795],{"class":60,"line":1790},171,[58,1792,350],{"class":270},[58,1794,274],{"class":259},[58,1796,424],{"class":277},[58,1798,1800],{"class":60,"line":1799},172,[58,1801,361],{"class":259},[58,1803,1805],{"class":60,"line":1804},173,[58,1806,294],{"class":259},[58,1808,1810,1812,1814,1816],{"class":60,"line":1809},174,[58,1811,299],{"class":270},[58,1813,274],{"class":259},[58,1815,444],{"class":277},[58,1817,281],{"class":259},[58,1819,1821,1823,1825,1827],{"class":60,"line":1820},175,[58,1822,312],{"class":270},[58,1824,274],{"class":259},[58,1826,456],{"class":277},[58,1828,281],{"class":259},[58,1830,1832,1834,1836,1838],{"class":60,"line":1831},176,[58,1833,324],{"class":270},[58,1835,274],{"class":259},[58,1837,468],{"class":270},[58,1839,281],{"class":259},[58,1841,1843,1845,1847,1849],{"class":60,"line":1842},177,[58,1844,337],{"class":270},[58,1846,274],{"class":259},[58,1848,480],{"class":270},[58,1850,281],{"class":259},[58,1852,1854,1856,1858],{"class":60,"line":1853},178,[58,1855,350],{"class":270},[58,1857,274],{"class":259},[58,1859,492],{"class":277},[58,1861,1863],{"class":60,"line":1862},179,[58,1864,498],{"class":259},[58,1866,1868],{"class":60,"line":1867},180,[58,1869,504],{"class":259},[58,1871,1873],{"class":60,"line":1872},181,[58,1874,510],{"class":259},[58,1876,1878],{"class":60,"line":1877},182,[58,1879,265],{"class":259},[58,1881,1883,1885,1887,1890],{"class":60,"line":1882},183,[58,1884,271],{"class":270},[58,1886,274],{"class":259},[58,1888,1889],{"class":277},"\"Esplanade de la Défense\"",[58,1891,281],{"class":259},[58,1893,1895,1897],{"class":60,"line":1894},184,[58,1896,286],{"class":270},[58,1898,289],{"class":259},[58,1900,1902],{"class":60,"line":1901},185,[58,1903,294],{"class":259},[58,1905,1907,1909,1911,1914],{"class":60,"line":1906},186,[58,1908,299],{"class":270},[58,1910,274],{"class":259},[58,1912,1913],{"class":277},"\"390\"",[58,1915,281],{"class":259},[58,1917,1919,1921,1923,1926],{"class":60,"line":1918},187,[58,1920,312],{"class":270},[58,1922,274],{"class":259},[58,1924,1925],{"class":277},"\"La Défense\"",[58,1927,281],{"class":259},[58,1929,1931,1933,1935,1938],{"class":60,"line":1930},188,[58,1932,324],{"class":270},[58,1934,274],{"class":259},[58,1936,1937],{"class":270},"48.89218707551516",[58,1939,281],{"class":259},[58,1941,1943,1945,1947,1950],{"class":60,"line":1942},189,[58,1944,337],{"class":270},[58,1946,274],{"class":259},[58,1948,1949],{"class":270},"2.2370180563950135",[58,1951,281],{"class":259},[58,1953,1955,1957,1959],{"class":60,"line":1954},190,[58,1956,350],{"class":270},[58,1958,274],{"class":259},[58,1960,1961],{"class":277},"\"71517\"\n",[58,1963,1965],{"class":60,"line":1964},191,[58,1966,361],{"class":259},[58,1968,1970],{"class":60,"line":1969},192,[58,1971,294],{"class":259},[58,1973,1975,1977,1979,1982],{"class":60,"line":1974},193,[58,1976,299],{"class":270},[58,1978,274],{"class":259},[58,1980,1981],{"class":277},"\"101079\"",[58,1983,281],{"class":259},[58,1985,1987,1989,1991,1993],{"class":60,"line":1986},194,[58,1988,312],{"class":270},[58,1990,274],{"class":259},[58,1992,1889],{"class":277},[58,1994,281],{"class":259},[58,1996,1998,2000,2002,2005],{"class":60,"line":1997},195,[58,1999,324],{"class":270},[58,2001,274],{"class":259},[58,2003,2004],{"class":270},"48.88813847667783",[58,2006,281],{"class":259},[58,2008,2010,2012,2014,2017],{"class":60,"line":2009},196,[58,2011,337],{"class":270},[58,2013,274],{"class":259},[58,2015,2016],{"class":270},"2.249792769009765",[58,2018,281],{"class":259},[58,2020,2022,2024,2026],{"class":60,"line":2021},197,[58,2023,350],{"class":270},[58,2025,274],{"class":259},[58,2027,2028],{"class":277},"\"71485\"\n",[58,2030,2032],{"class":60,"line":2031},198,[58,2033,498],{"class":259},[58,2035,2037],{"class":60,"line":2036},199,[58,2038,504],{"class":259},[58,2040,2042],{"class":60,"line":2041},200,[58,2043,510],{"class":259},[58,2045,2047],{"class":60,"line":2046},201,[58,2048,265],{"class":259},[58,2050,2052,2054,2056,2058],{"class":60,"line":2051},202,[58,2053,271],{"class":270},[58,2055,274],{"class":259},[58,2057,628],{"class":277},[58,2059,281],{"class":259},[58,2061,2063,2065],{"class":60,"line":2062},203,[58,2064,286],{"class":270},[58,2066,289],{"class":259},[58,2068,2070],{"class":60,"line":2069},204,[58,2071,294],{"class":259},[58,2073,2075,2077,2079,2081],{"class":60,"line":2074},205,[58,2076,299],{"class":270},[58,2078,274],{"class":259},[58,2080,549],{"class":277},[58,2082,281],{"class":259},[58,2084,2086,2088,2090,2092],{"class":60,"line":2085},206,[58,2087,312],{"class":270},[58,2089,274],{"class":259},[58,2091,525],{"class":277},[58,2093,281],{"class":259},[58,2095,2097,2099,2101,2103],{"class":60,"line":2096},207,[58,2098,324],{"class":270},[58,2100,274],{"class":259},[58,2102,572],{"class":270},[58,2104,281],{"class":259},[58,2106,2108,2110,2112,2114],{"class":60,"line":2107},208,[58,2109,337],{"class":270},[58,2111,274],{"class":259},[58,2113,584],{"class":270},[58,2115,281],{"class":259},[58,2117,2119,2121,2123],{"class":60,"line":2118},209,[58,2120,350],{"class":270},[58,2122,274],{"class":259},[58,2124,596],{"class":277},[58,2126,2128],{"class":60,"line":2127},210,[58,2129,361],{"class":259},[58,2131,2133],{"class":60,"line":2132},211,[58,2134,294],{"class":259},[58,2136,2138,2140,2142,2144],{"class":60,"line":2137},212,[58,2139,299],{"class":270},[58,2141,274],{"class":259},[58,2143,616],{"class":277},[58,2145,281],{"class":259},[58,2147,2149,2151,2153,2155],{"class":60,"line":2148},213,[58,2150,312],{"class":270},[58,2152,274],{"class":259},[58,2154,628],{"class":277},[58,2156,281],{"class":259},[58,2158,2160,2162,2164,2166],{"class":60,"line":2159},214,[58,2161,324],{"class":270},[58,2163,274],{"class":259},[58,2165,640],{"class":270},[58,2167,281],{"class":259},[58,2169,2171,2173,2175,2177],{"class":60,"line":2170},215,[58,2172,337],{"class":270},[58,2174,274],{"class":259},[58,2176,652],{"class":270},[58,2178,281],{"class":259},[58,2180,2182,2184,2186],{"class":60,"line":2181},216,[58,2183,350],{"class":270},[58,2185,274],{"class":259},[58,2187,664],{"class":277},[58,2189,2191],{"class":60,"line":2190},217,[58,2192,498],{"class":259},[58,2194,2196],{"class":60,"line":2195},218,[58,2197,504],{"class":259},[58,2199,2201],{"class":60,"line":2200},219,[58,2202,510],{"class":259},[58,2204,2206],{"class":60,"line":2205},220,[58,2207,265],{"class":259},[58,2209,2211,2213,2215,2217],{"class":60,"line":2210},221,[58,2212,271],{"class":270},[58,2214,274],{"class":259},[58,2216,1431],{"class":277},[58,2218,281],{"class":259},[58,2220,2222,2224],{"class":60,"line":2221},222,[58,2223,286],{"class":270},[58,2225,289],{"class":259},[58,2227,2229],{"class":60,"line":2228},223,[58,2230,294],{"class":259},[58,2232,2234,2236,2238,2240],{"class":60,"line":2233},224,[58,2235,299],{"class":270},[58,2237,274],{"class":259},[58,2239,1352],{"class":277},[58,2241,281],{"class":259},[58,2243,2245,2247,2249,2251],{"class":60,"line":2244},225,[58,2246,312],{"class":270},[58,2248,274],{"class":259},[58,2250,1328],{"class":277},[58,2252,281],{"class":259},[58,2254,2256,2258,2260,2262],{"class":60,"line":2255},226,[58,2257,324],{"class":270},[58,2259,274],{"class":259},[58,2261,1375],{"class":270},[58,2263,281],{"class":259},[58,2265,2267,2269,2271,2273],{"class":60,"line":2266},227,[58,2268,337],{"class":270},[58,2270,274],{"class":259},[58,2272,1387],{"class":270},[58,2274,281],{"class":259},[58,2276,2278,2280,2282],{"class":60,"line":2277},228,[58,2279,350],{"class":270},[58,2281,274],{"class":259},[58,2283,1399],{"class":277},[58,2285,2287],{"class":60,"line":2286},229,[58,2288,361],{"class":259},[58,2290,2292],{"class":60,"line":2291},230,[58,2293,294],{"class":259},[58,2295,2297,2299,2301,2303],{"class":60,"line":2296},231,[58,2298,299],{"class":270},[58,2300,274],{"class":259},[58,2302,1419],{"class":277},[58,2304,281],{"class":259},[58,2306,2308,2310,2312,2314],{"class":60,"line":2307},232,[58,2309,312],{"class":270},[58,2311,274],{"class":259},[58,2313,1431],{"class":277},[58,2315,281],{"class":259},[58,2317,2319,2321,2323,2325],{"class":60,"line":2318},233,[58,2320,324],{"class":270},[58,2322,274],{"class":259},[58,2324,1443],{"class":270},[58,2326,281],{"class":259},[58,2328,2330,2332,2334,2336],{"class":60,"line":2329},234,[58,2331,337],{"class":270},[58,2333,274],{"class":259},[58,2335,1455],{"class":270},[58,2337,281],{"class":259},[58,2339,2341,2343,2345],{"class":60,"line":2340},235,[58,2342,350],{"class":270},[58,2344,274],{"class":259},[58,2346,1467],{"class":277},[58,2348,2350],{"class":60,"line":2349},236,[58,2351,498],{"class":259},[58,2353,2355],{"class":60,"line":2354},237,[58,2356,504],{"class":259},[58,2358,2360],{"class":60,"line":2359},238,[58,2361,510],{"class":259},[58,2363,2365],{"class":60,"line":2364},239,[58,2366,265],{"class":259},[58,2368,2370,2372,2374,2377],{"class":60,"line":2369},240,[58,2371,271],{"class":270},[58,2373,274],{"class":259},[58,2375,2376],{"class":277},"\"Blanche\"",[58,2378,281],{"class":259},[58,2380,2382,2384],{"class":60,"line":2381},241,[58,2383,286],{"class":270},[58,2385,289],{"class":259},[58,2387,2389],{"class":60,"line":2388},242,[58,2390,294],{"class":259},[58,2392,2394,2396,2398,2401],{"class":60,"line":2393},243,[58,2395,299],{"class":270},[58,2397,274],{"class":259},[58,2399,2400],{"class":277},"\"107081\"",[58,2402,281],{"class":259},[58,2404,2406,2408,2410,2413],{"class":60,"line":2405},244,[58,2407,312],{"class":270},[58,2409,274],{"class":259},[58,2411,2412],{"class":277},"\"Maison Blanche\"",[58,2414,281],{"class":259},[58,2416,2418,2420,2422,2425],{"class":60,"line":2417},245,[58,2419,324],{"class":270},[58,2421,274],{"class":259},[58,2423,2424],{"class":270},"48.82218265762191",[58,2426,281],{"class":259},[58,2428,2430,2432,2434,2437],{"class":60,"line":2429},246,[58,2431,337],{"class":270},[58,2433,274],{"class":259},[58,2435,2436],{"class":270},"2.3585513482022034",[58,2438,281],{"class":259},[58,2440,2442,2444,2446],{"class":60,"line":2441},247,[58,2443,350],{"class":270},[58,2445,274],{"class":259},[58,2447,2448],{"class":277},"\"70645\"\n",[58,2450,2452],{"class":60,"line":2451},248,[58,2453,361],{"class":259},[58,2455,2457],{"class":60,"line":2456},249,[58,2458,294],{"class":259},[58,2460,2462,2464,2466,2469],{"class":60,"line":2461},250,[58,2463,299],{"class":270},[58,2465,274],{"class":259},[58,2467,2468],{"class":277},"\"102063\"",[58,2470,281],{"class":259},[58,2472,2474,2476,2478,2480],{"class":60,"line":2473},251,[58,2475,312],{"class":270},[58,2477,274],{"class":259},[58,2479,2376],{"class":277},[58,2481,281],{"class":259},[58,2483,2485,2487,2489,2492],{"class":60,"line":2484},252,[58,2486,324],{"class":270},[58,2488,274],{"class":259},[58,2490,2491],{"class":270},"48.88355628923431",[58,2493,281],{"class":259},[58,2495,2497,2499,2501,2504],{"class":60,"line":2496},253,[58,2498,337],{"class":270},[58,2500,274],{"class":259},[58,2502,2503],{"class":270},"2.3333796724221587",[58,2505,281],{"class":259},[58,2507,2509,2511,2513],{"class":60,"line":2508},254,[58,2510,350],{"class":270},[58,2512,274],{"class":259},[58,2514,2515],{"class":277},"\"71420\"\n",[58,2517,2519],{"class":60,"line":2518},255,[58,2520,498],{"class":259},[58,2522,2524],{"class":60,"line":2523},256,[58,2525,504],{"class":259},[58,2527,2529],{"class":60,"line":2528},257,[58,2530,510],{"class":259},[58,2532,2534],{"class":60,"line":2533},258,[58,2535,265],{"class":259},[58,2537,2539,2541,2543,2545],{"class":60,"line":2538},259,[58,2540,271],{"class":270},[58,2542,274],{"class":259},[58,2544,388],{"class":277},[58,2546,281],{"class":259},[58,2548,2550,2552],{"class":60,"line":2549},260,[58,2551,286],{"class":270},[58,2553,289],{"class":259},[58,2555,2557],{"class":60,"line":2556},261,[58,2558,294],{"class":259},[58,2560,2562,2564,2566,2568],{"class":60,"line":2561},262,[58,2563,299],{"class":270},[58,2565,274],{"class":259},[58,2567,304],{"class":277},[58,2569,281],{"class":259},[58,2571,2573,2575,2577,2579],{"class":60,"line":2572},263,[58,2574,312],{"class":270},[58,2576,274],{"class":259},[58,2578,278],{"class":277},[58,2580,281],{"class":259},[58,2582,2584,2586,2588,2590],{"class":60,"line":2583},264,[58,2585,324],{"class":270},[58,2587,274],{"class":259},[58,2589,329],{"class":270},[58,2591,281],{"class":259},[58,2593,2595,2597,2599,2601],{"class":60,"line":2594},265,[58,2596,337],{"class":270},[58,2598,274],{"class":259},[58,2600,342],{"class":270},[58,2602,281],{"class":259},[58,2604,2606,2608,2610],{"class":60,"line":2605},266,[58,2607,350],{"class":270},[58,2609,274],{"class":259},[58,2611,355],{"class":277},[58,2613,2615],{"class":60,"line":2614},267,[58,2616,361],{"class":259},[58,2618,2620],{"class":60,"line":2619},268,[58,2621,294],{"class":259},[58,2623,2625,2627,2629,2631],{"class":60,"line":2624},269,[58,2626,299],{"class":270},[58,2628,274],{"class":259},[58,2630,376],{"class":277},[58,2632,281],{"class":259},[58,2634,2636,2638,2640,2642],{"class":60,"line":2635},270,[58,2637,312],{"class":270},[58,2639,274],{"class":259},[58,2641,388],{"class":277},[58,2643,281],{"class":259},[58,2645,2647,2649,2651,2653],{"class":60,"line":2646},271,[58,2648,324],{"class":270},[58,2650,274],{"class":259},[58,2652,400],{"class":270},[58,2654,281],{"class":259},[58,2656,2658,2660,2662,2664],{"class":60,"line":2657},272,[58,2659,337],{"class":270},[58,2661,274],{"class":259},[58,2663,412],{"class":270},[58,2665,281],{"class":259},[58,2667,2669,2671,2673],{"class":60,"line":2668},273,[58,2670,350],{"class":270},[58,2672,274],{"class":259},[58,2674,424],{"class":277},[58,2676,2678],{"class":60,"line":2677},274,[58,2679,361],{"class":259},[58,2681,2683],{"class":60,"line":2682},275,[58,2684,294],{"class":259},[58,2686,2688,2690,2692,2694],{"class":60,"line":2687},276,[58,2689,299],{"class":270},[58,2691,274],{"class":259},[58,2693,444],{"class":277},[58,2695,281],{"class":259},[58,2697,2699,2701,2703,2705],{"class":60,"line":2698},277,[58,2700,312],{"class":270},[58,2702,274],{"class":259},[58,2704,456],{"class":277},[58,2706,281],{"class":259},[58,2708,2710,2712,2714,2716],{"class":60,"line":2709},278,[58,2711,324],{"class":270},[58,2713,274],{"class":259},[58,2715,468],{"class":270},[58,2717,281],{"class":259},[58,2719,2721,2723,2725,2727],{"class":60,"line":2720},279,[58,2722,337],{"class":270},[58,2724,274],{"class":259},[58,2726,480],{"class":270},[58,2728,281],{"class":259},[58,2730,2732,2734,2736],{"class":60,"line":2731},280,[58,2733,350],{"class":270},[58,2735,274],{"class":259},[58,2737,492],{"class":277},[58,2739,2741],{"class":60,"line":2740},281,[58,2742,498],{"class":259},[58,2744,2746],{"class":60,"line":2745},282,[58,2747,504],{"class":259},[58,2749,2751],{"class":60,"line":2750},283,[58,2752,510],{"class":259},[58,2754,2756],{"class":60,"line":2755},284,[58,2757,265],{"class":259},[58,2759,2761,2763,2765,2768],{"class":60,"line":2760},285,[58,2762,271],{"class":270},[58,2764,274],{"class":259},[58,2766,2767],{"class":277},"\"Porte de Saint-Ouen\"",[58,2769,281],{"class":259},[58,2771,2773,2775],{"class":60,"line":2772},286,[58,2774,286],{"class":270},[58,2776,289],{"class":259},[58,2778,2780],{"class":60,"line":2779},287,[58,2781,294],{"class":259},[58,2783,2785,2787,2789,2792],{"class":60,"line":2784},288,[58,2786,299],{"class":270},[58,2788,274],{"class":259},[58,2790,2791],{"class":277},"\"430\"",[58,2793,281],{"class":259},[58,2795,2797,2799,2801,2804],{"class":60,"line":2796},289,[58,2798,312],{"class":270},[58,2800,274],{"class":259},[58,2802,2803],{"class":277},"\"Saint-Ouen\"",[58,2805,281],{"class":259},[58,2807,2809,2811,2813,2816],{"class":60,"line":2808},290,[58,2810,324],{"class":270},[58,2812,274],{"class":259},[58,2814,2815],{"class":270},"48.90456638896682",[58,2817,281],{"class":259},[58,2819,2821,2823,2825,2828],{"class":60,"line":2820},291,[58,2822,337],{"class":270},[58,2824,274],{"class":259},[58,2826,2827],{"class":270},"2.3226263683342263",[58,2829,281],{"class":259},[58,2831,2833,2835,2837],{"class":60,"line":2832},292,[58,2834,350],{"class":270},[58,2836,274],{"class":259},[58,2838,2839],{"class":277},"\"72126\"\n",[58,2841,2843],{"class":60,"line":2842},293,[58,2844,361],{"class":259},[58,2846,2848],{"class":60,"line":2847},294,[58,2849,294],{"class":259},[58,2851,2853,2855,2857,2860],{"class":60,"line":2852},295,[58,2854,299],{"class":270},[58,2856,274],{"class":259},[58,2858,2859],{"class":277},"\"114071\"",[58,2861,281],{"class":259},[58,2863,2865,2867,2869,2871],{"class":60,"line":2864},296,[58,2866,312],{"class":270},[58,2868,274],{"class":259},[58,2870,2767],{"class":277},[58,2872,281],{"class":259},[58,2874,2876,2878,2880,2883],{"class":60,"line":2875},297,[58,2877,324],{"class":270},[58,2879,274],{"class":259},[58,2881,2882],{"class":270},"48.89737479459521",[58,2884,281],{"class":259},[58,2886,2888,2890,2892,2895],{"class":60,"line":2887},298,[58,2889,337],{"class":270},[58,2891,274],{"class":259},[58,2893,2894],{"class":270},"2.3289428127798923",[58,2896,281],{"class":259},[58,2898,2900,2902,2904],{"class":60,"line":2899},299,[58,2901,350],{"class":270},[58,2903,274],{"class":259},[58,2905,2906],{"class":277},"\"72078\"\n",[58,2908,2910],{"class":60,"line":2909},300,[58,2911,498],{"class":259},[58,2913,2915],{"class":60,"line":2914},301,[58,2916,504],{"class":259},[58,2918,2920],{"class":60,"line":2919},302,[58,2921,510],{"class":259},[58,2923,2925],{"class":60,"line":2924},303,[58,2926,265],{"class":259},[58,2928,2930,2932,2934,2937],{"class":60,"line":2929},304,[58,2931,271],{"class":270},[58,2933,274],{"class":259},[58,2935,2936],{"class":277},"\"Asnières - Gennevilliers Les Courtilles\"",[58,2938,281],{"class":259},[58,2940,2942,2944],{"class":60,"line":2941},305,[58,2943,286],{"class":270},[58,2945,289],{"class":259},[58,2947,2949],{"class":60,"line":2948},306,[58,2950,294],{"class":259},[58,2952,2954,2956,2958,2961],{"class":60,"line":2953},307,[58,2955,299],{"class":270},[58,2957,274],{"class":259},[58,2959,2960],{"class":277},"\"113079\"",[58,2962,281],{"class":259},[58,2964,2966,2968,2970,2973],{"class":60,"line":2965},308,[58,2967,312],{"class":270},[58,2969,274],{"class":259},[58,2971,2972],{"class":277},"\"Les Courtilles\"",[58,2974,281],{"class":259},[58,2976,2978,2980,2982,2985],{"class":60,"line":2977},309,[58,2979,324],{"class":270},[58,2981,274],{"class":259},[58,2983,2984],{"class":270},"48.930757002402125",[58,2986,281],{"class":259},[58,2988,2990,2992,2994,2997],{"class":60,"line":2989},310,[58,2991,337],{"class":270},[58,2993,274],{"class":259},[58,2995,2996],{"class":270},"2.2841744482832955",[58,2998,281],{"class":259},[58,3000,3002,3004,3006],{"class":60,"line":3001},311,[58,3003,350],{"class":270},[58,3005,274],{"class":259},[58,3007,3008],{"class":277},"\"72286\"\n",[58,3010,3012],{"class":60,"line":3011},312,[58,3013,361],{"class":259},[58,3015,3017],{"class":60,"line":3016},313,[58,3018,294],{"class":259},[58,3020,3022,3024,3026,3028],{"class":60,"line":3021},314,[58,3023,299],{"class":270},[58,3025,274],{"class":259},[58,3027,1251],{"class":277},[58,3029,281],{"class":259},[58,3031,3033,3035,3037,3039],{"class":60,"line":3032},315,[58,3034,312],{"class":270},[58,3036,274],{"class":259},[58,3038,1023],{"class":277},[58,3040,281],{"class":259},[58,3042,3044,3046,3048,3050],{"class":60,"line":3043},316,[58,3045,324],{"class":270},[58,3047,274],{"class":259},[58,3049,1274],{"class":270},[58,3051,281],{"class":259},[58,3053,3055,3057,3059,3061],{"class":60,"line":3054},317,[58,3056,337],{"class":270},[58,3058,274],{"class":259},[58,3060,1286],{"class":270},[58,3062,281],{"class":259},[58,3064,3066,3068,3070],{"class":60,"line":3065},318,[58,3067,350],{"class":270},[58,3069,274],{"class":259},[58,3071,1298],{"class":277},[58,3073,3075],{"class":60,"line":3074},319,[58,3076,498],{"class":259},[58,3078,3080],{"class":60,"line":3079},320,[58,3081,504],{"class":259},[58,3083,3085],{"class":60,"line":3084},321,[58,3086,510],{"class":259},[58,3088,3090],{"class":60,"line":3089},322,[58,3091,265],{"class":259},[58,3093,3095,3097,3099,3102],{"class":60,"line":3094},323,[58,3096,271],{"class":270},[58,3098,274],{"class":259},[58,3100,3101],{"class":277},"\"Mairie de Saint-Ouen\"",[58,3103,281],{"class":259},[58,3105,3107,3109],{"class":60,"line":3106},324,[58,3108,286],{"class":270},[58,3110,289],{"class":259},[58,3112,3114],{"class":60,"line":3113},325,[58,3115,294],{"class":259},[58,3117,3119,3121,3123,3125],{"class":60,"line":3118},326,[58,3120,299],{"class":270},[58,3122,274],{"class":259},[58,3124,2791],{"class":277},[58,3126,281],{"class":259},[58,3128,3130,3132,3134,3136],{"class":60,"line":3129},327,[58,3131,312],{"class":270},[58,3133,274],{"class":259},[58,3135,2803],{"class":277},[58,3137,281],{"class":259},[58,3139,3141,3143,3145,3147],{"class":60,"line":3140},328,[58,3142,324],{"class":270},[58,3144,274],{"class":259},[58,3146,2815],{"class":270},[58,3148,281],{"class":259},[58,3150,3152,3154,3156,3158],{"class":60,"line":3151},329,[58,3153,337],{"class":270},[58,3155,274],{"class":259},[58,3157,2827],{"class":270},[58,3159,281],{"class":259},[58,3161,3163,3165,3167],{"class":60,"line":3162},330,[58,3164,350],{"class":270},[58,3166,274],{"class":259},[58,3168,2839],{"class":277},[58,3170,3172],{"class":60,"line":3171},331,[58,3173,361],{"class":259},[58,3175,3177],{"class":60,"line":3176},332,[58,3178,294],{"class":259},[58,3180,3182,3184,3186,3189],{"class":60,"line":3181},333,[58,3183,299],{"class":270},[58,3185,274],{"class":259},[58,3187,3188],{"class":277},"\"114075\"",[58,3190,281],{"class":259},[58,3192,3194,3196,3198,3200],{"class":60,"line":3193},334,[58,3195,312],{"class":270},[58,3197,274],{"class":259},[58,3199,3101],{"class":277},[58,3201,281],{"class":259},[58,3203,3205,3207,3209,3212],{"class":60,"line":3204},335,[58,3206,324],{"class":270},[58,3208,274],{"class":259},[58,3210,3211],{"class":270},"48.91258349677915",[58,3213,281],{"class":259},[58,3215,3217,3219,3221,3224],{"class":60,"line":3216},336,[58,3218,337],{"class":270},[58,3220,274],{"class":259},[58,3222,3223],{"class":270},"2.3342940159066474",[58,3225,281],{"class":259},[58,3227,3229,3231,3233],{"class":60,"line":3228},337,[58,3230,350],{"class":270},[58,3232,274],{"class":259},[58,3234,3235],{"class":277},"\"72168\"\n",[58,3237,3239],{"class":60,"line":3238},338,[58,3240,498],{"class":259},[58,3242,3244],{"class":60,"line":3243},339,[58,3245,504],{"class":259},[58,3247,3249],{"class":60,"line":3248},340,[58,3250,510],{"class":259},[58,3252,3254],{"class":60,"line":3253},341,[58,3255,265],{"class":259},[58,3257,3259,3261,3263,3266],{"class":60,"line":3258},342,[58,3260,271],{"class":270},[58,3262,274],{"class":259},[58,3264,3265],{"class":277},"\"Pont Marie (Cité des Arts)\"",[58,3267,281],{"class":259},[58,3269,3271,3273],{"class":60,"line":3270},343,[58,3272,286],{"class":270},[58,3274,289],{"class":259},[58,3276,3278],{"class":60,"line":3277},344,[58,3279,294],{"class":259},[58,3281,3283,3285,3287,3290],{"class":60,"line":3282},345,[58,3284,299],{"class":270},[58,3286,274],{"class":259},[58,3288,3289],{"class":277},"\"107065\"",[58,3291,281],{"class":259},[58,3293,3295,3297,3299,3302],{"class":60,"line":3294},346,[58,3296,312],{"class":270},[58,3298,274],{"class":259},[58,3300,3301],{"class":277},"\"Pont Marie\"",[58,3303,281],{"class":259},[58,3305,3307,3309,3311,3314],{"class":60,"line":3306},347,[58,3308,324],{"class":270},[58,3310,274],{"class":259},[58,3312,3313],{"class":270},"48.85357547245371",[58,3315,281],{"class":259},[58,3317,3319,3321,3323,3326],{"class":60,"line":3318},348,[58,3320,337],{"class":270},[58,3322,274],{"class":259},[58,3324,3325],{"class":270},"2.357162568881775",[58,3327,281],{"class":259},[58,3329,3331,3333,3335],{"class":60,"line":3330},349,[58,3332,350],{"class":270},[58,3334,274],{"class":259},[58,3336,3337],{"class":277},"\"71217\"\n",[58,3339,3341],{"class":60,"line":3340},350,[58,3342,361],{"class":259},[58,3344,3346],{"class":60,"line":3345},351,[58,3347,294],{"class":259},[58,3349,3351,3353,3355,3358],{"class":60,"line":3350},352,[58,3352,299],{"class":270},[58,3354,274],{"class":259},[58,3356,3357],{"class":277},"\"104055\"",[58,3359,281],{"class":259},[58,3361,3363,3365,3367,3370],{"class":60,"line":3362},353,[58,3364,312],{"class":270},[58,3366,274],{"class":259},[58,3368,3369],{"class":277},"\"Cité\"",[58,3371,281],{"class":259},[58,3373,3375,3377,3379,3382],{"class":60,"line":3374},354,[58,3376,324],{"class":270},[58,3378,274],{"class":259},[58,3380,3381],{"class":270},"48.854936379230175",[58,3383,281],{"class":259},[58,3385,3387,3389,3391,3394],{"class":60,"line":3386},355,[58,3388,337],{"class":270},[58,3390,274],{"class":259},[58,3392,3393],{"class":270},"2.347321318407715",[58,3395,281],{"class":259},[58,3397,3399,3401,3403],{"class":60,"line":3398},356,[58,3400,350],{"class":270},[58,3402,274],{"class":259},[58,3404,3405],{"class":277},"\"71223\"\n",[58,3407,3409],{"class":60,"line":3408},357,[58,3410,498],{"class":259},[58,3412,3414],{"class":60,"line":3413},358,[58,3415,504],{"class":259},[58,3417,3419],{"class":60,"line":3418},359,[58,3420,510],{"class":259},[58,3422,3424],{"class":60,"line":3423},360,[58,3425,265],{"class":259},[58,3427,3429,3431,3433,3435],{"class":60,"line":3428},361,[58,3430,271],{"class":270},[58,3432,274],{"class":259},[58,3434,2412],{"class":277},[58,3436,281],{"class":259},[58,3438,3440,3442],{"class":60,"line":3439},362,[58,3441,286],{"class":270},[58,3443,289],{"class":259},[58,3445,3447],{"class":60,"line":3446},363,[58,3448,294],{"class":259},[58,3450,3452,3454,3456,3458],{"class":60,"line":3451},364,[58,3453,299],{"class":270},[58,3455,274],{"class":259},[58,3457,2400],{"class":277},[58,3459,281],{"class":259},[58,3461,3463,3465,3467,3469],{"class":60,"line":3462},365,[58,3464,312],{"class":270},[58,3466,274],{"class":259},[58,3468,2412],{"class":277},[58,3470,281],{"class":259},[58,3472,3474,3476,3478,3480],{"class":60,"line":3473},366,[58,3475,324],{"class":270},[58,3477,274],{"class":259},[58,3479,2424],{"class":270},[58,3481,281],{"class":259},[58,3483,3485,3487,3489,3491],{"class":60,"line":3484},367,[58,3486,337],{"class":270},[58,3488,274],{"class":259},[58,3490,2436],{"class":270},[58,3492,281],{"class":259},[58,3494,3496,3498,3500],{"class":60,"line":3495},368,[58,3497,350],{"class":270},[58,3499,274],{"class":259},[58,3501,2448],{"class":277},[58,3503,3505],{"class":60,"line":3504},369,[58,3506,361],{"class":259},[58,3508,3510],{"class":60,"line":3509},370,[58,3511,294],{"class":259},[58,3513,3515,3517,3519,3521],{"class":60,"line":3514},371,[58,3516,299],{"class":270},[58,3518,274],{"class":259},[58,3520,2468],{"class":277},[58,3522,281],{"class":259},[58,3524,3526,3528,3530,3532],{"class":60,"line":3525},372,[58,3527,312],{"class":270},[58,3529,274],{"class":259},[58,3531,2376],{"class":277},[58,3533,281],{"class":259},[58,3535,3537,3539,3541,3543],{"class":60,"line":3536},373,[58,3538,324],{"class":270},[58,3540,274],{"class":259},[58,3542,2491],{"class":270},[58,3544,281],{"class":259},[58,3546,3548,3550,3552,3554],{"class":60,"line":3547},374,[58,3549,337],{"class":270},[58,3551,274],{"class":259},[58,3553,2503],{"class":270},[58,3555,281],{"class":259},[58,3557,3559,3561,3563],{"class":60,"line":3558},375,[58,3560,350],{"class":270},[58,3562,274],{"class":259},[58,3564,2515],{"class":277},[58,3566,3568],{"class":60,"line":3567},376,[58,3569,498],{"class":259},[58,3571,3573],{"class":60,"line":3572},377,[58,3574,504],{"class":259},[58,3576,3578],{"class":60,"line":3577},378,[58,3579,510],{"class":259},[58,3581,3583],{"class":60,"line":3582},379,[58,3584,265],{"class":259},[58,3586,3588,3590,3592,3594],{"class":60,"line":3587},380,[58,3589,271],{"class":270},[58,3591,274],{"class":259},[58,3593,1601],{"class":277},[58,3595,281],{"class":259},[58,3597,3599,3601],{"class":60,"line":3598},381,[58,3600,286],{"class":270},[58,3602,289],{"class":259},[58,3604,3606],{"class":60,"line":3605},382,[58,3607,294],{"class":259},[58,3609,3611,3613,3615,3617],{"class":60,"line":3610},383,[58,3612,299],{"class":270},[58,3614,274],{"class":259},[58,3616,1521],{"class":277},[58,3618,281],{"class":259},[58,3620,3622,3624,3626,3628],{"class":60,"line":3621},384,[58,3623,312],{"class":270},[58,3625,274],{"class":259},[58,3627,1533],{"class":277},[58,3629,281],{"class":259},[58,3631,3633,3635,3637,3639],{"class":60,"line":3632},385,[58,3634,324],{"class":270},[58,3636,274],{"class":259},[58,3638,1545],{"class":270},[58,3640,281],{"class":259},[58,3642,3644,3646,3648,3650],{"class":60,"line":3643},386,[58,3645,337],{"class":270},[58,3647,274],{"class":259},[58,3649,1557],{"class":270},[58,3651,281],{"class":259},[58,3653,3655,3657,3659],{"class":60,"line":3654},387,[58,3656,350],{"class":270},[58,3658,274],{"class":259},[58,3660,1569],{"class":277},[58,3662,3664],{"class":60,"line":3663},388,[58,3665,361],{"class":259},[58,3667,3669],{"class":60,"line":3668},389,[58,3670,294],{"class":259},[58,3672,3674,3676,3678,3680],{"class":60,"line":3673},390,[58,3675,299],{"class":270},[58,3677,274],{"class":259},[58,3679,1589],{"class":277},[58,3681,281],{"class":259},[58,3683,3685,3687,3689,3691],{"class":60,"line":3684},391,[58,3686,312],{"class":270},[58,3688,274],{"class":259},[58,3690,1601],{"class":277},[58,3692,281],{"class":259},[58,3694,3696,3698,3700,3702],{"class":60,"line":3695},392,[58,3697,324],{"class":270},[58,3699,274],{"class":259},[58,3701,1613],{"class":270},[58,3703,281],{"class":259},[58,3705,3707,3709,3711,3713],{"class":60,"line":3706},393,[58,3708,337],{"class":270},[58,3710,274],{"class":259},[58,3712,1625],{"class":270},[58,3714,281],{"class":259},[58,3716,3718,3720,3722],{"class":60,"line":3717},394,[58,3719,350],{"class":270},[58,3721,274],{"class":259},[58,3723,1637],{"class":277},[58,3725,3727],{"class":60,"line":3726},395,[58,3728,498],{"class":259},[58,3730,3732],{"class":60,"line":3731},396,[58,3733,504],{"class":259},[58,3735,3737],{"class":60,"line":3736},397,[58,3738,510],{"class":259},[58,3740,3742],{"class":60,"line":3741},398,[58,3743,265],{"class":259},[58,3745,3747,3749,3751,3753],{"class":60,"line":3746},399,[58,3748,271],{"class":270},[58,3750,274],{"class":259},[58,3752,1059],{"class":277},[58,3754,281],{"class":259},[58,3756,3758,3760],{"class":60,"line":3757},400,[58,3759,286],{"class":270},[58,3761,289],{"class":259},[58,3763,3765],{"class":60,"line":3764},401,[58,3766,294],{"class":259},[58,3768,3770,3772,3774,3776],{"class":60,"line":3769},402,[58,3771,299],{"class":270},[58,3773,274],{"class":259},[58,3775,1047],{"class":277},[58,3777,281],{"class":259},[58,3779,3781,3783,3785,3787],{"class":60,"line":3780},403,[58,3782,312],{"class":270},[58,3784,274],{"class":259},[58,3786,1059],{"class":277},[58,3788,281],{"class":259},[58,3790,3792,3794,3796,3798],{"class":60,"line":3791},404,[58,3793,324],{"class":270},[58,3795,274],{"class":259},[58,3797,1071],{"class":270},[58,3799,281],{"class":259},[58,3801,3803,3805,3807,3809],{"class":60,"line":3802},405,[58,3804,337],{"class":270},[58,3806,274],{"class":259},[58,3808,1083],{"class":270},[58,3810,281],{"class":259},[58,3812,3814,3816,3818],{"class":60,"line":3813},406,[58,3815,350],{"class":270},[58,3817,274],{"class":259},[58,3819,1095],{"class":277},[58,3821,3823],{"class":60,"line":3822},407,[58,3824,361],{"class":259},[58,3826,3828],{"class":60,"line":3827},408,[58,3829,294],{"class":259},[58,3831,3833,3835,3837,3839],{"class":60,"line":3832},409,[58,3834,299],{"class":270},[58,3836,274],{"class":259},[58,3838,1251],{"class":277},[58,3840,281],{"class":259},[58,3842,3844,3846,3848,3850],{"class":60,"line":3843},410,[58,3845,312],{"class":270},[58,3847,274],{"class":259},[58,3849,1023],{"class":277},[58,3851,281],{"class":259},[58,3853,3855,3857,3859,3861],{"class":60,"line":3854},411,[58,3856,324],{"class":270},[58,3858,274],{"class":259},[58,3860,1274],{"class":270},[58,3862,281],{"class":259},[58,3864,3866,3868,3870,3872],{"class":60,"line":3865},412,[58,3867,337],{"class":270},[58,3869,274],{"class":259},[58,3871,1286],{"class":270},[58,3873,281],{"class":259},[58,3875,3877,3879,3881],{"class":60,"line":3876},413,[58,3878,350],{"class":270},[58,3880,274],{"class":259},[58,3882,1298],{"class":277},[58,3884,3886],{"class":60,"line":3885},414,[58,3887,498],{"class":259},[58,3889,3891],{"class":60,"line":3890},415,[58,3892,504],{"class":259},[58,3894,3896],{"class":60,"line":3895},416,[58,3897,510],{"class":259},[58,3899,3901],{"class":60,"line":3900},417,[58,3902,265],{"class":259},[58,3904,3906,3908,3910,3913],{"class":60,"line":3905},418,[58,3907,271],{"class":270},[58,3909,274],{"class":259},[58,3911,3912],{"class":277},"\"Aubervilliers-Pantin Quatre Chemins\"",[58,3914,281],{"class":259},[58,3916,3918,3920],{"class":60,"line":3917},419,[58,3919,286],{"class":270},[58,3921,289],{"class":259},[58,3923,3925],{"class":60,"line":3924},420,[58,3926,294],{"class":259},[58,3928,3930,3932,3934,3936],{"class":60,"line":3929},421,[58,3931,299],{"class":270},[58,3933,274],{"class":259},[58,3935,1115],{"class":277},[58,3937,281],{"class":259},[58,3939,3941,3943,3945,3947],{"class":60,"line":3940},422,[58,3942,312],{"class":270},[58,3944,274],{"class":259},[58,3946,1127],{"class":277},[58,3948,281],{"class":259},[58,3950,3952,3954,3956,3958],{"class":60,"line":3951},423,[58,3953,324],{"class":270},[58,3955,274],{"class":259},[58,3957,1139],{"class":270},[58,3959,281],{"class":259},[58,3961,3963,3965,3967,3969],{"class":60,"line":3962},424,[58,3964,337],{"class":270},[58,3966,274],{"class":259},[58,3968,1151],{"class":270},[58,3970,281],{"class":259},[58,3972,3974,3976,3978],{"class":60,"line":3973},425,[58,3975,350],{"class":270},[58,3977,274],{"class":259},[58,3979,1163],{"class":277},[58,3981,3983],{"class":60,"line":3982},426,[58,3984,361],{"class":259},[58,3986,3988],{"class":60,"line":3987},427,[58,3989,294],{"class":259},[58,3991,3993,3995,3997,3999],{"class":60,"line":3992},428,[58,3994,299],{"class":270},[58,3996,274],{"class":259},[58,3998,1251],{"class":277},[58,4000,281],{"class":259},[58,4002,4004,4006,4008,4010],{"class":60,"line":4003},429,[58,4005,312],{"class":270},[58,4007,274],{"class":259},[58,4009,1023],{"class":277},[58,4011,281],{"class":259},[58,4013,4015,4017,4019,4021],{"class":60,"line":4014},430,[58,4016,324],{"class":270},[58,4018,274],{"class":259},[58,4020,1274],{"class":270},[58,4022,281],{"class":259},[58,4024,4026,4028,4030,4032],{"class":60,"line":4025},431,[58,4027,337],{"class":270},[58,4029,274],{"class":259},[58,4031,1286],{"class":270},[58,4033,281],{"class":259},[58,4035,4037,4039,4041],{"class":60,"line":4036},432,[58,4038,350],{"class":270},[58,4040,274],{"class":259},[58,4042,1298],{"class":277},[58,4044,4046],{"class":60,"line":4045},433,[58,4047,498],{"class":259},[58,4049,4051],{"class":60,"line":4050},434,[58,4052,504],{"class":259},[58,4054,4056],{"class":60,"line":4055},435,[58,4057,510],{"class":259},[58,4059,4061],{"class":60,"line":4060},436,[58,4062,265],{"class":259},[58,4064,4066,4068,4070,4072],{"class":60,"line":4065},437,[58,4067,271],{"class":270},[58,4069,274],{"class":259},[58,4071,2803],{"class":277},[58,4073,281],{"class":259},[58,4075,4077,4079],{"class":60,"line":4076},438,[58,4078,286],{"class":270},[58,4080,289],{"class":259},[58,4082,4084],{"class":60,"line":4083},439,[58,4085,294],{"class":259},[58,4087,4089,4091,4093,4095],{"class":60,"line":4088},440,[58,4090,299],{"class":270},[58,4092,274],{"class":259},[58,4094,2791],{"class":277},[58,4096,281],{"class":259},[58,4098,4100,4102,4104,4106],{"class":60,"line":4099},441,[58,4101,312],{"class":270},[58,4103,274],{"class":259},[58,4105,2803],{"class":277},[58,4107,281],{"class":259},[58,4109,4111,4113,4115,4117],{"class":60,"line":4110},442,[58,4112,324],{"class":270},[58,4114,274],{"class":259},[58,4116,2815],{"class":270},[58,4118,281],{"class":259},[58,4120,4122,4124,4126,4128],{"class":60,"line":4121},443,[58,4123,337],{"class":270},[58,4125,274],{"class":259},[58,4127,2827],{"class":270},[58,4129,281],{"class":259},[58,4131,4133,4135,4137],{"class":60,"line":4132},444,[58,4134,350],{"class":270},[58,4136,274],{"class":259},[58,4138,2839],{"class":277},[58,4140,4142],{"class":60,"line":4141},445,[58,4143,361],{"class":259},[58,4145,4147],{"class":60,"line":4146},446,[58,4148,294],{"class":259},[58,4150,4152,4154,4156,4158],{"class":60,"line":4151},447,[58,4153,299],{"class":270},[58,4155,274],{"class":259},[58,4157,3188],{"class":277},[58,4159,281],{"class":259},[58,4161,4163,4165,4167,4169],{"class":60,"line":4162},448,[58,4164,312],{"class":270},[58,4166,274],{"class":259},[58,4168,3101],{"class":277},[58,4170,281],{"class":259},[58,4172,4174,4176,4178,4180],{"class":60,"line":4173},449,[58,4175,324],{"class":270},[58,4177,274],{"class":259},[58,4179,3211],{"class":270},[58,4181,281],{"class":259},[58,4183,4185,4187,4189,4191],{"class":60,"line":4184},450,[58,4186,337],{"class":270},[58,4188,274],{"class":259},[58,4190,3223],{"class":270},[58,4192,281],{"class":259},[58,4194,4196,4198,4200],{"class":60,"line":4195},451,[58,4197,350],{"class":270},[58,4199,274],{"class":259},[58,4201,3235],{"class":277},[58,4203,4205],{"class":60,"line":4204},452,[58,4206,361],{"class":259},[58,4208,4210],{"class":60,"line":4209},453,[58,4211,294],{"class":259},[58,4213,4215,4217,4219,4221],{"class":60,"line":4214},454,[58,4216,299],{"class":270},[58,4218,274],{"class":259},[58,4220,2859],{"class":277},[58,4222,281],{"class":259},[58,4224,4226,4228,4230,4232],{"class":60,"line":4225},455,[58,4227,312],{"class":270},[58,4229,274],{"class":259},[58,4231,2767],{"class":277},[58,4233,281],{"class":259},[58,4235,4237,4239,4241,4243],{"class":60,"line":4236},456,[58,4238,324],{"class":270},[58,4240,274],{"class":259},[58,4242,2882],{"class":270},[58,4244,281],{"class":259},[58,4246,4248,4250,4252,4254],{"class":60,"line":4247},457,[58,4249,337],{"class":270},[58,4251,274],{"class":259},[58,4253,2894],{"class":270},[58,4255,281],{"class":259},[58,4257,4259,4261,4263],{"class":60,"line":4258},458,[58,4260,350],{"class":270},[58,4262,274],{"class":259},[58,4264,2906],{"class":277},[58,4266,4268],{"class":60,"line":4267},459,[58,4269,498],{"class":259},[58,4271,4273],{"class":60,"line":4272},460,[58,4274,504],{"class":259},[58,4276,4278],{"class":60,"line":4277},461,[58,4279,510],{"class":259},[58,4281,4283],{"class":60,"line":4282},462,[58,4284,265],{"class":259},[58,4286,4288,4290,4292,4294],{"class":60,"line":4287},463,[58,4289,271],{"class":270},[58,4291,274],{"class":259},[58,4293,1195],{"class":277},[58,4295,281],{"class":259},[58,4297,4299,4301],{"class":60,"line":4298},464,[58,4300,286],{"class":270},[58,4302,289],{"class":259},[58,4304,4306],{"class":60,"line":4305},465,[58,4307,294],{"class":259},[58,4309,4311,4313,4315,4317],{"class":60,"line":4310},466,[58,4312,299],{"class":270},[58,4314,274],{"class":259},[58,4316,1183],{"class":277},[58,4318,281],{"class":259},[58,4320,4322,4324,4326,4328],{"class":60,"line":4321},467,[58,4323,312],{"class":270},[58,4325,274],{"class":259},[58,4327,1195],{"class":277},[58,4329,281],{"class":259},[58,4331,4333,4335,4337,4339],{"class":60,"line":4332},468,[58,4334,324],{"class":270},[58,4336,274],{"class":259},[58,4338,1207],{"class":270},[58,4340,281],{"class":259},[58,4342,4344,4346,4348,4350],{"class":60,"line":4343},469,[58,4345,337],{"class":270},[58,4347,274],{"class":259},[58,4349,1219],{"class":270},[58,4351,281],{"class":259},[58,4353,4355,4357,4359],{"class":60,"line":4354},470,[58,4356,350],{"class":270},[58,4358,274],{"class":259},[58,4360,1231],{"class":277},[58,4362,4364],{"class":60,"line":4363},471,[58,4365,361],{"class":259},[58,4367,4369],{"class":60,"line":4368},472,[58,4370,294],{"class":259},[58,4372,4374,4376,4378,4380],{"class":60,"line":4373},473,[58,4375,299],{"class":270},[58,4377,274],{"class":259},[58,4379,1251],{"class":277},[58,4381,281],{"class":259},[58,4383,4385,4387,4389,4391],{"class":60,"line":4384},474,[58,4386,312],{"class":270},[58,4388,274],{"class":259},[58,4390,1023],{"class":277},[58,4392,281],{"class":259},[58,4394,4396,4398,4400,4402],{"class":60,"line":4395},475,[58,4397,324],{"class":270},[58,4399,274],{"class":259},[58,4401,1274],{"class":270},[58,4403,281],{"class":259},[58,4405,4407,4409,4411,4413],{"class":60,"line":4406},476,[58,4408,337],{"class":270},[58,4410,274],{"class":259},[58,4412,1286],{"class":270},[58,4414,281],{"class":259},[58,4416,4418,4420,4422],{"class":60,"line":4417},477,[58,4419,350],{"class":270},[58,4421,274],{"class":259},[58,4423,1298],{"class":277},[58,4425,4427],{"class":60,"line":4426},478,[58,4428,498],{"class":259},[58,4430,4432],{"class":60,"line":4431},479,[58,4433,504],{"class":259},[58,4435,4437],{"class":60,"line":4436},480,[58,4438,4439],{"class":259},"  }\n",[58,4441,4443],{"class":60,"line":4442},481,[58,4444,4445],{"class":259},"]\n",[130,4447,4448],{},"html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":54,"searchDepth":79,"depth":79,"links":4450},[],"J'ai commencé à migrer la class Map, cela avance tranquillement. Je n'arrive pas à afficher le chemin entre 2 stations,\npour au final me rendre compte que ce n'est pas un problème de code, mais de données. Le moyen de lié les données entre\nles\nstops et les\nunique_stops a été un peu fatal. En effet, j'ai fait en sorte que dès que le nom est contenu dans\nle nom d'une station unique un match se fait. Mais, le problème :\nVilliers est contenu dans\nFort d'Aubervilliers\".",{"date":221},"/blog/2024-04-15",{"title":221,"description":4451},"blog/2024-04-15","6gMMrDKkjEeeSqx-VDinDGIuLl1pcEKo0X9sj17g26o",{"id":4458,"title":4459,"body":4460,"description":4468,"extension":135,"meta":4490,"navigation":82,"path":4491,"seo":4492,"stem":4493,"__hash__":4494},"blog/blog/2024-04-14.md","2024-04-12",{"type":8,"value":4461,"toc":4488},[4462,4466,4469,4479,4485],[11,4463,4465],{"id":4464},"_2024-04-14","2024-04-14",[15,4467,4468],{},"J'aimerais merger la PR aujourd'hui sur l'import et l'export des données provenant de GTFS.\nJ'ai des tests liés à mon environnement (charge des fichiers localement) que je dois modifier ou supprimer, car je ne\nveux pas publier les données d'IDFM.",[15,4470,4471,4472,4474,4475,4478],{},"J'ai aussi envie d'harmoniser les noms, il y a des mélanges entre\n",[30,4473,232],{}," et\n",[30,4476,4477],{},"stations",". Je ne suis pas tout à fait au\nclair sur le nommage.",[15,4480,4481,4482],{},"Bon, j'ai mergé sans harmoniser finalement, je le ferai plus tard. J'ai aussi skipé les tests qui ne sont pas jouables\nsans les données.\nJ'ai d'ailleurs eu des erreurs de flaky tests, que j'ai pu corriger en ajoutant l'option\n",[30,4483,4484],{},"--no-file-parallelism",[15,4486,4487],{},"Maintenant, il est temps d'utiliser les nouvelles données, je migre la class Graph, puis pick-station. Il reste plus que\ntout ce qui est affichage à migrer.",{"title":54,"searchDepth":79,"depth":79,"links":4489},[],{"date":4459},"/blog/2024-04-14",{"title":4459,"description":4468},"blog/2024-04-14","9i0Kgk4do7I74xuOSNEGfu7BM8AarnHkPTGGU309K1Y",{"id":4496,"title":4459,"body":4497,"description":4504,"extension":135,"meta":4528,"navigation":82,"path":4529,"seo":4530,"stem":4531,"__hash__":4532},"blog/blog/2024-04-12.md",{"type":8,"value":4498,"toc":4526},[4499,4502,4505,4514,4523],[11,4500,4459],{"id":4501},"_2024-04-12",[15,4503,4504],{},"Entre mardi et aujourd'hui, j'ai pu contacter IDFM pour savoir comment faire le lien, et d'après leurs réponses ce n'est\npas si simple. Ma solution actuelle est peut-être la moins mauvaise, mais nos échanges ne sont pas terminés.",[15,4506,4507,4508,4513],{},"J'ai discuté ce matin autour d'un café avec Pierre Top, de ce projet et de ce que je faisais. Il a remis en question mon\nusage de node.js et de stream pour insérer les données en base\nvs ",[22,4509,4512],{"href":4510,"rel":4511},"https://www.postgresql.org/docs/current/sql-copy.html",[26],"COPY FROM"," de postgresql. Il est vrai que je n'ai pas\ndocumenté ce point. Je vais donc m'y atteler.",[15,4515,4516,4517,4522],{},"Le projet étant en JS, je trouve que c'est un bon choix de tout faire dans ce langage.\nJ'apprécie l'article\n",[22,4518,4521],{"href":4519,"rel":4520},"https://joaomagfreitas.link/scripts-should-be-written-using-the-project-main-language/",[26],"\"Scripts should be written using the project main language\" de Freitas",",\nqui traite de ce sujet.\nDe ma petite expérience, j'apprécie knex pour sa gestion du schéma via les migrations, cela m'a donc semblé naturel de\nl'utiliser pour créer le schéma.",[15,4524,4525],{},"Ensuite pour l'usage de COPY FROM, j'en garde de mauvais souvenirs où il faut après la copie mettre à jour les\nséquences, cependant je n'ai pas d'autres données à ajouter ensuite c'est donc un choix judicieux. J'ai peut-être exclu\ntrop vite cette possibilité.\nNéanmoins, il aurait fallu que je respecte le schéma du csv, ce qui n'est pas le cas actuellement.",{"title":54,"searchDepth":79,"depth":79,"links":4527},[],{"date":4459},"/blog/2024-04-12",{"title":4459,"description":4504},"blog/2024-04-12","2YCDWJIAhTe7I2GvrLE1iqgUoO1TDzLMbO1r3wa679w",{"id":4534,"title":4535,"body":4536,"description":4629,"extension":135,"meta":4630,"navigation":82,"path":4631,"seo":4632,"stem":4633,"__hash__":4634},"blog/blog/2024-04-09.md","2024-04-09",{"type":8,"value":4537,"toc":4627},[4538,4541,4562,4572,4577,4587,4591,4598,4608],[11,4539,4535],{"id":4540},"_2024-04-09",[15,4542,4543,4544,4546,4547,4549,4550,4553,4554,4557,4558,4561],{},"Finalement, ce midi, j'ai regardé le format des données et je me suis rendu compte d'une heure que j'ai faite hier. Je\nne pensais pas qu'il y avait de lien entre les\n",[30,4545,232],{}," et les emplacements généralisés des gares et stations, mais en\nfait si. Dans les\n",[30,4548,232],{},", nous avons le\n",[30,4551,4552],{},"parent_station",", et dans les emplacements, nous avons les\n",[30,4555,4556],{},"zdA",", et\n",[30,4559,4560],{},"zdC",", qui\ncorrespondent respectivement à : zone de Correspondance et zone d'Arrêts.",[15,4563,4564,4565,4568,4569,4571],{},"Prenons un exemple, la station\n",[30,4566,4567],{},"Place de Clichy"," dans les stops a pour\n",[30,4570,4552],{}," :",[4573,4574,4575],"ul",{},[168,4576],{},[15,4578,4579,4582,4583,4586],{},[30,4580,4581],{},"Place de Clichy - Caulaincourt"," (bus) :\n",[30,4584,4585],{},"IDFM:71435"," (zdC)",[4573,4588,4589],{},[168,4590],{},[15,4592,4593,4595,4596,4586],{},[30,4594,4567],{}," (metro et bus) :\n",[30,4597,4585],{},[15,4599,4600,4601,4604,4605,4607],{},"Un exemple où nous avons eu un problème hier :\n",[30,4602,4603],{},"Javel",", nous avons bien son\n",[30,4606,4552],{}," qui correspond au ref zdC.\nIntéressant, je peux donc modifier le script et éviter toute la logique superflue que j'avais mise en place.",[15,4609,4610,4611,4614,4615,4617,4620,4621,4623,4624,4626],{},"Finalement, si nous prenons par exemple la station\n",[30,4612,4613],{},"Have-Caumartin",", qui a comme\n",[30,4616,4552],{},[30,4618,4619],{},"IDFM:482368",", qui\ncorrespond à un autre stop\n",[30,4622,4619],{},", qui lui n'a pas de\n",[30,4625,4552],{},", dont nous ne trouvons pas de trace\ndans les emplacements généralisés. La méthode que j'ai développée à base de Regex a le mérite de fonctionner, je la\nlaisse ainsi.",{"title":54,"searchDepth":79,"depth":79,"links":4628},[],"Finalement, ce midi, j'ai regardé le format des données et je me suis rendu compte d'une heure que j'ai faite hier. Je\nne pensais pas qu'il y avait de lien entre les\nstops et les emplacements généralisés des gares et stations, mais en\nfait si. Dans les\nstops, nous avons le\nparent_station, et dans les emplacements, nous avons les\nzdA, et\nzdC, qui\ncorrespondent respectivement à : zone de Correspondance et zone d'Arrêts.",{"date":4535},"/blog/2024-04-09",{"title":4535,"description":4629},"blog/2024-04-09","7NPEz_VHWPYo_0vu42uywwdyzP71ny9vluR28bha_2g",{"id":4636,"title":4637,"body":4638,"description":4645,"extension":135,"meta":4786,"navigation":82,"path":4787,"seo":4788,"stem":4789,"__hash__":4790},"blog/blog/2024-04-08.md","2024-04-08",{"type":8,"value":4639,"toc":4784},[4640,4643,4646,4649,4652,4655,4666,4669,4679,4682,4702,4705,4708,4718,4721,4730,4733,4743,4746,4756,4775,4781],[11,4641,4637],{"id":4642},"_2024-04-08",[15,4644,4645],{},"Plus d'une semaine sans avoir travaillé sur ce projet, c'est dur de savoir où je m'en suis arrêté.",[15,4647,4648],{},"J'ai l'impression qu'il me reste plus qu'à enregistrer les données dans un fichier.\nUne fois fait, je me demande si je ne pourrais pas retirer les paths dans les routes. En réalité, j'enregistre déjà les\npaths dans les stations adjacentes, donc je n'en ai pas besoin.",[15,4650,4651],{},"D'ailleurs, l'export se fait en moins de 40 secondes, c'est plutôt OK, sachant que j'ai besoin de le faire uniquement\nquand il y a de nouvelles stations de métro, ou lignes. Comparons la taille des données, avant, nous avions 831+365 Ko,\navec le GTFS, j'obtiens un JSON de 931Ko, alors que j'ai des informations en plus.",[15,4653,4654],{},"Maintenant, il faut utiliser ces nouvelles données. Pour ça, il faut modifier plusieurs choses :",[4573,4656,4657,4660,4663],{},[168,4658,4659],{},"Le calcul du plus court chemin",[168,4661,4662],{},"L'affichage des stations",[168,4664,4665],{},"L'affichage des chemins entre les stations",[15,4667,4668],{},"Rien d'insurmontable, mais Eat The Frog, je vais commencer par le plus dur, le calcul du plus court chemin.",[15,4670,4671,4672,4675,4676,4678],{},"Je vais donc modifier les signatures des fonctions, actuellement la fonction computeShortestPath prend en paramètre le\nnom des stations, je vais plutôt lui passer les unique_id. Il manque l'\n",[30,4673,4674],{},"unique_id"," dans les\n",[30,4677,232],{},", je vais ainsi le\nrajouter d'abord.",[15,4680,4681],{},"Ah voilà, qui est intéressant, les noms entre les stations généralisées et les stations du GTFS ne sont pas les mêmes,\ncomme :",[4573,4683,4684,4694],{},[168,4685,4686,4687,4690,4691],{},"GTFS :\n",[30,4688,4689],{},"Michel-Ange - Molitor"," / Généralisée :\n",[30,4692,4693],{},"Michel-Ange-Molitor",[168,4695,4686,4696,4690,4699],{},[30,4697,4698],{},"Pointe du Lac",[30,4700,4701],{},"Créteil - Pointe du Lac",[15,4703,4704],{},"C'est un peu embêtant, mais je vais faire avec. Je vais donc faire une regex pour supprimer espaces et tirets, et voir\nsi c'est inclut.",[15,4706,4707],{},"Ce n'est pas suffisant, il y a aussi les accents comme :",[4573,4709,4710],{},[168,4711,4686,4712,4690,4715],{},[30,4713,4714],{},"Cour Saint-Emilion",[30,4716,4717],{},"Cour Saint-Émilion",[15,4719,4720],{},"Je vais récupérer le code du champ de recherche. Il y a aussi le problème d'un nom plus court dans les données\ngénéralisées :",[4573,4722,4723],{},[168,4724,4686,4725,4690,4728],{},[30,4726,4727],{},"Javel - André Citroën",[30,4729,4603],{},[15,4731,4732],{},"Puis, j'ai un souci avec les Champs-Élysées, qui ont un tiret différent :",[4573,4734,4735],{},[168,4736,4686,4737,4690,4740],{},[30,4738,4739],{},"Champs-Élysées - Clemenceau",[30,4741,4742],{},"Champs-Élysées – Clemenceau",[15,4744,4745],{},"Et maintenant où le problème vient de l'apostrophe :",[4573,4747,4748],{},[168,4749,4686,4750,4690,4753],{},[30,4751,4752],{},"Créteil - L'Échat",[30,4754,4755],{},"Créteil–L’Échat",[15,4757,4758,4759,4762,4763,4766,4767,4770,4771,4774],{},"J'ai à mon avis une dernière erreur, la station Barbara ne remonte pas, je vais regarder pourquoi.\nElle a bien le mode\n",[30,4760,4761],{},"METRO",", mais la colonne\n",[30,4764,4765],{},"metro"," est à\n",[30,4768,4769],{},"0"," au lieu de\n",[30,4772,4773],{},"1",". Je préviens IDFM sur leur Slack.",[15,4776,4777,4778,33],{},"J'ai corrigé le souci en attendant. Revenons, à la création du graph, ce qui est embêtant, c'est que je n'ai pas les\nunique_id dans les adjacentStations. Le fait de ne pas les avoir m'oblige à fournir les stations, je ne suis pas\nvraiment sûr de l'utilité, je vais les ajouter directement aux\n",[30,4779,4780],{},"adjacentStations",[15,4782,4783],{},"J'ai modifié le Dijkstra pour prendre en compte le nouveau format de données, et réussir à faire quelque chose avec les\nunique_id vs les stop_ids en général, mais je n'ai pas réussi à faire ce que je voulais. Je me suis arrêté là.",{"title":54,"searchDepth":79,"depth":79,"links":4785},[],{"date":4637},"/blog/2024-04-08",{"title":4637,"description":4645},"blog/2024-04-08","oHLmOi-jib4apUg4JC5_P3fSl1bjXbxIgBOglNufAyI",{"id":4792,"title":4793,"body":4794,"description":4801,"extension":135,"meta":4954,"navigation":82,"path":4955,"seo":4956,"stem":4957,"__hash__":4958},"blog/blog/2024-03-29.md","2024-03-29",{"type":8,"value":4795,"toc":4950},[4796,4799,4802,4805,4808,4824,4827,4838,4841,4846,4849,4856,4870,4892,4895,4898,4907,4910,4921,4924,4927,4936,4940,4948],[11,4797,4793],{"id":4798},"_2024-03-29",[15,4800,4801],{},"Je n'ai pas beaucoup de temps aujourd'hui, mais j'aimerais bien en finir avec cette migration vers GTFS, au moins avoir\ntoutes les données exportées.",[15,4803,4804],{},"Hier, je me suis arrêté sur les stations adjacentes.",[15,4806,4807],{},"Récapitulons, je peux extraire :",[4573,4809,4810,4816,4821],{},[168,4811,4812,4813],{},"les lignes /\n",[30,4814,4815],{},"routes",[168,4817,4818,4819],{},"les arrêts /\n",[30,4820,232],{},[168,4822,4823],{},"les stations adjacentes",[15,4825,4826],{},"Ce qu'il manque :",[4573,4828,4829,4832,4835],{},[168,4830,4831],{},"récupérer les chemins des lignes pour les ajouter dans les stations adjacentes.",[168,4833,4834],{},"récupérer les stations uniques dans l'autre fichier fourni par IDFM",[168,4836,4837],{},"insérer l'id unique dans les stations",[15,4839,4840],{},"Je pense qu'avec ça je suis plutôt tranquille.",[4842,4843,4845],"h2",{"id":4844},"ajouter-le-chemin-entre-les-deux-stations","Ajouter le chemin entre les deux stations",[15,4847,4848],{},"Il me faut les stations pour avoir leur position, les chemins des lignes, et les stations adjacentes.",[15,4850,4851,4852,4855],{},"Les coordonnées des lignes sont du type :\n",[30,4853,4854],{},"MultiLineString",", je suppose que c'est pour l'aller-retour, mais à vérifier.\nEn vérifiant, je vois que ce n'est pas le cas, on est plutôt sur une moyenne de 4 Lines.",[15,4857,4858,4859,4474,4862,4865,4866,4869],{},"En regardant en prenant juste\n",[30,4860,4861],{},"from",[30,4863,4864],{},"to"," et en regardant dans chaque\n",[30,4867,4868],{},"Line",", j'arrive à avoir ces stats :",[49,4871,4875],{"className":4872,"code":4873,"language":4874,"meta":54,"style":54},"language-shell shiki shiki-themes github-light github-dark","❯ node scripts/extract-data.js\nAdjacent stations with paths: 1572\nAdjacent stations without path: 2018\n","shell",[30,4876,4877,4882,4887],{"__ignoreMap":54},[58,4878,4879],{"class":60,"line":61},[58,4880,4881],{},"❯ node scripts/extract-data.js\n",[58,4883,4884],{"class":60,"line":79},[58,4885,4886],{},"Adjacent stations with paths: 1572\n",[58,4888,4889],{"class":60,"line":86},[58,4890,4891],{},"Adjacent stations without path: 2018\n",[15,4893,4894],{},"Ce qui me parait beaucoup trop comme écart.\nEst-ce que je n'aurai pas trop de stations adjacentes ? Je vais vérifier en regardant dans les données actuelles, j'ai\nécrit un test, j'en ai 1560, ça parait cohérent du coup.",[15,4896,4897],{},"Donc finalement, on n'est pas si mal, si j'ai bien compris.",[15,4899,4900,4901,4903,4904,33],{},"En analysant les données, je me rends compte que j'ai des\n",[30,4902,4780],{}," (est-ce que j'aime ce nom ?), qui sont en\ndes chemins entre plusieurs stations adjacentes, mais plutôt extérieur (je crois), comme\n",[30,4905,4906],{},"Quatre Septembre - Opéra",[15,4908,4909],{},"Ce que je pense de ça, c'est que certains changements sont plus simples à faire à pied, qu'en transport.",[15,4911,4912,4913,4916,4917,4920],{},"Si par exemple, un utilisateur insère\n",[30,4914,4915],{},"Opéra",", puis\n",[30,4918,4919],{},"Quatre Septembre",", je vais les lier avec la 3, donc peu importe que\nle chemin à pied existe, je crois ?",[15,4922,4923],{},"Par contre, je me demande si pour l'algo d'affichage, il ne faudrait pas que j'ai le from et to stop_unique_id.",[15,4925,4926],{},"C'est le moment de s'y mettre, j'ai l'impression.",[15,4928,4929,4930,4935],{},"Je\ntélécharge ",[22,4931,4934],{"href":4932,"rel":4933},"https://prim.iledefrance-mobilites.fr/jeux-de-donnees/emplacement-des-gares-idf-data-generalisee",[26],"les données généralisées",",\nle csv est pas mal contrairement à celui des tracés des lignes.",[4842,4937,4939],{"id":4938},"ressources","Ressources",[4573,4941,4942],{},[168,4943,4944],{},[22,4945,4947],{"href":4932,"rel":4946},[26],"Gares et stations du réseau ferré d'Île-de-France (donnée généralisée)",[130,4949,132],{},{"title":54,"searchDepth":79,"depth":79,"links":4951},[4952,4953],{"id":4844,"depth":79,"text":4845},{"id":4938,"depth":79,"text":4939},{"date":4793},"/blog/2024-03-29",{"title":4793,"description":4801},"blog/2024-03-29","4-1f4pyBPzZikm-trDct1DnwkWD3e2d_QzwYkxRMxms",{"id":4960,"title":4961,"body":4962,"description":5673,"extension":135,"meta":5674,"navigation":82,"path":5675,"seo":5676,"stem":5677,"__hash__":5678},"blog/blog/2024-03-28.md","2024-03-28",{"type":8,"value":4963,"toc":5671},[4964,4967,4978,4981,4984,5101,5104,5228,5231,5419,5422,5431,5491,5498,5501,5546,5561,5570,5634,5641,5647,5650,5653,5659,5662,5665,5668],[11,4965,4961],{"id":4966},"_2024-03-28",[15,4968,4969,4970,4973,4974,4977],{},"Reprenons le problème d'hier, j'ai un voyage 'trip' qui est un peu une anomalie dans les\ndonnées\n",[30,4971,4972],{},"Mairie de Montreuil -> Porte de Montreuil",", ça se produit uniquement 2 fois, sur un même service\n",[30,4975,4976],{},"IDFM:100001","\nun vendredi.",[15,4979,4980],{},"Je n'arrive pas à le filtrer simplement, alors je me dis qu'en me basant sur la durée du trajet entre deux stations, je\npourrais écarter les durées trop longues (> 5min), ça m'embête pour la ré-utilisabilité du code.",[15,4982,4983],{},"J'avais noté de former la donnée sous cette forme :",[49,4985,4987],{"className":250,"code":4986,"language":252,"meta":54,"style":54},"{\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ]\n}\n",[30,4988,4989,4994,5001,5006,5018,5030,5042,5049,5054,5066,5076,5081,5086,5091,5096],{"__ignoreMap":54},[58,4990,4991],{"class":60,"line":61},[58,4992,4993],{"class":259},"{\n",[58,4995,4996,4999],{"class":60,"line":79},[58,4997,4998],{"class":270},"  \"adjacents\"",[58,5000,289],{"class":259},[58,5002,5003],{"class":60,"line":86},[58,5004,5005],{"class":259},"    {\n",[58,5007,5008,5011,5013,5016],{"class":60,"line":92},[58,5009,5010],{"class":270},"      \"from_stop_id\"",[58,5012,274],{"class":259},[58,5014,5015],{"class":277},"\"stop_id\"",[58,5017,281],{"class":259},[58,5019,5020,5023,5025,5028],{"class":60,"line":97},[58,5021,5022],{"class":270},"      \"to_stop_id\"",[58,5024,274],{"class":259},[58,5026,5027],{"class":277},"\"adjacent_stop_id\"",[58,5029,281],{"class":259},[58,5031,5032,5035,5037,5040],{"class":60,"line":103},[58,5033,5034],{"class":270},"      \"time\"",[58,5036,274],{"class":259},[58,5038,5039],{"class":270},"123",[58,5041,281],{"class":259},[58,5043,5044,5047],{"class":60,"line":309},[58,5045,5046],{"class":270},"      \"path\"",[58,5048,289],{"class":259},[58,5050,5051],{"class":60,"line":321},[58,5052,5053],{"class":259},"        {\n",[58,5055,5056,5059,5061,5064],{"class":60,"line":334},[58,5057,5058],{"class":270},"          \"lat\"",[58,5060,274],{"class":259},[58,5062,5063],{"class":270},"48.123",[58,5065,281],{"class":259},[58,5067,5068,5071,5073],{"class":60,"line":347},[58,5069,5070],{"class":270},"          \"lon\"",[58,5072,274],{"class":259},[58,5074,5075],{"class":270},"2.123\n",[58,5077,5078],{"class":60,"line":358},[58,5079,5080],{"class":259},"        }\n",[58,5082,5083],{"class":60,"line":364},[58,5084,5085],{"class":259},"      ]\n",[58,5087,5088],{"class":60,"line":369},[58,5089,5090],{"class":259},"    }\n",[58,5092,5093],{"class":60,"line":381},[58,5094,5095],{"class":259},"  ]\n",[58,5097,5098],{"class":60,"line":393},[58,5099,5100],{"class":259},"}\n",[15,5102,5103],{},"J'hésite avec directement la liste des adjacents depuis une station, sous cette forme :",[49,5105,5107],{"className":250,"code":5106,"language":252,"meta":54,"style":54},"{\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"adjacents\": [\n        {\n          \"to_stop_id\": \"adjacent_stop_id\",\n          \"time\": 123,\n          \"path\": [\n            {\n              \"lat\": 48.123,\n              \"lon\": 2.123\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n",[30,5108,5109,5113,5119,5123,5133,5140,5144,5155,5166,5173,5178,5189,5198,5203,5208,5212,5216,5220,5224],{"__ignoreMap":54},[58,5110,5111],{"class":60,"line":61},[58,5112,4993],{"class":259},[58,5114,5115,5117],{"class":60,"line":79},[58,5116,4998],{"class":270},[58,5118,289],{"class":259},[58,5120,5121],{"class":60,"line":86},[58,5122,5005],{"class":259},[58,5124,5125,5127,5129,5131],{"class":60,"line":92},[58,5126,5010],{"class":270},[58,5128,274],{"class":259},[58,5130,5015],{"class":277},[58,5132,281],{"class":259},[58,5134,5135,5138],{"class":60,"line":97},[58,5136,5137],{"class":270},"      \"adjacents\"",[58,5139,289],{"class":259},[58,5141,5142],{"class":60,"line":103},[58,5143,5053],{"class":259},[58,5145,5146,5149,5151,5153],{"class":60,"line":309},[58,5147,5148],{"class":270},"          \"to_stop_id\"",[58,5150,274],{"class":259},[58,5152,5027],{"class":277},[58,5154,281],{"class":259},[58,5156,5157,5160,5162,5164],{"class":60,"line":321},[58,5158,5159],{"class":270},"          \"time\"",[58,5161,274],{"class":259},[58,5163,5039],{"class":270},[58,5165,281],{"class":259},[58,5167,5168,5171],{"class":60,"line":334},[58,5169,5170],{"class":270},"          \"path\"",[58,5172,289],{"class":259},[58,5174,5175],{"class":60,"line":347},[58,5176,5177],{"class":259},"            {\n",[58,5179,5180,5183,5185,5187],{"class":60,"line":358},[58,5181,5182],{"class":270},"              \"lat\"",[58,5184,274],{"class":259},[58,5186,5063],{"class":270},[58,5188,281],{"class":259},[58,5190,5191,5194,5196],{"class":60,"line":364},[58,5192,5193],{"class":270},"              \"lon\"",[58,5195,274],{"class":259},[58,5197,5075],{"class":270},[58,5199,5200],{"class":60,"line":369},[58,5201,5202],{"class":259},"            }\n",[58,5204,5205],{"class":60,"line":381},[58,5206,5207],{"class":259},"          ]\n",[58,5209,5210],{"class":60,"line":393},[58,5211,5080],{"class":259},[58,5213,5214],{"class":60,"line":405},[58,5215,5085],{"class":259},[58,5217,5218],{"class":60,"line":417},[58,5219,5090],{"class":259},[58,5221,5222],{"class":60,"line":427},[58,5223,5095],{"class":259},[58,5225,5226],{"class":60,"line":432},[58,5227,5100],{"class":259},[15,5229,5230],{},"Ce qui permet de faire un find au lieu d'un filter, mais bon combien il y a de données ?",[49,5232,5236],{"className":5233,"code":5234,"language":5235,"meta":54,"style":54},"language-sql shiki shiki-themes github-light github-dark","postgres@localhost:idfm> WITH stops_and_adjacents AS (\n     SELECT DISTINCT\n         st.stop_id AS from_stop_id,\n         adjacent_stops.stop_id AS to_stop_id,\n         CASE\n             WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n                 THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n             ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n         END AS duration\n     FROM\n         stop_times AS st\n     INNER JOIN\n         stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n     INNER JOIN\n         trips AS t ON st.trip_id = t.trip_id\n     INNER JOIN\n         routes AS r ON t.route_id = r.route_id\n     WHERE\n         ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n         AND r.route_type = 1\n ), \"rqt\" as (\n SELECT\n     from_stop_id,\n     to_stop_id,\n     MIN(duration) AS min_duration\n FROM\n     stops_and_adjacents\n GROUP BY\n     from_stop_id,\n     to_stop_id\n ORDER BY min_duration DESC) select count(*) from rqt;\n+-------+\n| count |\n|-------|\n| 1490  |\n+-------+\nSELECT 1\n","sql",[30,5237,5238,5243,5248,5253,5258,5263,5268,5273,5278,5283,5288,5293,5298,5303,5307,5312,5316,5321,5326,5331,5336,5341,5346,5351,5356,5361,5366,5371,5376,5380,5385,5390,5395,5400,5405,5410,5414],{"__ignoreMap":54},[58,5239,5240],{"class":60,"line":61},[58,5241,5242],{},"postgres@localhost:idfm> WITH stops_and_adjacents AS (\n",[58,5244,5245],{"class":60,"line":79},[58,5246,5247],{},"     SELECT DISTINCT\n",[58,5249,5250],{"class":60,"line":86},[58,5251,5252],{},"         st.stop_id AS from_stop_id,\n",[58,5254,5255],{"class":60,"line":92},[58,5256,5257],{},"         adjacent_stops.stop_id AS to_stop_id,\n",[58,5259,5260],{"class":60,"line":97},[58,5261,5262],{},"         CASE\n",[58,5264,5265],{"class":60,"line":103},[58,5266,5267],{},"             WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n",[58,5269,5270],{"class":60,"line":309},[58,5271,5272],{},"                 THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n",[58,5274,5275],{"class":60,"line":321},[58,5276,5277],{},"             ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n",[58,5279,5280],{"class":60,"line":334},[58,5281,5282],{},"         END AS duration\n",[58,5284,5285],{"class":60,"line":347},[58,5286,5287],{},"     FROM\n",[58,5289,5290],{"class":60,"line":358},[58,5291,5292],{},"         stop_times AS st\n",[58,5294,5295],{"class":60,"line":364},[58,5296,5297],{},"     INNER JOIN\n",[58,5299,5300],{"class":60,"line":369},[58,5301,5302],{},"         stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[58,5304,5305],{"class":60,"line":381},[58,5306,5297],{},[58,5308,5309],{"class":60,"line":393},[58,5310,5311],{},"         trips AS t ON st.trip_id = t.trip_id\n",[58,5313,5314],{"class":60,"line":405},[58,5315,5297],{},[58,5317,5318],{"class":60,"line":417},[58,5319,5320],{},"         routes AS r ON t.route_id = r.route_id\n",[58,5322,5323],{"class":60,"line":427},[58,5324,5325],{},"     WHERE\n",[58,5327,5328],{"class":60,"line":432},[58,5329,5330],{},"         ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[58,5332,5333],{"class":60,"line":437},[58,5334,5335],{},"         AND r.route_type = 1\n",[58,5337,5338],{"class":60,"line":449},[58,5339,5340],{}," ), \"rqt\" as (\n",[58,5342,5343],{"class":60,"line":461},[58,5344,5345],{}," SELECT\n",[58,5347,5348],{"class":60,"line":473},[58,5349,5350],{},"     from_stop_id,\n",[58,5352,5353],{"class":60,"line":485},[58,5354,5355],{},"     to_stop_id,\n",[58,5357,5358],{"class":60,"line":495},[58,5359,5360],{},"     MIN(duration) AS min_duration\n",[58,5362,5363],{"class":60,"line":501},[58,5364,5365],{}," FROM\n",[58,5367,5368],{"class":60,"line":507},[58,5369,5370],{},"     stops_and_adjacents\n",[58,5372,5373],{"class":60,"line":513},[58,5374,5375],{}," GROUP BY\n",[58,5377,5378],{"class":60,"line":518},[58,5379,5350],{},[58,5381,5382],{"class":60,"line":530},[58,5383,5384],{},"     to_stop_id\n",[58,5386,5387],{"class":60,"line":537},[58,5388,5389],{}," ORDER BY min_duration DESC) select count(*) from rqt;\n",[58,5391,5392],{"class":60,"line":542},[58,5393,5394],{},"+-------+\n",[58,5396,5397],{"class":60,"line":554},[58,5398,5399],{},"| count |\n",[58,5401,5402],{"class":60,"line":565},[58,5403,5404],{},"|-------|\n",[58,5406,5407],{"class":60,"line":577},[58,5408,5409],{},"| 1490  |\n",[58,5411,5412],{"class":60,"line":589},[58,5413,5394],{},[58,5415,5416],{"class":60,"line":599},[58,5417,5418],{},"SELECT 1\n",[15,5420,5421],{},"On est sur 1490 adjacents, ça reste raisonnable, je vais partir sur la première forme, ça se modifie facilement au pire.",[15,5423,5424,5425,233,5428,5430],{},"Il me reste du coup la deuxième partie à faire : adjacents, car c'est une correspondance\nExemple : Saint-Lazare : Je peux changer de la ligne 13 à la 12, 14, …\nIl faut donc récupérer les\n",[30,5426,5427],{},"pathways",[30,5429,232],{}," pour avoir les correspondances.",[49,5432,5434],{"className":5233,"code":5433,"language":5235,"meta":54,"style":54},"select from_stop_id, fs.stop_name, to_stop_id, ts.stop_name, pathways.traversal_time, fr.route_short_name, tr.route_short_name\nfrom pathways\ninner join stops fs on fs.stop_id = pathways.from_stop_id\ninner join stops ts on ts.stop_id = pathways.to_stop_id\ninner join stop_times fst on fst.stop_id = pathways.from_stop_id\ninner join stop_times tst on tst.stop_id = pathways.to_stop_id\ninner join trips ft on ft.trip_id = fst.trip_id\ninner join trips tt on tt.trip_id = tst.trip_id\ninner join routes fr on fr.route_id = ft.route_id\ninner join routes tr on tr.route_id = tt.route_id\nwhere fr.route_type = 1 and tr.route_type = 1;\n",[30,5435,5436,5441,5446,5451,5456,5461,5466,5471,5476,5481,5486],{"__ignoreMap":54},[58,5437,5438],{"class":60,"line":61},[58,5439,5440],{},"select from_stop_id, fs.stop_name, to_stop_id, ts.stop_name, pathways.traversal_time, fr.route_short_name, tr.route_short_name\n",[58,5442,5443],{"class":60,"line":79},[58,5444,5445],{},"from pathways\n",[58,5447,5448],{"class":60,"line":86},[58,5449,5450],{},"inner join stops fs on fs.stop_id = pathways.from_stop_id\n",[58,5452,5453],{"class":60,"line":92},[58,5454,5455],{},"inner join stops ts on ts.stop_id = pathways.to_stop_id\n",[58,5457,5458],{"class":60,"line":97},[58,5459,5460],{},"inner join stop_times fst on fst.stop_id = pathways.from_stop_id\n",[58,5462,5463],{"class":60,"line":103},[58,5464,5465],{},"inner join stop_times tst on tst.stop_id = pathways.to_stop_id\n",[58,5467,5468],{"class":60,"line":309},[58,5469,5470],{},"inner join trips ft on ft.trip_id = fst.trip_id\n",[58,5472,5473],{"class":60,"line":321},[58,5474,5475],{},"inner join trips tt on tt.trip_id = tst.trip_id\n",[58,5477,5478],{"class":60,"line":334},[58,5479,5480],{},"inner join routes fr on fr.route_id = ft.route_id\n",[58,5482,5483],{"class":60,"line":347},[58,5484,5485],{},"inner join routes tr on tr.route_id = tt.route_id\n",[58,5487,5488],{"class":60,"line":358},[58,5489,5490],{},"where fr.route_type = 1 and tr.route_type = 1;\n",[15,5492,5493,5494,5497],{},"Oups, ça ne remonte rien. Ah oui, ce ne sont pas les pathways qui m'intéressent, mais les\n",[30,5495,5496],{},"transfers",", seulement, je ne\nles ai pas importés.",[15,5499,5500],{},"Je modifie la migration, et j'ajoute ce qu'il faut pour importer les données.",[49,5502,5504],{"className":5233,"code":5503,"language":5235,"meta":54,"style":54},"select from_stop_id, to_stop_id, transfers.min_transfer_time, fr.route_short_name, tr.route_short_name\nfrom transfers\ninner join stop_times fst on fst.stop_id = transfers.from_stop_id\ninner join stop_times tst on tst.stop_id = transfers.to_stop_id\ninner join trips ft on ft.trip_id = fst.trip_id\ninner join trips tt on tt.trip_id = tst.trip_id\ninner join routes fr on fr.route_id = ft.route_id\ninner join routes tr on tr.route_id = tt.route_id\nwhere fr.route_type = 1 and tr.route_type = 1;\n",[30,5505,5506,5511,5516,5521,5526,5530,5534,5538,5542],{"__ignoreMap":54},[58,5507,5508],{"class":60,"line":61},[58,5509,5510],{},"select from_stop_id, to_stop_id, transfers.min_transfer_time, fr.route_short_name, tr.route_short_name\n",[58,5512,5513],{"class":60,"line":79},[58,5514,5515],{},"from transfers\n",[58,5517,5518],{"class":60,"line":86},[58,5519,5520],{},"inner join stop_times fst on fst.stop_id = transfers.from_stop_id\n",[58,5522,5523],{"class":60,"line":92},[58,5524,5525],{},"inner join stop_times tst on tst.stop_id = transfers.to_stop_id\n",[58,5527,5528],{"class":60,"line":97},[58,5529,5470],{},[58,5531,5532],{"class":60,"line":103},[58,5533,5475],{},[58,5535,5536],{"class":60,"line":309},[58,5537,5480],{},[58,5539,5540],{"class":60,"line":321},[58,5541,5485],{},[58,5543,5544],{"class":60,"line":334},[58,5545,5490],{},[15,5547,5548,5549,5552,5553,5556,5557,4474,5559],{},"Bon la requête ne passe pas, c'est le moment d'ajouter des index, la plus grosse jointure est sûr\n",[30,5550,5551],{},"stop_times",", je vais\najouter un index sur\n",[30,5554,5555],{},"stop_id"," dans la table\n",[30,5558,5496],{},[30,5560,5551],{},[15,5562,5563,5564,5566,5567,5569],{},"Cela ne change pas grand-chose, bon en réalité je n'ai pas besoin de tous les\n",[30,5565,5551],{},", c'est un ridicule.\nCe qu'il faut faire c'est de récupérer les\n",[30,5568,5555],{}," qui sont sur les routes qui m'intéressent.",[49,5571,5573],{"className":5233,"code":5572,"language":5235,"meta":54,"style":54},"with stop_ids as (select\n    distinct stop_id, route_short_name\n    from stop_times\n    inner join trips on stop_times.trip_id = trips.trip_id\n    inner join routes on trips.route_id = routes.route_id\n    where routes.route_type = 1)\nselect distinct from_stop_id, fst.stop_name, fs.route_short_name, to_stop_id, tst.stop_name, ts.route_short_name, transfers.min_transfer_time\nfrom transfers\ninner join stop_ids fs on fs.stop_id = transfers.from_stop_id\ninner join stop_ids ts on ts.stop_id = transfers.to_stop_id\ninner join stops fst on fst.stop_id = transfers.from_stop_id\ninner join stops tst on tst.stop_id = transfers.to_stop_id\n",[30,5574,5575,5580,5585,5590,5595,5600,5605,5610,5614,5619,5624,5629],{"__ignoreMap":54},[58,5576,5577],{"class":60,"line":61},[58,5578,5579],{},"with stop_ids as (select\n",[58,5581,5582],{"class":60,"line":79},[58,5583,5584],{},"    distinct stop_id, route_short_name\n",[58,5586,5587],{"class":60,"line":86},[58,5588,5589],{},"    from stop_times\n",[58,5591,5592],{"class":60,"line":92},[58,5593,5594],{},"    inner join trips on stop_times.trip_id = trips.trip_id\n",[58,5596,5597],{"class":60,"line":97},[58,5598,5599],{},"    inner join routes on trips.route_id = routes.route_id\n",[58,5601,5602],{"class":60,"line":103},[58,5603,5604],{},"    where routes.route_type = 1)\n",[58,5606,5607],{"class":60,"line":309},[58,5608,5609],{},"select distinct from_stop_id, fst.stop_name, fs.route_short_name, to_stop_id, tst.stop_name, ts.route_short_name, transfers.min_transfer_time\n",[58,5611,5612],{"class":60,"line":321},[58,5613,5515],{},[58,5615,5616],{"class":60,"line":334},[58,5617,5618],{},"inner join stop_ids fs on fs.stop_id = transfers.from_stop_id\n",[58,5620,5621],{"class":60,"line":347},[58,5622,5623],{},"inner join stop_ids ts on ts.stop_id = transfers.to_stop_id\n",[58,5625,5626],{"class":60,"line":358},[58,5627,5628],{},"inner join stops fst on fst.stop_id = transfers.from_stop_id\n",[58,5630,5631],{"class":60,"line":364},[58,5632,5633],{},"inner join stops tst on tst.stop_id = transfers.to_stop_id\n",[15,5635,5636,5637,5640],{},"Et voilà, j'ai le résultat en 0.4s. En ajoutant les noms des stations, je retrouve bien le\nfameux\n",[30,5638,5639],{},"Saint-Augustin -> Saint-Lazare"," qui est une correspondance possible, ça fait plaisir.",[15,5642,5643,5644,33],{},"Ah, mais il y a aussi les stations proches, du genre\n",[30,5645,5646],{},"Stalingrad -> Jaurès",[15,5648,5649],{},"Bon, faisons le code pour récupérer les données. Ici, on a des secondes de l'autre côté des duration en interval, va\nfalloir harmoniser le tout.",[15,5651,5652],{},"Puis, on peut peut-être tout faire en un seul coup",[49,5654,5657],{"className":5655,"code":5656,"language":126},[124],"with stop_ids as (select\n    distinct stop_id, route_short_name\n    from stop_times\n    inner join trips on stop_times.trip_id = trips.trip_id\n    inner join routes on trips.route_id = routes.route_id\n    where routes.route_type = 1\n),\nadjacent_stops_in_transfers as (\n    select distinct from_stop_id, fst.stop_name, fs.route_short_name, to_stop_id, tst.stop_name, ts.route_short_name, transfers.min_transfer_time as duration\n    from transfers\n    inner join stop_ids fs on fs.stop_id = transfers.from_stop_id\n    inner join stop_ids ts on ts.stop_id = transfers.to_stop_id\n    inner join stops fst on fst.stop_id = transfers.from_stop_id\n    inner join stops tst on tst.stop_id = transfers.to_stop_id\n),\najacent_stops_by_routes as (\n    select distinct\n        st.stop_id as from_stop_id,\n        adjacent_stops.stop_id as to_stop_id,\n        case\n            when st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n                then extract(epoch from (adjacent_stops.arrival_time::interval - st.arrival_time::interval))::int\n            else extract(epoch from (st.arrival_time::interval - adjacent_stops.arrival_time::interval))::int\n        end as duration\n    from stop_times as st\n    inner join stop_times as adjacent_stops on st.trip_id = adjacent_stops.trip_id\n    inner join stop_ids as fs on st.stop_id = fs.stop_id\n    inner join stop_ids as ts on adjacent_stops.stop_id = ts.stop_id\n    where abs(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n),\nadjacent_stops as (\n    select\n        from_stop_id,\n        to_stop_id,\n        duration\n    from ajacent_stops_by_routes\n    union\n    select\n        from_stop_id,\n        to_stop_id,\n        duration\n    from adjacent_stops_in_transfers\n)\nselect\n    from_stop_id,\n    to_stop_id,\n    MIN(duration) AS min_duration\nfrom\n    adjacent_stops\ngroup by\n    from_stop_id,\n    to_stop_id\n",[30,5658,5656],{"__ignoreMap":54},[15,5660,5661],{},"Je vais m'amuser à l'écrire sous le format knex, je vais demander à Mistral en local.",[15,5663,5664],{},"J'ai obtenu quelque chose de pas trop mal, il a voulu simplifier l'union avec le group by de fin, je l'ai retiré. Ça\naide bien.",[15,5666,5667],{},"Il me manque d'ajouter les paths dans les stations adjacentes, mais ça ne sera pas dans cette couche comme les paths ne\nsont pas en base de données.",[130,5669,5670],{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}",{"title":54,"searchDepth":79,"depth":79,"links":5672},[],"Reprenons le problème d'hier, j'ai un voyage 'trip' qui est un peu une anomalie dans les\ndonnées\nMairie de Montreuil -> Porte de Montreuil, ça se produit uniquement 2 fois, sur un même service\nIDFM:100001\nun vendredi.",{"date":4961},"/blog/2024-03-28",{"title":4961,"description":5673},"blog/2024-03-28","z_h1cX_KEpiieyAogMDjI_c_dhnW3H5_SVsiWYzNk4g",{"id":5680,"title":5681,"body":5682,"description":5689,"extension":135,"meta":7178,"navigation":82,"path":7179,"seo":7180,"stem":7181,"__hash__":7182},"blog/blog/2024-03-27.md","2024-03-27",{"type":8,"value":5683,"toc":7167},[5684,5687,5690,5707,5711,5714,5729,5736,5796,5799,5802,5860,5863,5882,5885,5923,5926,5933,5976,5983,5986,5990,5993,6266,6270,6282,6285,6297,6332,6335,6339,6342,6346,6359,6362,6432,6435,6438,6444,6447,6454,6460,6463,6466,6469,6523,6526,6532,6535,6575,6578,6581,6646,6649,6655,6658,6661,6741,6744,6939,6942,6948,6951,6965,6974,6977,6983,6986,7129,7132,7135,7139,7142,7149,7151,7165],[11,5685,5681],{"id":5686},"_2024-03-27",[15,5688,5689],{},"Cette migration vers l'usage de GTFS est plutôt intéressante. Cela me permet de résoudre plusieurs choses :",[4573,5691,5692,5695,5698,5701,5704],{},[168,5693,5694],{},"Avoir un mode par temps de trajet",[168,5696,5697],{},"Avoir un affichage des stations plus précises (l'unique point par station)",[168,5699,5700],{},"Avoir toutes les correspondances possibles (ex: Saint-Lazare - St-Augustin)",[168,5702,5703],{},"Être en mesure d'ajouter le RER, le bus, le tramway, etc.",[168,5705,5706],{},"Être en mesure de pouvoir faire d'autres villes avec quelques changements",[4842,5708,5710],{"id":5709},"import-des-données","Import des données",[15,5712,5713],{},"Hier, je me suis arrêté à un moment où je streamais les données parsées pour les enregistrer en base de données.\nSeulement, à la fin du script, je n'avais pas tout en base. Regardons de plus près.",[49,5715,5717],{"className":4872,"code":5716,"language":4874,"meta":54,"style":54},"❯ wc -l ~/Downloads/IDFM-gtfs/trips.txt\n  440474 /Users/vincenthardouin/Downloads/IDFM-gtfs/trips.txt\n",[30,5718,5719,5724],{"__ignoreMap":54},[58,5720,5721],{"class":60,"line":61},[58,5722,5723],{},"❯ wc -l ~/Downloads/IDFM-gtfs/trips.txt\n",[58,5725,5726],{"class":60,"line":79},[58,5727,5728],{},"  440474 /Users/vincenthardouin/Downloads/IDFM-gtfs/trips.txt\n",[15,5730,5731,5732,5735],{},"Il y a 440 474 lignes dans le fichier\n",[30,5733,5734],{},"trips.txt",", moins 1 ligne de header et j'ai 433 lignes dans ma base de données.",[49,5737,5739],{"className":4872,"code":5738,"language":4874,"meta":54,"style":54},"❯ pgcli postgresql://postgres@localhost:5432/idfm\nServer: PostgreSQL 14.10\nVersion: 4.0.1\nHome: http://pgcli.com\npostgres@localhost:idfm> select count(*) from trips;\n+-------+\n| count |\n|-------|\n| 433   |\n+-------+\nSELECT 1\nTime: 0.014s\n",[30,5740,5741,5746,5751,5756,5761,5766,5770,5774,5778,5783,5787,5791],{"__ignoreMap":54},[58,5742,5743],{"class":60,"line":61},[58,5744,5745],{},"❯ pgcli postgresql://postgres@localhost:5432/idfm\n",[58,5747,5748],{"class":60,"line":79},[58,5749,5750],{},"Server: PostgreSQL 14.10\n",[58,5752,5753],{"class":60,"line":86},[58,5754,5755],{},"Version: 4.0.1\n",[58,5757,5758],{"class":60,"line":92},[58,5759,5760],{},"Home: http://pgcli.com\n",[58,5762,5763],{"class":60,"line":97},[58,5764,5765],{},"postgres@localhost:idfm> select count(*) from trips;\n",[58,5767,5768],{"class":60,"line":103},[58,5769,5394],{},[58,5771,5772],{"class":60,"line":309},[58,5773,5399],{},[58,5775,5776],{"class":60,"line":321},[58,5777,5404],{},[58,5779,5780],{"class":60,"line":334},[58,5781,5782],{},"| 433   |\n",[58,5784,5785],{"class":60,"line":347},[58,5786,5394],{},[58,5788,5789],{"class":60,"line":358},[58,5790,5418],{},[58,5792,5793],{"class":60,"line":364},[58,5794,5795],{},"Time: 0.014s\n",[15,5797,5798],{},"Une légère différence …",[15,5800,5801],{},"Voici mon implémentation de stream :",[49,5803,5805],{"className":51,"code":5804,"language":53,"meta":54,"style":54},"await new Promise((resolve, reject) => {\n  stream.on('data', async (chunk) => {\n    await saveFunction([chunk]);\n  });\n  stream.on('end', () => {\n    resolve();\n  });\n  stream.on('error', (error) => {\n    reject(error);\n  });\n});\n",[30,5806,5807,5812,5817,5822,5827,5832,5837,5841,5846,5851,5855],{"__ignoreMap":54},[58,5808,5809],{"class":60,"line":61},[58,5810,5811],{},"await new Promise((resolve, reject) => {\n",[58,5813,5814],{"class":60,"line":79},[58,5815,5816],{},"  stream.on('data', async (chunk) => {\n",[58,5818,5819],{"class":60,"line":86},[58,5820,5821],{},"    await saveFunction([chunk]);\n",[58,5823,5824],{"class":60,"line":92},[58,5825,5826],{},"  });\n",[58,5828,5829],{"class":60,"line":97},[58,5830,5831],{},"  stream.on('end', () => {\n",[58,5833,5834],{"class":60,"line":103},[58,5835,5836],{},"    resolve();\n",[58,5838,5839],{"class":60,"line":309},[58,5840,5826],{},[58,5842,5843],{"class":60,"line":321},[58,5844,5845],{},"  stream.on('error', (error) => {\n",[58,5847,5848],{"class":60,"line":334},[58,5849,5850],{},"    reject(error);\n",[58,5852,5853],{"class":60,"line":347},[58,5854,5826],{},[58,5856,5857],{"class":60,"line":358},[58,5858,5859],{},"});\n",[15,5861,5862],{},"Je suppose que l'async callback ne fonctionne pas, ce qui parait assez logique.\nJe transforme donc le code sous cette forme :",[49,5864,5866],{"className":51,"code":5865,"language":53,"meta":54,"style":54},"for await (const chunk of stream) {\n  await saveFunction([chunk]);\n}\n",[30,5867,5868,5873,5878],{"__ignoreMap":54},[58,5869,5870],{"class":60,"line":61},[58,5871,5872],{},"for await (const chunk of stream) {\n",[58,5874,5875],{"class":60,"line":79},[58,5876,5877],{},"  await saveFunction([chunk]);\n",[58,5879,5880],{"class":60,"line":86},[58,5881,5100],{},[15,5883,5884],{},"Je relance le script, c'est long, mais ça fonctionne bien. Là, on commit 1 à 1 chaque ligne.\nJe me dis que je peux envoyer des batchs :",[49,5886,5888],{"className":51,"code":5887,"language":53,"meta":54,"style":54},"for await (const data of stream) {\n  chunks.push(data);\n  if (chunks.length > 10000) {\n    await saveFunction(chunks);\n    chunks = [];\n  }\n}\n",[30,5889,5890,5895,5900,5905,5910,5915,5919],{"__ignoreMap":54},[58,5891,5892],{"class":60,"line":61},[58,5893,5894],{},"for await (const data of stream) {\n",[58,5896,5897],{"class":60,"line":79},[58,5898,5899],{},"  chunks.push(data);\n",[58,5901,5902],{"class":60,"line":86},[58,5903,5904],{},"  if (chunks.length > 10000) {\n",[58,5906,5907],{"class":60,"line":92},[58,5908,5909],{},"    await saveFunction(chunks);\n",[58,5911,5912],{"class":60,"line":97},[58,5913,5914],{},"    chunks = [];\n",[58,5916,5917],{"class":60,"line":103},[58,5918,4439],{},[58,5920,5921],{"class":60,"line":309},[58,5922,5100],{},[15,5924,5925],{},"Je relance le script, c'est plus rapide. On commit par batch de 1000 lignes. 10 secondes pour 413 000 lignes, testons\npar 10 000. J'augmente donc à 10 000 la taille du batch de cette fonction est aussi dans le batchInsert de knex, j'ai\nles mêmes résultats. Je reste à 1 000.",[15,5927,5928,5929,5932],{},"Oups, durant l'import, j'ai l'erreur :\n",[30,5930,5931],{}," hint: 'Check free disk space.',",". Je ne dois pas allouer assez de place pour\ndocker.\nMais la base est si grosse que ça ? Je regarde :",[49,5934,5936],{"className":4872,"code":5935,"language":4874,"meta":54,"style":54},"postgres@localhost:idfm> SELECT pg_size_pretty( pg_database_size('idfm') );\n+----------------+\n| pg_size_pretty |\n|----------------|\n| 1912 MB        |\n+----------------+\nSELECT 1\nTime: 0.033s\n",[30,5937,5938,5943,5948,5953,5958,5963,5967,5971],{"__ignoreMap":54},[58,5939,5940],{"class":60,"line":61},[58,5941,5942],{},"postgres@localhost:idfm> SELECT pg_size_pretty( pg_database_size('idfm') );\n",[58,5944,5945],{"class":60,"line":79},[58,5946,5947],{},"+----------------+\n",[58,5949,5950],{"class":60,"line":86},[58,5951,5952],{},"| pg_size_pretty |\n",[58,5954,5955],{"class":60,"line":92},[58,5956,5957],{},"|----------------|\n",[58,5959,5960],{"class":60,"line":97},[58,5961,5962],{},"| 1912 MB        |\n",[58,5964,5965],{"class":60,"line":103},[58,5966,5947],{},[58,5968,5969],{"class":60,"line":309},[58,5970,5418],{},[58,5972,5973],{"class":60,"line":321},[58,5974,5975],{},"Time: 0.033s\n",[15,5977,5978,5979,5982],{},"Ah 2 Go quand même. Bon, naïvement, je lance un\n",[30,5980,5981],{},"docker system prune",". Je récupère 3Go.\nJe relance. En 4 minutes 55, j'ai tout en base. Je ne sais pas quoi en penser niveau performance, mais ce n'est déjà pas\nsi mal.\nLe map sur les 1000 éléments à chaque insertion ne doit pas aider, mais ce n'est pas le sujet.",[15,5984,5985],{},"Je vais pouvoir passer aux requêtes sql pour récupérer les données.",[4842,5987,5989],{"id":5988},"export-des-données","Export des données",[15,5991,5992],{},"Hier, j'ai fait un semblant de json qui me plairait bien :",[49,5994,5996],{"className":250,"code":5995,"language":252,"meta":54,"style":54},"{\n  \"routes\": [\n    {\n      \"route_id\": \"route_id\",\n      \"route_name\": \"route_name\",\n      \"route_color\": \"route_color\"\n    }\n  ],\n  \"stops\": [\n    {\n      \"name\": \"stop_name\",\n      \"id\": \"stop_id\",\n      \"stop_unique_id\": \"stop_unique_id\",\n      \"route_id\": \"route_id\"\n    }\n  ],\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ],\n  \"stops_unique\": [\n    {\n      \"id\": \"stop_unique_id\",\n      \"name\": \"stop_name\",\n      \"lat\": 48.123,\n      \"lon\": 2.123\n    }\n  ]\n}\n",[30,5997,5998,6002,6009,6013,6025,6037,6047,6051,6056,6063,6067,6079,6090,6102,6111,6115,6119,6125,6129,6139,6149,6159,6165,6169,6179,6187,6191,6195,6199,6203,6210,6214,6224,6234,6245,6254,6258,6262],{"__ignoreMap":54},[58,5999,6000],{"class":60,"line":61},[58,6001,4993],{"class":259},[58,6003,6004,6007],{"class":60,"line":79},[58,6005,6006],{"class":270},"  \"routes\"",[58,6008,289],{"class":259},[58,6010,6011],{"class":60,"line":86},[58,6012,5005],{"class":259},[58,6014,6015,6018,6020,6023],{"class":60,"line":92},[58,6016,6017],{"class":270},"      \"route_id\"",[58,6019,274],{"class":259},[58,6021,6022],{"class":277},"\"route_id\"",[58,6024,281],{"class":259},[58,6026,6027,6030,6032,6035],{"class":60,"line":97},[58,6028,6029],{"class":270},"      \"route_name\"",[58,6031,274],{"class":259},[58,6033,6034],{"class":277},"\"route_name\"",[58,6036,281],{"class":259},[58,6038,6039,6042,6044],{"class":60,"line":103},[58,6040,6041],{"class":270},"      \"route_color\"",[58,6043,274],{"class":259},[58,6045,6046],{"class":277},"\"route_color\"\n",[58,6048,6049],{"class":60,"line":309},[58,6050,5090],{"class":259},[58,6052,6053],{"class":60,"line":321},[58,6054,6055],{"class":259},"  ],\n",[58,6057,6058,6061],{"class":60,"line":334},[58,6059,6060],{"class":270},"  \"stops\"",[58,6062,289],{"class":259},[58,6064,6065],{"class":60,"line":347},[58,6066,5005],{"class":259},[58,6068,6069,6072,6074,6077],{"class":60,"line":358},[58,6070,6071],{"class":270},"      \"name\"",[58,6073,274],{"class":259},[58,6075,6076],{"class":277},"\"stop_name\"",[58,6078,281],{"class":259},[58,6080,6081,6084,6086,6088],{"class":60,"line":364},[58,6082,6083],{"class":270},"      \"id\"",[58,6085,274],{"class":259},[58,6087,5015],{"class":277},[58,6089,281],{"class":259},[58,6091,6092,6095,6097,6100],{"class":60,"line":369},[58,6093,6094],{"class":270},"      \"stop_unique_id\"",[58,6096,274],{"class":259},[58,6098,6099],{"class":277},"\"stop_unique_id\"",[58,6101,281],{"class":259},[58,6103,6104,6106,6108],{"class":60,"line":381},[58,6105,6017],{"class":270},[58,6107,274],{"class":259},[58,6109,6110],{"class":277},"\"route_id\"\n",[58,6112,6113],{"class":60,"line":393},[58,6114,5090],{"class":259},[58,6116,6117],{"class":60,"line":405},[58,6118,6055],{"class":259},[58,6120,6121,6123],{"class":60,"line":417},[58,6122,4998],{"class":270},[58,6124,289],{"class":259},[58,6126,6127],{"class":60,"line":427},[58,6128,5005],{"class":259},[58,6130,6131,6133,6135,6137],{"class":60,"line":432},[58,6132,5010],{"class":270},[58,6134,274],{"class":259},[58,6136,5015],{"class":277},[58,6138,281],{"class":259},[58,6140,6141,6143,6145,6147],{"class":60,"line":437},[58,6142,5022],{"class":270},[58,6144,274],{"class":259},[58,6146,5027],{"class":277},[58,6148,281],{"class":259},[58,6150,6151,6153,6155,6157],{"class":60,"line":449},[58,6152,5034],{"class":270},[58,6154,274],{"class":259},[58,6156,5039],{"class":270},[58,6158,281],{"class":259},[58,6160,6161,6163],{"class":60,"line":461},[58,6162,5046],{"class":270},[58,6164,289],{"class":259},[58,6166,6167],{"class":60,"line":473},[58,6168,5053],{"class":259},[58,6170,6171,6173,6175,6177],{"class":60,"line":485},[58,6172,5058],{"class":270},[58,6174,274],{"class":259},[58,6176,5063],{"class":270},[58,6178,281],{"class":259},[58,6180,6181,6183,6185],{"class":60,"line":495},[58,6182,5070],{"class":270},[58,6184,274],{"class":259},[58,6186,5075],{"class":270},[58,6188,6189],{"class":60,"line":501},[58,6190,5080],{"class":259},[58,6192,6193],{"class":60,"line":507},[58,6194,5085],{"class":259},[58,6196,6197],{"class":60,"line":513},[58,6198,5090],{"class":259},[58,6200,6201],{"class":60,"line":518},[58,6202,6055],{"class":259},[58,6204,6205,6208],{"class":60,"line":530},[58,6206,6207],{"class":270},"  \"stops_unique\"",[58,6209,289],{"class":259},[58,6211,6212],{"class":60,"line":537},[58,6213,5005],{"class":259},[58,6215,6216,6218,6220,6222],{"class":60,"line":542},[58,6217,6083],{"class":270},[58,6219,274],{"class":259},[58,6221,6099],{"class":277},[58,6223,281],{"class":259},[58,6225,6226,6228,6230,6232],{"class":60,"line":554},[58,6227,6071],{"class":270},[58,6229,274],{"class":259},[58,6231,6076],{"class":277},[58,6233,281],{"class":259},[58,6235,6236,6239,6241,6243],{"class":60,"line":565},[58,6237,6238],{"class":270},"      \"lat\"",[58,6240,274],{"class":259},[58,6242,5063],{"class":270},[58,6244,281],{"class":259},[58,6246,6247,6250,6252],{"class":60,"line":577},[58,6248,6249],{"class":270},"      \"lon\"",[58,6251,274],{"class":259},[58,6253,5075],{"class":270},[58,6255,6256],{"class":60,"line":589},[58,6257,5090],{"class":259},[58,6259,6260],{"class":60,"line":599},[58,6261,5095],{"class":259},[58,6263,6264],{"class":60,"line":604},[58,6265,5100],{"class":259},[6267,6268,6269],"h3",{"id":4815},"Routes",[15,6271,6272,6273,6277,6278,6281],{},"Je commence par les routes, dans mon cas, je ne veux que les lignes de métros.\nEn basant sur ",[22,6274,6276],{"href":6275},"assets/IDFM_Documentation_GTFS.pdf","le document GTFS de IDFM",", je peux voir que le\n",[30,6279,6280],{},"route_type"," est à 1\npour les métros. Faisons du TDD, après ce moment sans tests, pour l'import.",[6267,6283,6284],{"id":232},"Stops",[15,6286,6287,6288,4916,6290,6293,6294,6296],{},"Ensuite, les stops, ça va être plus sympa. Pour les stops, il faut faire la jointure avec\n",[30,6289,5551],{},[30,6291,6292],{},"trips",", et\nles liés aux\n",[30,6295,4815],{},".\nEn faisant cette requête :",[49,6298,6300],{"className":5233,"code":6299,"language":5235,"meta":54,"style":54},"select distinct(stop_name)\nfrom stops\ninner join stop_times on stops.stop_id = stop_times.stop_id\ninner join trips on trips.trip_id = stop_times.trip_id\ninner join routes on routes.route_id = trips.route_id\nwhere routes.route_type = 1;\n",[30,6301,6302,6307,6312,6317,6322,6327],{"__ignoreMap":54},[58,6303,6304],{"class":60,"line":61},[58,6305,6306],{},"select distinct(stop_name)\n",[58,6308,6309],{"class":60,"line":79},[58,6310,6311],{},"from stops\n",[58,6313,6314],{"class":60,"line":86},[58,6315,6316],{},"inner join stop_times on stops.stop_id = stop_times.stop_id\n",[58,6318,6319],{"class":60,"line":92},[58,6320,6321],{},"inner join trips on trips.trip_id = stop_times.trip_id\n",[58,6323,6324],{"class":60,"line":97},[58,6325,6326],{},"inner join routes on routes.route_id = trips.route_id\n",[58,6328,6329],{"class":60,"line":103},[58,6330,6331],{},"where routes.route_type = 1;\n",[15,6333,6334],{},"J'ai la réponse en 2s, et 0.6s au deuxième appel (avec du cache). C'est clairement OK, merci PG \u003C3.",[6267,6336,6338],{"id":6337},"adjacents","Adjacents",[15,6340,6341],{},"Pour les adjacents, il y a plusieurs calculs à faire.",[6267,6343,6345],{"id":6344},"adjacents-sur-une-même-ligne","Adjacents sur une même ligne",[15,6347,6348,6349,6351,6352,6355,6356,6358],{},"Il faut d'abord récupérer les adjacents sur une même ligne, pour ça il faut se baser sur les\n",[30,6350,5551],{}," grâce\nau\n",[30,6353,6354],{},"stop_sequence",".\nSi la station a un\n",[30,6357,6354],{}," de 5, alors ses adjacents sont les stations 4 et 6.",[15,6360,6361],{},"J'obtiens quelque chose avec cette requête :",[49,6363,6365],{"className":5233,"code":6364,"language":5235,"meta":54,"style":54},"SELECT DISTINCT s.stop_name AS station_name,\n        st.stop_sequence AS current_sequence,\n        adjacent_stops.stop_sequence AS adjacent_sequence,\n        adjacent_stops_station.stop_name AS adjacent_station_name,\n        r.route_short_name AS line_number\n FROM stop_times AS st\n INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n INNER JOIN stops AS s ON st.stop_id = s.stop_id\n INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n INNER JOIN trips AS t ON st.trip_id = t.trip_id\n INNER JOIN routes AS r ON t.route_id = r.route_id\n WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n AND r.route_type = 1;\n",[30,6366,6367,6372,6377,6382,6387,6392,6397,6402,6407,6412,6417,6422,6427],{"__ignoreMap":54},[58,6368,6369],{"class":60,"line":61},[58,6370,6371],{},"SELECT DISTINCT s.stop_name AS station_name,\n",[58,6373,6374],{"class":60,"line":79},[58,6375,6376],{},"        st.stop_sequence AS current_sequence,\n",[58,6378,6379],{"class":60,"line":86},[58,6380,6381],{},"        adjacent_stops.stop_sequence AS adjacent_sequence,\n",[58,6383,6384],{"class":60,"line":92},[58,6385,6386],{},"        adjacent_stops_station.stop_name AS adjacent_station_name,\n",[58,6388,6389],{"class":60,"line":97},[58,6390,6391],{},"        r.route_short_name AS line_number\n",[58,6393,6394],{"class":60,"line":103},[58,6395,6396],{}," FROM stop_times AS st\n",[58,6398,6399],{"class":60,"line":309},[58,6400,6401],{}," INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[58,6403,6404],{"class":60,"line":321},[58,6405,6406],{}," INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[58,6408,6409],{"class":60,"line":334},[58,6410,6411],{}," INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[58,6413,6414],{"class":60,"line":347},[58,6415,6416],{}," INNER JOIN trips AS t ON st.trip_id = t.trip_id\n",[58,6418,6419],{"class":60,"line":358},[58,6420,6421],{}," INNER JOIN routes AS r ON t.route_id = r.route_id\n",[58,6423,6424],{"class":60,"line":364},[58,6425,6426],{}," WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[58,6428,6429],{"class":60,"line":369},[58,6430,6431],{}," AND r.route_type = 1;\n",[15,6433,6434],{},"Elle met 5s, c'est plutôt correct sur 9 millions de lignes et pour un one-shot.",[15,6436,6437],{},"Ce qui m'étonne avec cette requête, c'est que par exemple si on prends Alésia, on a :",[49,6439,6442],{"className":6440,"code":6441,"language":126},[124],"+-----------------------------------------+------------------+-------------------+-------------------------------------+-------------+\n| station_name                            | current_sequence | adjacent_sequence | adjacent_station_name               | line_number |\n|-----------------------------------------+------------------+-------------------+-------------------------------------+-------------|\n| Alésia                                  | 1                | 0                 | Porte d'Orléans                     | 4           |\n| Alésia                                  | 1                | 2                 | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 4                | 3                 | Porte d'Orléans                     | 4           |\n| Alésia                                  | 4                | 5                 | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 19               | 18                | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 19               | 20                | Porte d'Orléans                     | 4           |\n| Alésia                                  | 24               | 23                | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 24               | 25                | Porte d'Orléans                     | 4           |\n",[30,6443,6441],{"__ignoreMap":54},[15,6445,6446],{},"On peut voir les aller-retour par exemple dans un sens, Alésia et la deuxième station (current_sequence = 1) et a donc\ncomme stations adjacentes : Porte d'Orléans et Mouton-Duvernet.\nDans l'autre sens, Alésia, c'est la 19e station avec les mêmes stations adjacentes. Mais, c'est aussi la 4e station et\nla 19e, comme si la ligne était raccourcie à un moment donné ou rallongée d'ailleurs.",[15,6448,6449,6450,6453],{},"Si j'affiche le\n",[30,6451,6452],{},"trip_headsign",", je pourrais en savoir plus",[49,6455,6458],{"className":6456,"code":6457,"language":126},[124],"+-----------------------------------------+------------------+-------------------+-------------------------------------+-------------+-------------------------------------------------+\n| station_name                            | current_sequence | adjacent_sequence | adjacent_station_name               | line_number | trip_name                                       |\n|-----------------------------------------+------------------+-------------------+-------------------------------------+-------------+-------------------------------------------------|\n| Alésia                                  | 1                | 0                 | Porte d'Orléans                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 1                | 2                 | Mouton-Duvernet                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 4                | 3                 | Porte d'Orléans                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 4                | 5                 | Mouton-Duvernet                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 19               | 18                | Mouton-Duvernet                     | 4           | Bagneux - Lucie Aubrac                          |\n| Alésia                                  | 19               | 20                | Porte d'Orléans                     | 4           | Bagneux - Lucie Aubrac                          |\n| Alésia                                  | 24               | 23                | Mouton-Duvernet                     | 4           | Bagneux - Lucie Aubrac                          |\n| Alésia                                  | 24               | 25                | Porte d'Orléans                     | 4           | Bagneux - Lucie Aubrac                          |\n",[30,6459,6457],{"__ignoreMap":54},[15,6461,6462],{},"On est clairement dans ce cas où la ligne est rallongée.",[15,6464,6465],{},"Bon dans tous les cas ça ne change pas les stations adjacentes, mais c'est intéressant à savoir.",[15,6467,6468],{},"Pour la version sans doublon :",[49,6470,6472],{"className":5233,"code":6471,"language":5235,"meta":54,"style":54},"SELECT DISTINCT s.stop_name AS station_name,\n     adjacent_stops_station.stop_name AS adjacent_station_name\nFROM stop_times AS st\nINNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\nINNER JOIN stops AS s ON st.stop_id = s.stop_id\nINNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\nINNER JOIN trips AS t ON st.trip_id = t.trip_id\nINNER JOIN routes AS r ON t.route_id = r.route_id\nWHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\nAND r.route_type = 1;\n",[30,6473,6474,6478,6483,6488,6493,6498,6503,6508,6513,6518],{"__ignoreMap":54},[58,6475,6476],{"class":60,"line":61},[58,6477,6371],{},[58,6479,6480],{"class":60,"line":79},[58,6481,6482],{},"     adjacent_stops_station.stop_name AS adjacent_station_name\n",[58,6484,6485],{"class":60,"line":86},[58,6486,6487],{},"FROM stop_times AS st\n",[58,6489,6490],{"class":60,"line":92},[58,6491,6492],{},"INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[58,6494,6495],{"class":60,"line":97},[58,6496,6497],{},"INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[58,6499,6500],{"class":60,"line":103},[58,6501,6502],{},"INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[58,6504,6505],{"class":60,"line":309},[58,6506,6507],{},"INNER JOIN trips AS t ON st.trip_id = t.trip_id\n",[58,6509,6510],{"class":60,"line":321},[58,6511,6512],{},"INNER JOIN routes AS r ON t.route_id = r.route_id\n",[58,6514,6515],{"class":60,"line":334},[58,6516,6517],{},"WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[58,6519,6520],{"class":60,"line":347},[58,6521,6522],{},"AND r.route_type = 1;\n",[15,6524,6525],{},"J'obtiens quelque chose comme ça :",[49,6527,6530],{"className":6528,"code":6529,"language":126},[124],"+-----------------------------------------+-----------------------------------------+\n| station_name                            | adjacent_station_name                   |\n|-----------------------------------------+-----------------------------------------|\n| Abbesses                                | Lamarck - Caulaincourt                  |\n| Abbesses                                | Pigalle                                 |\n| Aimé Césaire                            | Front Populaire                         |\n| Aimé Césaire                            | Mairie d'Aubervilliers                  |\n| Alexandre Dumas                         | Avron                                   |\n| Alexandre Dumas                         | Philippe Auguste                        |\n| Alma - Marceau                          | Franklin D. Roosevelt                   |\n| Alma - Marceau                          | Iéna                                    |\n| Alésia                                  | Mouton-Duvernet                         |\n| Alésia                                  | Porte d'Orléans                         |\n",[30,6531,6529],{"__ignoreMap":54},[15,6533,6534],{},"Je n'ai pas besoin du nom des stations, mais uniquement des ids, je peux donc supprimer 2 jointures.",[49,6536,6538],{"className":5233,"code":6537,"language":5235,"meta":54,"style":54},"SELECT DISTINCT st.stop_id AS stop_id,\n    adjacent_stops.stop_id AS adjacent_stop_id\nFROM stop_times AS st\nINNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\nINNER JOIN trips AS t ON st.trip_id = t.trip_id\nINNER JOIN routes AS r ON t.route_id = r.route_id\nWHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n    AND r.route_type = 1\n",[30,6539,6540,6545,6550,6554,6558,6562,6566,6570],{"__ignoreMap":54},[58,6541,6542],{"class":60,"line":61},[58,6543,6544],{},"SELECT DISTINCT st.stop_id AS stop_id,\n",[58,6546,6547],{"class":60,"line":79},[58,6548,6549],{},"    adjacent_stops.stop_id AS adjacent_stop_id\n",[58,6551,6552],{"class":60,"line":86},[58,6553,6487],{},[58,6555,6556],{"class":60,"line":92},[58,6557,6492],{},[58,6559,6560],{"class":60,"line":97},[58,6561,6507],{},[58,6563,6564],{"class":60,"line":103},[58,6565,6512],{},[58,6567,6568],{"class":60,"line":309},[58,6569,6517],{},[58,6571,6572],{"class":60,"line":321},[58,6573,6574],{},"    AND r.route_type = 1\n",[15,6576,6577],{},"Par contre, je n'ai pas du tout pris en compte le temps de trajet entre les stations, je vais devoir le faire.",[15,6579,6580],{},"J'obtiens :",[49,6582,6584],{"className":5233,"code":6583,"language":5235,"meta":54,"style":54}," SELECT DISTINCT\n     st.stop_id AS stop_id,\n     adjacent_stops.stop_id AS adjacent_stop_id,\n     st.arrival_time::interval - adjacent_stops.arrival_time::interval AS duration,\n     t.trip_headsign AS trip_headsign,\n     t.direction_id AS direction_id,\n     r.route_short_name AS route_name\n FROM stop_times AS st\n INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n INNER JOIN trips AS t ON st.trip_id = t.trip_id\n INNER JOIN routes AS r ON t.route_id = r.route_id\n WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n  AND r.route_type = 1;\n",[30,6585,6586,6591,6596,6601,6606,6611,6616,6621,6625,6629,6633,6637,6641],{"__ignoreMap":54},[58,6587,6588],{"class":60,"line":61},[58,6589,6590],{}," SELECT DISTINCT\n",[58,6592,6593],{"class":60,"line":79},[58,6594,6595],{},"     st.stop_id AS stop_id,\n",[58,6597,6598],{"class":60,"line":86},[58,6599,6600],{},"     adjacent_stops.stop_id AS adjacent_stop_id,\n",[58,6602,6603],{"class":60,"line":92},[58,6604,6605],{},"     st.arrival_time::interval - adjacent_stops.arrival_time::interval AS duration,\n",[58,6607,6608],{"class":60,"line":97},[58,6609,6610],{},"     t.trip_headsign AS trip_headsign,\n",[58,6612,6613],{"class":60,"line":103},[58,6614,6615],{},"     t.direction_id AS direction_id,\n",[58,6617,6618],{"class":60,"line":309},[58,6619,6620],{},"     r.route_short_name AS route_name\n",[58,6622,6623],{"class":60,"line":321},[58,6624,6396],{},[58,6626,6627],{"class":60,"line":334},[58,6628,6401],{},[58,6630,6631],{"class":60,"line":347},[58,6632,6416],{},[58,6634,6635],{"class":60,"line":358},[58,6636,6421],{},[58,6638,6639],{"class":60,"line":364},[58,6640,6426],{},[58,6642,6643],{"class":60,"line":369},[58,6644,6645],{},"  AND r.route_type = 1;\n",[15,6647,6648],{},"Dont voici le résultat :",[49,6650,6653],{"className":6651,"code":6652,"language":126},[124],"+------------+------------------+------------------+-------------------------------------------------+--------------+------------+\n| stop_id    | adjacent_stop_id | duration         | trip_headsign                                   | direction_id | route_name |\n|------------+------------------+------------------+-------------------------------------------------+--------------+------------|\n| IDFM:21784 | IDFM:463056      | 0:02:00          | Créteil-Pointe du Lac                           | 1            | 8          |\n| IDFM:21784 | IDFM:463056      | 0:03:00          | Créteil-Pointe du Lac                           | 1            | 8          |\n| IDFM:21902 | IDFM:463250      | -1 day, 23:58:00 | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n| IDFM:21902 | IDFM:463250      | -1 day, 23:59:00 | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n| IDFM:21902 | IDFM:463316      | 0:01:00          | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n| IDFM:21902 | IDFM:463316      | 0:02:00          | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n",[30,6654,6652],{"__ignoreMap":54},[15,6656,6657],{},"On peut constater plusieurs soucis, la durée en négatif et surtout pas la durée pour un même trajet.",[15,6659,6660],{},"En faisant un case, je résous le problème de la durée négative :",[49,6662,6664],{"className":5233,"code":6663,"language":5235,"meta":54,"style":54}," SELECT DISTINCT\n     st.stop_id AS stop_id,\n     adjacent_stops.stop_id AS adjacent_stop_id,\n     CASE\n          WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n              THEN adjacent_stops.arrival_time::interval - st.arrival_time::interval\n          ELSE st.arrival_time::interval - adjacent_stops.arrival_time::interval\n      END AS duration,\n     t.trip_headsign AS trip_headsign,\n     t.direction_id AS direction_id,\n     r.route_short_name AS route_name\n FROM stop_times AS st\n INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n INNER JOIN trips AS t ON st.trip_id = t.trip_id\n INNER JOINroutes AS r ON t.route_id = r.route_id\n WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n    AND r.route_type = 1;\n",[30,6665,6666,6670,6674,6678,6683,6688,6693,6698,6703,6707,6711,6715,6719,6723,6727,6732,6736],{"__ignoreMap":54},[58,6667,6668],{"class":60,"line":61},[58,6669,6590],{},[58,6671,6672],{"class":60,"line":79},[58,6673,6595],{},[58,6675,6676],{"class":60,"line":86},[58,6677,6600],{},[58,6679,6680],{"class":60,"line":92},[58,6681,6682],{},"     CASE\n",[58,6684,6685],{"class":60,"line":97},[58,6686,6687],{},"          WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n",[58,6689,6690],{"class":60,"line":103},[58,6691,6692],{},"              THEN adjacent_stops.arrival_time::interval - st.arrival_time::interval\n",[58,6694,6695],{"class":60,"line":309},[58,6696,6697],{},"          ELSE st.arrival_time::interval - adjacent_stops.arrival_time::interval\n",[58,6699,6700],{"class":60,"line":321},[58,6701,6702],{},"      END AS duration,\n",[58,6704,6705],{"class":60,"line":334},[58,6706,6610],{},[58,6708,6709],{"class":60,"line":347},[58,6710,6615],{},[58,6712,6713],{"class":60,"line":358},[58,6714,6620],{},[58,6716,6717],{"class":60,"line":364},[58,6718,6396],{},[58,6720,6721],{"class":60,"line":369},[58,6722,6401],{},[58,6724,6725],{"class":60,"line":381},[58,6726,6416],{},[58,6728,6729],{"class":60,"line":393},[58,6730,6731],{}," INNER JOINroutes AS r ON t.route_id = r.route_id\n",[58,6733,6734],{"class":60,"line":405},[58,6735,6426],{},[58,6737,6738],{"class":60,"line":417},[58,6739,6740],{},"    AND r.route_type = 1;\n",[15,6742,6743],{},"Pour ma culture j'ai voulu voir les arrêts les plus longs:",[49,6745,6747],{"className":5233,"code":6746,"language":5235,"meta":54,"style":54},"WITH stops_and_adjacents AS (\n    SELECT DISTINCT\n        st.stop_id AS from_stop_id,\n        s.stop_name AS from_stop_name,\n        adjacent_stops.stop_id AS to_stop_id,\n        adjacent_stops_station.stop_name AS to_stop_name,\n        CASE\n            WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n                THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n            ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n        END AS duration\n    FROM\n        stop_times AS st\n    INNER JOIN\n        stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n    INNER JOIN\n        trips AS t ON st.trip_id = t.trip_id\n    INNER JOIN stops AS s ON st.stop_id = s.stop_id\n    INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n    INNER JOIN\n        routes AS r ON t.route_id = r.route_id\n    WHERE\n        ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n        AND r.route_type = 1\n)\nSELECT\n    from_stop_id,\n    from_stop_name,\n    to_stop_id,\n    to_stop_name,\n    MIN(duration) AS min_duration\nFROM\n    stops_and_adjacents\nGROUP BY\n    from_stop_id,\n    from_stop_name,\n    to_stop_id,\n    to_stop_name\nORDER BY min_duration DESC;\n",[30,6748,6749,6754,6759,6764,6769,6774,6779,6784,6789,6794,6799,6804,6809,6814,6819,6824,6828,6833,6838,6843,6847,6852,6857,6862,6867,6872,6877,6882,6887,6892,6897,6902,6907,6912,6917,6921,6925,6929,6934],{"__ignoreMap":54},[58,6750,6751],{"class":60,"line":61},[58,6752,6753],{},"WITH stops_and_adjacents AS (\n",[58,6755,6756],{"class":60,"line":79},[58,6757,6758],{},"    SELECT DISTINCT\n",[58,6760,6761],{"class":60,"line":86},[58,6762,6763],{},"        st.stop_id AS from_stop_id,\n",[58,6765,6766],{"class":60,"line":92},[58,6767,6768],{},"        s.stop_name AS from_stop_name,\n",[58,6770,6771],{"class":60,"line":97},[58,6772,6773],{},"        adjacent_stops.stop_id AS to_stop_id,\n",[58,6775,6776],{"class":60,"line":103},[58,6777,6778],{},"        adjacent_stops_station.stop_name AS to_stop_name,\n",[58,6780,6781],{"class":60,"line":309},[58,6782,6783],{},"        CASE\n",[58,6785,6786],{"class":60,"line":321},[58,6787,6788],{},"            WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n",[58,6790,6791],{"class":60,"line":334},[58,6792,6793],{},"                THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n",[58,6795,6796],{"class":60,"line":347},[58,6797,6798],{},"            ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n",[58,6800,6801],{"class":60,"line":358},[58,6802,6803],{},"        END AS duration\n",[58,6805,6806],{"class":60,"line":364},[58,6807,6808],{},"    FROM\n",[58,6810,6811],{"class":60,"line":369},[58,6812,6813],{},"        stop_times AS st\n",[58,6815,6816],{"class":60,"line":381},[58,6817,6818],{},"    INNER JOIN\n",[58,6820,6821],{"class":60,"line":393},[58,6822,6823],{},"        stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[58,6825,6826],{"class":60,"line":405},[58,6827,6818],{},[58,6829,6830],{"class":60,"line":417},[58,6831,6832],{},"        trips AS t ON st.trip_id = t.trip_id\n",[58,6834,6835],{"class":60,"line":427},[58,6836,6837],{},"    INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[58,6839,6840],{"class":60,"line":432},[58,6841,6842],{},"    INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[58,6844,6845],{"class":60,"line":437},[58,6846,6818],{},[58,6848,6849],{"class":60,"line":449},[58,6850,6851],{},"        routes AS r ON t.route_id = r.route_id\n",[58,6853,6854],{"class":60,"line":461},[58,6855,6856],{},"    WHERE\n",[58,6858,6859],{"class":60,"line":473},[58,6860,6861],{},"        ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[58,6863,6864],{"class":60,"line":485},[58,6865,6866],{},"        AND r.route_type = 1\n",[58,6868,6869],{"class":60,"line":495},[58,6870,6871],{},")\n",[58,6873,6874],{"class":60,"line":501},[58,6875,6876],{},"SELECT\n",[58,6878,6879],{"class":60,"line":507},[58,6880,6881],{},"    from_stop_id,\n",[58,6883,6884],{"class":60,"line":513},[58,6885,6886],{},"    from_stop_name,\n",[58,6888,6889],{"class":60,"line":518},[58,6890,6891],{},"    to_stop_id,\n",[58,6893,6894],{"class":60,"line":530},[58,6895,6896],{},"    to_stop_name,\n",[58,6898,6899],{"class":60,"line":537},[58,6900,6901],{},"    MIN(duration) AS min_duration\n",[58,6903,6904],{"class":60,"line":542},[58,6905,6906],{},"FROM\n",[58,6908,6909],{"class":60,"line":554},[58,6910,6911],{},"    stops_and_adjacents\n",[58,6913,6914],{"class":60,"line":565},[58,6915,6916],{},"GROUP BY\n",[58,6918,6919],{"class":60,"line":577},[58,6920,6881],{},[58,6922,6923],{"class":60,"line":589},[58,6924,6886],{},[58,6926,6927],{"class":60,"line":599},[58,6928,6891],{},[58,6930,6931],{"class":60,"line":604},[58,6932,6933],{},"    to_stop_name\n",[58,6935,6936],{"class":60,"line":609},[58,6937,6938],{},"ORDER BY min_duration DESC;\n",[15,6940,6941],{},"Et voici les résultats :",[49,6943,6946],{"className":6944,"code":6945,"language":126},[124],"+--------------+-----------------------------------------+-------------+-----------------------------------------+--------------+\n| from_stop_id | from_stop_name                          | to_stop_id  | to_stop_name                            | min_duration |\n|--------------+-----------------------------------------+-------------+-----------------------------------------+--------------|\n| IDFM:463221  | Mairie de Montreuil                     | IDFM:21913  | Porte de Montreuil                      | 00:06:00     |\n| IDFM:21913   | Porte de Montreuil                      | IDFM:463221 | Mairie de Montreuil                     | 00:06:00     |\n| IDFM:463131  | Bobigny Pablo Picasso                   | IDFM:22014  | Bobigny-Pantin - Raymond Queneau        | 00:04:00     |\n| IDFM:22014   | Bobigny-Pantin - Raymond Queneau        | IDFM:463131 | Bobigny Pablo Picasso                   | 00:04:00     |\n| IDFM:463002  | Bobigny-Pantin - Raymond Queneau        | IDFM:22015  | Bobigny Pablo Picasso                   | 00:03:00     |\n| IDFM:463159  | Châtelet                                | IDFM:21958  | Gare de Lyon                            | 00:03:00     |\n| IDFM:21959   | Châtelet                                | IDFM:463046 | Gare de Lyon                            | 00:03:00     |\n| IDFM:22015   | Bobigny Pablo Picasso                   | IDFM:463002 | Bobigny-Pantin - Raymond Queneau        | 00:03:00     |\n| IDFM:21958   | Gare de Lyon                            | IDFM:463159 | Châtelet                                | 00:03:00     |\n| IDFM:463046  | Gare de Lyon                            | IDFM:21959  | Châtelet                                | 00:03:00     |\n",[30,6947,6945],{"__ignoreMap":54},[15,6949,6950],{},"Ce qui est intéressant, c'est que le chemin : Mairie de Montreuil -> Porte de Montreuil, ne devrait pas exister, car il\ny a des stations entre les deux.",[15,6952,6953,6954,6956,6957,6960,6961,6964],{},"Oups, je me rends compte que ce qui peut m'aider c'est dans la table\n",[30,6955,5551],{},", il y a un\n",[30,6958,6959],{},"pickup_type","\net\n",[30,6962,6963],{},"drop_off_type"," mais je n'ai\npas fait la colonne. Je vais devoir la rajouter.",[15,6966,6967,6968,6973],{},"D'ailleurs, j'en ai un peu marre de regarder le csv dans TextEdit,\nj'installe ",[22,6969,6972],{"href":6970,"rel":6971},"https://github.com/YS-L/csvlens",[26],"csvlens",", c'est plutôt pas mal.",[15,6975,6976],{},"En regardant les données après avoir ajouté les colonnes, je me rends qu'il y a pas mal où on ne peut pas monter ou\ndescendre :",[49,6978,6981],{"className":6979,"code":6980,"language":126},[124],"postgres@localhost:idfm> select count(*), count(*) filter(where drop_off_type = 1), count(*) filter(where pickup_type =1) from stop_times;\n+---------+--------+--------+\n| count   | count  | count  |\n|---------+--------+--------|\n| 9761752 | 442360 | 441737 |\n+---------+--------+--------+\nSELECT 1\nTime: 0.958s\n",[30,6982,6980],{"__ignoreMap":54},[15,6984,6985],{},"En regardant du coup notre cas :",[49,6987,6989],{"className":5233,"code":6988,"language":5235,"meta":54,"style":54},"postgres@localhost:idfm> SELECT DISTINCT\n         st.stop_id AS from_stop_id,\n         s.stop_name AS from_stop_name,\n         adjacent_stops.stop_id AS to_stop_id,\n         adjacent_stops_station.stop_name AS to_stop_name,\n         CASE\n             WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n                 THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n             ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n         END AS duration,\n         st.pickup_type, st.drop_off_type, adjacent_stops.pickup_type, adjacent_stops.drop_off_type\n     FROM\n         stop_times AS st\n     INNER JOIN\n         stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n     INNER JOIN\n         trips AS t ON st.trip_id = t.trip_id\n     INNER JOIN stops AS s ON st.stop_id = s.stop_id\n     INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n     INNER JOIN\n         routes AS r ON t.route_id = r.route_id\n     WHERE\n         ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n         AND r.route_type = 1 AND st.stop_id = 'IDFM:463221'\n+--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------+\n| from_stop_id | from_stop_name      | to_stop_id  | to_stop_name       | duration | pickup_type | drop_off_type | pickup_type | drop_off_type |\n|--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------|\n| IDFM:463221  | Mairie de Montreuil | IDFM:21913  | Porte de Montreuil | 00:06:00 | 0           | 1             | 1           | 0             |\n| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:01:00 | 0           | 1             | 0           | 0             |\n| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:02:00 | 0           | 1             | 0           | 0             |\n+--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------+\n",[30,6990,6991,6996,7000,7005,7009,7014,7018,7022,7026,7030,7035,7040,7044,7048,7052,7056,7060,7064,7069,7074,7078,7082,7086,7090,7095,7100,7105,7110,7115,7120,7125],{"__ignoreMap":54},[58,6992,6993],{"class":60,"line":61},[58,6994,6995],{},"postgres@localhost:idfm> SELECT DISTINCT\n",[58,6997,6998],{"class":60,"line":79},[58,6999,5252],{},[58,7001,7002],{"class":60,"line":86},[58,7003,7004],{},"         s.stop_name AS from_stop_name,\n",[58,7006,7007],{"class":60,"line":92},[58,7008,5257],{},[58,7010,7011],{"class":60,"line":97},[58,7012,7013],{},"         adjacent_stops_station.stop_name AS to_stop_name,\n",[58,7015,7016],{"class":60,"line":103},[58,7017,5262],{},[58,7019,7020],{"class":60,"line":309},[58,7021,5267],{},[58,7023,7024],{"class":60,"line":321},[58,7025,5272],{},[58,7027,7028],{"class":60,"line":334},[58,7029,5277],{},[58,7031,7032],{"class":60,"line":347},[58,7033,7034],{},"         END AS duration,\n",[58,7036,7037],{"class":60,"line":358},[58,7038,7039],{},"         st.pickup_type, st.drop_off_type, adjacent_stops.pickup_type, adjacent_stops.drop_off_type\n",[58,7041,7042],{"class":60,"line":364},[58,7043,5287],{},[58,7045,7046],{"class":60,"line":369},[58,7047,5292],{},[58,7049,7050],{"class":60,"line":381},[58,7051,5297],{},[58,7053,7054],{"class":60,"line":393},[58,7055,5302],{},[58,7057,7058],{"class":60,"line":405},[58,7059,5297],{},[58,7061,7062],{"class":60,"line":417},[58,7063,5311],{},[58,7065,7066],{"class":60,"line":427},[58,7067,7068],{},"     INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[58,7070,7071],{"class":60,"line":432},[58,7072,7073],{},"     INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[58,7075,7076],{"class":60,"line":437},[58,7077,5297],{},[58,7079,7080],{"class":60,"line":449},[58,7081,5320],{},[58,7083,7084],{"class":60,"line":461},[58,7085,5325],{},[58,7087,7088],{"class":60,"line":473},[58,7089,5330],{},[58,7091,7092],{"class":60,"line":485},[58,7093,7094],{},"         AND r.route_type = 1 AND st.stop_id = 'IDFM:463221'\n",[58,7096,7097],{"class":60,"line":495},[58,7098,7099],{},"+--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------+\n",[58,7101,7102],{"class":60,"line":501},[58,7103,7104],{},"| from_stop_id | from_stop_name      | to_stop_id  | to_stop_name       | duration | pickup_type | drop_off_type | pickup_type | drop_off_type |\n",[58,7106,7107],{"class":60,"line":507},[58,7108,7109],{},"|--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------|\n",[58,7111,7112],{"class":60,"line":513},[58,7113,7114],{},"| IDFM:463221  | Mairie de Montreuil | IDFM:21913  | Porte de Montreuil | 00:06:00 | 0           | 1             | 1           | 0             |\n",[58,7116,7117],{"class":60,"line":518},[58,7118,7119],{},"| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:01:00 | 0           | 1             | 0           | 0             |\n",[58,7121,7122],{"class":60,"line":530},[58,7123,7124],{},"| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:02:00 | 0           | 1             | 0           | 0             |\n",[58,7126,7127],{"class":60,"line":537},[58,7128,7099],{},[15,7130,7131],{},"Donc ce qu'on peut voir c'est qu'à Mairie de Montreuil, c'est un arrêt où on peut que monter, mais on ne peut pas\ndescendre (le train doit faire une boucle ou autres). Et à son arrivée à Porte de Montreuil, on ne peut que descendre.",[15,7133,7134],{},"On est vraiment dans un cas à la marge, je pense. Est-ce que je ne pourrais pas avoir tous les bouts de lignes pour\néviter ce genre de cas ?",[6267,7136,7138],{"id":7137},"adjacents-sur-une-correspondance","Adjacents sur une correspondance",[15,7140,7141],{},"Exemple : Saint-Lazare : Je peux changer de la ligne 13 à la 12, 14, …",[15,7143,7144,7145,233,7147,5430],{},"Il faut donc récupérer les\n",[30,7146,5427],{},[30,7148,232],{},[4842,7150,4939],{"id":4938},[4573,7152,7153,7160],{},[168,7154,7155],{},[22,7156,7159],{"href":7157,"rel":7158},"https://2ality.com/2019/11/nodejs-streams-async-iteration.html",[26],"Easier Node.js streams via async iteration",[168,7161,7162],{},[22,7163,6972],{"href":6970,"rel":7164},[26],[130,7166,5670],{},{"title":54,"searchDepth":79,"depth":79,"links":7168},[7169,7170,7177],{"id":5709,"depth":79,"text":5710},{"id":5988,"depth":79,"text":5989,"children":7171},[7172,7173,7174,7175,7176],{"id":4815,"depth":86,"text":6269},{"id":232,"depth":86,"text":6284},{"id":6337,"depth":86,"text":6338},{"id":6344,"depth":86,"text":6345},{"id":7137,"depth":86,"text":7138},{"id":4938,"depth":79,"text":4939},{"date":5681},"/blog/2024-03-27",{"title":5681,"description":5689},"blog/2024-03-27","IL_KVPET7djwRa2uFT2uqipy8tmjnU9FSf5maCvUOl0",{"id":7184,"title":7185,"body":7186,"description":7193,"extension":135,"meta":7809,"navigation":82,"path":7810,"seo":7811,"stem":7812,"__hash__":7813},"blog/blog/2024-03-26.md","2024-03-26",{"type":8,"value":7187,"toc":7806},[7188,7191,7194,7197,7200,7203,7206,7215,7226,7229,7232,7240,7243,7291,7308,7311,7500,7503,7511,7514,7517,7532,7535,7538,7773,7776,7785,7788,7791,7794,7796,7804],[11,7189,7185],{"id":7190},"_2024-03-26",[15,7192,7193],{},"Bon qu'est-ce que je souhaite faire et pour faire quoi ?",[15,7195,7196],{},"Actuellement, l'application prend en charge les lignes de métro de Paris, et permet de calculer un itinéraire entre deux\nstations en fonction du nombre de stations. C'est un peu simpliste, mais ça fonctionne.",[15,7198,7199],{},"J'aimerais ajouter la possibilité de jouer avec le trajet le plus rapide, et le moins de correspondance.\nPour la première partie, il me faut le temps entre chaque station, et le temps de correspondance dans une station.",[15,7201,7202],{},"Pour avoir cette information, je vais devoir utiliser les données d'Île-de-France Mobilités, et plus particulièrement\nle General Transit Feed Specification (GTFS) dans sa version schedule.",[15,7204,7205],{},"Je vais devoir utiliser les données, c'est clairement du relationnel, et je vais devoir faire des jointures entre les\ndifférents fichiers.\nEst-ce que je vais devoir utiliser une BDD pour ça ? Franchement, je pense que les requêtes peuvent me simplifier la\nvie.",[15,7207,7208,7209,7214],{},"Je trouve ",[22,7210,7213],{"href":7211,"rel":7212},"https://docs.mobilitydb.com/MobilityDB-workshop/master/ch04.html#idp22",[26],"un article"," qui donne les schémas à\ncréer pour PostgreSQL et les étapes pour copier les données. C'est ce qu'il me faut.",[15,7216,7217,7218,7221,7222,7225],{},"Ce qui m'embête avec les données d'IDFM, c'est qu'il n'y a pas le fichier\n",[30,7219,7220],{},"shape.txt",", ça me permettrait de tracer les\nlignes plus facilement. J'ai par contre bien récupéré les tracés des lignes, qui comporte le\n",[30,7223,7224],{},"route_id",", c'est plutôt\nok.",[15,7227,7228],{},"Si je résume, pour mon besoin, je charge les fichiers dans ma BDD. Grâce à ça, je peux faire des requêtes pour avoir le\ntemps entre chaque station et chaque correspondance.",[15,7230,7231],{},"Pour me baser que sur le GTFS qu'est-ce qu'il me faut :",[4573,7233,7234,7237],{},[168,7235,7236],{},"Calculer les stations adjacentes",[168,7238,7239],{},"Calculer les portions de lignes à afficher entre les stations",[15,7241,7242],{},"Essayons de voir comment je peux faire ça.",[165,7244,7245,7271,7274],{},[168,7246,7247,7248,281,7250,281,7252,7254,7255,7258,7259,281,7261,281,7264,281,7266,281,7268,33],{},"Obtenir les stations adjacentes : j'utilise une jointure entre :\n",[30,7249,5551],{},[30,7251,6292],{},[30,7253,4815],{},". Je ne garde que les\nmétros :\n",[30,7256,7257],{},"route_type = 1",". Je fais un distinct\nsur\n",[30,7260,6452],{},[30,7262,7263],{},"direction_id",[30,7265,7224],{},[30,7267,5555],{},[30,7269,7270],{},"stop_name",[168,7272,7273],{},"Obtenir les portions de lignes à afficher : Je le fais en JavaScript",[168,7275,7276,7277,4474,7279,7281,7282,281,7285,281,7288,33],{},"Obtenir les correspondances : j'utilise une jointure entre\n",[30,7278,5427],{},[30,7280,232],{},". Je garde le\n",[30,7283,7284],{},"from_stop_id",[30,7286,7287],{},"to_stop_id",[30,7289,7290],{},"transversal_time",[15,7292,7293,7294,7297,7298,4474,7301,7303,7304,7307],{},"Cela me parait plutôt bon comme plan, je me demande si je vais pas stocker directement la portion avec la station\nadjacente.\nD'ailleurs est-ce que j'utilise le même vocabulaire :\n",[30,7295,7296],{},"stop"," à la place de\n",[30,7299,7300],{},"station",[30,7302,4815],{}," à la place\nde\n",[30,7305,7306],{},"lignes"," ?",[15,7309,7310],{},"Ce qui me donnerait quelque chose comme :",[49,7312,7314],{"className":250,"code":7313,"language":252,"meta":54,"style":54},"{\n  \"routes\": [\n    {\n      \"route_id\": \"route_id\",\n      \"route_name\": \"route_name\",\n      \"route_color\": \"route_color\"\n    }\n  ],\n  \"stops\": [\n    {\n      \"name\": \"stop_name\",\n      \"id\": \"stop_id\",\n      \"route_id\": \"route_id\"\n    }\n  ],\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ]\n}\n",[30,7315,7316,7320,7326,7330,7340,7350,7358,7362,7366,7372,7376,7386,7396,7404,7408,7412,7418,7422,7432,7442,7452,7458,7462,7472,7480,7484,7488,7492,7496],{"__ignoreMap":54},[58,7317,7318],{"class":60,"line":61},[58,7319,4993],{"class":259},[58,7321,7322,7324],{"class":60,"line":79},[58,7323,6006],{"class":270},[58,7325,289],{"class":259},[58,7327,7328],{"class":60,"line":86},[58,7329,5005],{"class":259},[58,7331,7332,7334,7336,7338],{"class":60,"line":92},[58,7333,6017],{"class":270},[58,7335,274],{"class":259},[58,7337,6022],{"class":277},[58,7339,281],{"class":259},[58,7341,7342,7344,7346,7348],{"class":60,"line":97},[58,7343,6029],{"class":270},[58,7345,274],{"class":259},[58,7347,6034],{"class":277},[58,7349,281],{"class":259},[58,7351,7352,7354,7356],{"class":60,"line":103},[58,7353,6041],{"class":270},[58,7355,274],{"class":259},[58,7357,6046],{"class":277},[58,7359,7360],{"class":60,"line":309},[58,7361,5090],{"class":259},[58,7363,7364],{"class":60,"line":321},[58,7365,6055],{"class":259},[58,7367,7368,7370],{"class":60,"line":334},[58,7369,6060],{"class":270},[58,7371,289],{"class":259},[58,7373,7374],{"class":60,"line":347},[58,7375,5005],{"class":259},[58,7377,7378,7380,7382,7384],{"class":60,"line":358},[58,7379,6071],{"class":270},[58,7381,274],{"class":259},[58,7383,6076],{"class":277},[58,7385,281],{"class":259},[58,7387,7388,7390,7392,7394],{"class":60,"line":364},[58,7389,6083],{"class":270},[58,7391,274],{"class":259},[58,7393,5015],{"class":277},[58,7395,281],{"class":259},[58,7397,7398,7400,7402],{"class":60,"line":369},[58,7399,6017],{"class":270},[58,7401,274],{"class":259},[58,7403,6110],{"class":277},[58,7405,7406],{"class":60,"line":381},[58,7407,5090],{"class":259},[58,7409,7410],{"class":60,"line":393},[58,7411,6055],{"class":259},[58,7413,7414,7416],{"class":60,"line":405},[58,7415,4998],{"class":270},[58,7417,289],{"class":259},[58,7419,7420],{"class":60,"line":417},[58,7421,5005],{"class":259},[58,7423,7424,7426,7428,7430],{"class":60,"line":427},[58,7425,5010],{"class":270},[58,7427,274],{"class":259},[58,7429,5015],{"class":277},[58,7431,281],{"class":259},[58,7433,7434,7436,7438,7440],{"class":60,"line":432},[58,7435,5022],{"class":270},[58,7437,274],{"class":259},[58,7439,5027],{"class":277},[58,7441,281],{"class":259},[58,7443,7444,7446,7448,7450],{"class":60,"line":437},[58,7445,5034],{"class":270},[58,7447,274],{"class":259},[58,7449,5039],{"class":270},[58,7451,281],{"class":259},[58,7453,7454,7456],{"class":60,"line":449},[58,7455,5046],{"class":270},[58,7457,289],{"class":259},[58,7459,7460],{"class":60,"line":461},[58,7461,5053],{"class":259},[58,7463,7464,7466,7468,7470],{"class":60,"line":473},[58,7465,5058],{"class":270},[58,7467,274],{"class":259},[58,7469,5063],{"class":270},[58,7471,281],{"class":259},[58,7473,7474,7476,7478],{"class":60,"line":485},[58,7475,5070],{"class":270},[58,7477,274],{"class":259},[58,7479,5075],{"class":270},[58,7481,7482],{"class":60,"line":495},[58,7483,5080],{"class":259},[58,7485,7486],{"class":60,"line":501},[58,7487,5085],{"class":259},[58,7489,7490],{"class":60,"line":507},[58,7491,5090],{"class":259},[58,7493,7494],{"class":60,"line":513},[58,7495,5095],{"class":259},[58,7497,7498],{"class":60,"line":518},[58,7499,5100],{"class":259},[15,7501,7502],{},"Un problème que je vois, c'est quand je vais vouloir ajouter une station, j'aimerais :",[4573,7504,7505,7508],{},[168,7506,7507],{},"ajouter un unique point sur la carte",[168,7509,7510],{},"s'il y a des liaisons, les ajouter",[15,7512,7513],{},"Mais, en l'état, je ne vois pas comment je choisis la station à afficher. Il me faut peut-être une liste de stations\nsans\nrelation, qui est uniquement le point à afficher si la station est seule. Je vais chercher dans les données.",[15,7515,7516],{},"Il y a bien 2 versions :",[4573,7518,7519,7526],{},[168,7520,7521],{},[22,7522,7525],{"href":7523,"rel":7524},"https://prim.iledefrance-mobilites.fr/jeux-de-donnees/emplacement-des-gares-idf",[26],"Gares et stations du réseau ferré d'Île-de-France (par ligne) - PRIM IDFM",[168,7527,7528],{},[22,7529,7531],{"href":4932,"rel":7530},[26],"Gares et stations du réseau ferré d'Île-de-France (donnée généralisée) - PRIM IDFM",[15,7533,7534],{},"Cool, ça répond à mon besoin et améliora l'application.",[15,7536,7537],{},"Donc comment je représente le json :",[49,7539,7541],{"className":250,"code":7540,"language":252,"meta":54,"style":54},"{\n  \"routes\": [\n    {\n      \"route_id\": \"route_id\",\n      \"route_name\": \"route_name\",\n      \"route_color\": \"route_color\"\n    }\n  ],\n  \"stops\": [\n    {\n      \"name\": \"stop_name\",\n      \"id\": \"stop_id\",\n      \"route_id\": \"route_id\"\n    }\n  ],\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ],\n  \"stops_unique\": [\n    {\n      \"name\": \"stop_name\",\n      \"lat\": 48.123,\n      \"lon\": 2.123\n    }\n  ]\n}\n",[30,7542,7543,7547,7553,7557,7567,7577,7585,7589,7593,7599,7603,7613,7623,7631,7635,7639,7645,7649,7659,7669,7679,7685,7689,7699,7707,7711,7715,7719,7723,7729,7733,7743,7753,7761,7765,7769],{"__ignoreMap":54},[58,7544,7545],{"class":60,"line":61},[58,7546,4993],{"class":259},[58,7548,7549,7551],{"class":60,"line":79},[58,7550,6006],{"class":270},[58,7552,289],{"class":259},[58,7554,7555],{"class":60,"line":86},[58,7556,5005],{"class":259},[58,7558,7559,7561,7563,7565],{"class":60,"line":92},[58,7560,6017],{"class":270},[58,7562,274],{"class":259},[58,7564,6022],{"class":277},[58,7566,281],{"class":259},[58,7568,7569,7571,7573,7575],{"class":60,"line":97},[58,7570,6029],{"class":270},[58,7572,274],{"class":259},[58,7574,6034],{"class":277},[58,7576,281],{"class":259},[58,7578,7579,7581,7583],{"class":60,"line":103},[58,7580,6041],{"class":270},[58,7582,274],{"class":259},[58,7584,6046],{"class":277},[58,7586,7587],{"class":60,"line":309},[58,7588,5090],{"class":259},[58,7590,7591],{"class":60,"line":321},[58,7592,6055],{"class":259},[58,7594,7595,7597],{"class":60,"line":334},[58,7596,6060],{"class":270},[58,7598,289],{"class":259},[58,7600,7601],{"class":60,"line":347},[58,7602,5005],{"class":259},[58,7604,7605,7607,7609,7611],{"class":60,"line":358},[58,7606,6071],{"class":270},[58,7608,274],{"class":259},[58,7610,6076],{"class":277},[58,7612,281],{"class":259},[58,7614,7615,7617,7619,7621],{"class":60,"line":364},[58,7616,6083],{"class":270},[58,7618,274],{"class":259},[58,7620,5015],{"class":277},[58,7622,281],{"class":259},[58,7624,7625,7627,7629],{"class":60,"line":369},[58,7626,6017],{"class":270},[58,7628,274],{"class":259},[58,7630,6110],{"class":277},[58,7632,7633],{"class":60,"line":381},[58,7634,5090],{"class":259},[58,7636,7637],{"class":60,"line":393},[58,7638,6055],{"class":259},[58,7640,7641,7643],{"class":60,"line":405},[58,7642,4998],{"class":270},[58,7644,289],{"class":259},[58,7646,7647],{"class":60,"line":417},[58,7648,5005],{"class":259},[58,7650,7651,7653,7655,7657],{"class":60,"line":427},[58,7652,5010],{"class":270},[58,7654,274],{"class":259},[58,7656,5015],{"class":277},[58,7658,281],{"class":259},[58,7660,7661,7663,7665,7667],{"class":60,"line":432},[58,7662,5022],{"class":270},[58,7664,274],{"class":259},[58,7666,5027],{"class":277},[58,7668,281],{"class":259},[58,7670,7671,7673,7675,7677],{"class":60,"line":437},[58,7672,5034],{"class":270},[58,7674,274],{"class":259},[58,7676,5039],{"class":270},[58,7678,281],{"class":259},[58,7680,7681,7683],{"class":60,"line":449},[58,7682,5046],{"class":270},[58,7684,289],{"class":259},[58,7686,7687],{"class":60,"line":461},[58,7688,5053],{"class":259},[58,7690,7691,7693,7695,7697],{"class":60,"line":473},[58,7692,5058],{"class":270},[58,7694,274],{"class":259},[58,7696,5063],{"class":270},[58,7698,281],{"class":259},[58,7700,7701,7703,7705],{"class":60,"line":485},[58,7702,5070],{"class":270},[58,7704,274],{"class":259},[58,7706,5075],{"class":270},[58,7708,7709],{"class":60,"line":495},[58,7710,5080],{"class":259},[58,7712,7713],{"class":60,"line":501},[58,7714,5085],{"class":259},[58,7716,7717],{"class":60,"line":507},[58,7718,5090],{"class":259},[58,7720,7721],{"class":60,"line":513},[58,7722,6055],{"class":259},[58,7724,7725,7727],{"class":60,"line":518},[58,7726,6207],{"class":270},[58,7728,289],{"class":259},[58,7730,7731],{"class":60,"line":530},[58,7732,5005],{"class":259},[58,7734,7735,7737,7739,7741],{"class":60,"line":537},[58,7736,6071],{"class":270},[58,7738,274],{"class":259},[58,7740,6076],{"class":277},[58,7742,281],{"class":259},[58,7744,7745,7747,7749,7751],{"class":60,"line":542},[58,7746,6238],{"class":270},[58,7748,274],{"class":259},[58,7750,5063],{"class":270},[58,7752,281],{"class":259},[58,7754,7755,7757,7759],{"class":60,"line":554},[58,7756,6249],{"class":270},[58,7758,274],{"class":259},[58,7760,5075],{"class":270},[58,7762,7763],{"class":60,"line":565},[58,7764,5090],{"class":259},[58,7766,7767],{"class":60,"line":577},[58,7768,5095],{"class":259},[58,7770,7771],{"class":60,"line":589},[58,7772,5100],{"class":259},[15,7774,7775],{},"J'ai l'impression qu'avec ça je peux répondre à tout ce que je veux faire.",[15,7777,7778,7779,4474,7782,33],{},"Pour ce qui est d'intéragir avec la base de données, je fais un combo dont j'ai l'habitude :\n",[30,7780,7781],{},"knex",[30,7783,7784],{},"pg",[15,7786,7787],{},"En moins d'1 minute avec un copier/coller d'un autre projet, j'ai quelque chose d'opérationnel.",[15,7789,7790],{},"J'enchaine ensuite, avec la création de la migration, je m'aide du schéma de MobilityDB, je demande à Mistral en Local\nde me le convertir en knex schema builder. Cela fonctionne plutôt bien.",[15,7792,7793],{},"Pour les données, je crée des fonctions en TDD pour insérer les données. Puis, j'essaie de parser le csv en stream pour\nles insérer en base. Cela ne fonctionne pas comme je veux je regarderai demain.",[4842,7795,4939],{"id":4938},[4573,7797,7798],{},[168,7799,7800],{},[22,7801,7803],{"href":7211,"rel":7802},[26],"Managing GTFS Data - MobilityDB",[130,7805,4448],{},{"title":54,"searchDepth":79,"depth":79,"links":7807},[7808],{"id":4938,"depth":79,"text":4939},{"date":7185},"/blog/2024-03-26",{"title":7185,"description":7193},"blog/2024-03-26","j-fdPkW4CVoUdtUl1_FaVw63wmd-Oz_ZirKwN9jBoao",{"id":7815,"title":7816,"body":7817,"description":8021,"extension":135,"meta":8022,"navigation":82,"path":8023,"seo":8024,"stem":8025,"__hash__":8026},"blog/blog/2024-03-25.md","2024-03-25",{"type":8,"value":7818,"toc":8018},[7819,7822,7834,7837,7840,7848,7856,7859,7870,7873,7887,7890,7893,7910,7923,7983,7986,7988,8016],[11,7820,7816],{"id":7821},"_2024-03-25",[15,7823,7824,7825,7828,7829],{},"Je m'intéresse toujours au coût de changement de ligne/correspondance, qui est nommé\n",[30,7826,7827],{},"transfer walking",".\nJe trouve un article intéressant sur le sujet de la génération des routes :\n",[22,7830,7833],{"href":7831,"rel":7832},"https://www.sciencedirect.com/science/article/pii/S2095756416300988",[26],"Generating route choice sets with operation information on metro networks",[15,7835,7836],{},"Dans cet article, il n'y a pas beaucoup de détail sur comment sont calculés le temps de correspondance,\nsi ce n'est qu'il est calculé en fonction de l'agencement de la station.",[15,7838,7839],{},"Je me demande si, en estimant un temps de changement de ligne via les positions GPS, ne serait pas suffisant ?",[15,7841,7842,7843,33],{},"D'ailleurs, je disais que le site d'Open Data d'Île-de-France Mobilités ne donnait pas beaucoup d'infos, mais en fait,\nc'est sur un second\nsite : ",[22,7844,7847],{"href":7845,"rel":7846},"https://prim.iledefrance-mobilites.fr/",[26],"PRIM - Plateforme Régionale d'Information Multimodale",[15,7849,7850,7851,33],{},"Sur celui-ci, il y a bien les lignes, les stations, les correspondances, c'est intéressant, à voir si je veux les\nutiliser.\nAussi, je trouve\nune ",[22,7852,7855],{"href":7853,"rel":7854},"https://prim.iledefrance-mobilites.fr/widgets/idfm-marque_blanche-a",[26],"API en marque blanche de calcul d'itinéraire",[15,7857,7858],{},"Ça nécessite un token PRIM, mais ça peut être intéressant : je pourrais faire des appels pour chaque changement de\nstations\nentre les lignes et ainsi avoir tous les chiffres ?\nVoyons s'ils ne donnent pas directement la donnée dont j'ai besoin.",[15,7860,7861,7862,7865,7866,7869],{},"J'ai trouvé un pdf d'",[22,7863,7864],{"href":6275},"IDFM plutôt intéressant sur la documentation des GTFS",".\nJe découvre le fichier\n",[30,7867,7868],{},"transferts.txt"," qui donne le temps de correspondance entre arrêts.\nC'est exactement ce que je cherchais, par contre comme je n'ai pas utilisé les lignes et stations de IDFM, je n'ai pas\nles stops id.",[15,7871,7872],{},"Est-ce que je dois migrer sur les données IDFM ou je dois consolider ma donnée avec celle de IDFM ?",[15,7874,7875,7876,7881,7882,33],{},"Regardons les données de IDFM de plus près.\nNous avons les arrêts dans ce jeu de\ndonnées : ",[22,7877,7880],{"href":7878,"rel":7879},"https://prim.iledefrance-mobilites.fr/jeux-de-donnees/arrets-lignes",[26],"IDFM - Arrêts et lignes associées","\net pour les\nlignes : ",[22,7883,7886],{"href":7884,"rel":7885},"https://prim.iledefrance-mobilites.fr/jeux-de-donnees/traces-des-lignes-de-transport-en-commun-idfm",[26],"IDFM - Tracés des lignes de transport en commun d'Île-de-France (source GTFS)",[15,7888,7889],{},"En regardant les lignes, par rapport à mon code actuel, je me rends compte qu'il n'y a pas de direction,\net donc la prise en compte d'une fourche ou non.\nJe trouve ça compliqué pour ce petit projet, et je me dis que je vais rester sur mes données actuelles.",[15,7891,7892],{},"Ce que je vais donc faire :",[4573,7894,7895,7898,7904],{},[168,7896,7897],{},"Ajouter dans mon script l'id IDFM des stations pour les correspondances",[168,7899,7900,7901],{},"Ajouter le temps de correspondance entre les lignes dans une station grâce au fichier\n",[30,7902,7903],{},"transfers.txt",[168,7905,7906,7907],{},"Ajouter le temps entre deux stations grâce au fichier\n",[30,7908,7909],{},"stop_times.txt",[15,7911,7912,7913,7916,7917,7922],{},"En regardant le fichier\n",[30,7914,7915],{},"stops.txt",", je me rends compte qu'une même station est présente plusieurs fois, avec des id\ndifférents.\nJe me rappelle du repository que j'ai liké ",[22,7918,7921],{"href":7919,"rel":7920},"https://github.com/linkedconnections/gtfs2lc",[26],"gtfs2lc",", que j'essaie et j'obtiens\nune erreur :",[49,7924,7926],{"className":4872,"code":7925,"language":4874,"meta":54,"style":54},"❯ npx gtfs2lc ./IDFM-gtfs -f json\nGTFS to linked connections converter use --help to discover more functions\nCleaning up and sorting source files\nCreating index stores...\nCreated and loaded store in ./IDFM-gtfs/stops.db\nCreated and loaded store in ./IDFM-gtfs/routes.db\nCreated and loaded store in ./IDFM-gtfs/services.db\nCreated and loaded store in ./IDFM-gtfs/trips.db\nCreating Connection rules...\n/Users/vincenthardouin/.npm/_npx/4c8ae9a5fcd59e62/node_modules/gtfs2lc/lib/stoptimes/st2c.js:45\nif (arrivalStop['stop_headsign'] && arrivalStop['stop_headsign'] !== '') {\n",[30,7927,7928,7933,7938,7943,7948,7953,7958,7963,7968,7973,7978],{"__ignoreMap":54},[58,7929,7930],{"class":60,"line":61},[58,7931,7932],{},"❯ npx gtfs2lc ./IDFM-gtfs -f json\n",[58,7934,7935],{"class":60,"line":79},[58,7936,7937],{},"GTFS to linked connections converter use --help to discover more functions\n",[58,7939,7940],{"class":60,"line":86},[58,7941,7942],{},"Cleaning up and sorting source files\n",[58,7944,7945],{"class":60,"line":92},[58,7946,7947],{},"Creating index stores...\n",[58,7949,7950],{"class":60,"line":97},[58,7951,7952],{},"Created and loaded store in ./IDFM-gtfs/stops.db\n",[58,7954,7955],{"class":60,"line":103},[58,7956,7957],{},"Created and loaded store in ./IDFM-gtfs/routes.db\n",[58,7959,7960],{"class":60,"line":309},[58,7961,7962],{},"Created and loaded store in ./IDFM-gtfs/services.db\n",[58,7964,7965],{"class":60,"line":321},[58,7966,7967],{},"Created and loaded store in ./IDFM-gtfs/trips.db\n",[58,7969,7970],{"class":60,"line":334},[58,7971,7972],{},"Creating Connection rules...\n",[58,7974,7975],{"class":60,"line":347},[58,7976,7977],{},"/Users/vincenthardouin/.npm/_npx/4c8ae9a5fcd59e62/node_modules/gtfs2lc/lib/stoptimes/st2c.js:45\n",[58,7979,7980],{"class":60,"line":358},[58,7981,7982],{},"if (arrivalStop['stop_headsign'] && arrivalStop['stop_headsign'] !== '') {\n",[15,7984,7985],{},"Soyons pragmatiques, mes données viennent d'IDFM et je lance le script normalement, ça devrait fonctionner.\nJe ne sais pas trop ce que je vais obtenir avec ce script, alors je peux en chercher un autre au lieu d'essayer de voir\nce qui ne va pas dans les données.",[4842,7987,4939],{"id":4938},[4573,7989,7990,7995,8000,8006,8011],{},[168,7991,7992],{},[22,7993,7833],{"href":7831,"rel":7994},[26],[168,7996,7997],{},[22,7998,7847],{"href":7845,"rel":7999},[26],[168,8001,8002],{},[22,8003,8005],{"href":7853,"rel":8004},[26],"API IDFM en marque blanche de calcul d'itinéraire",[168,8007,8008],{},[22,8009,8010],{"href":6275},"Documentation IDFM des GTFS",[168,8012,8013],{},[22,8014,7880],{"href":7878,"rel":8015},[26],[130,8017,132],{},{"title":54,"searchDepth":79,"depth":79,"links":8019},[8020],{"id":4938,"depth":79,"text":4939},"Je m'intéresse toujours au coût de changement de ligne/correspondance, qui est nommé\ntransfer walking.\nJe trouve un article intéressant sur le sujet de la génération des routes :\nGenerating route choice sets with operation information on metro networks",{"date":7816},"/blog/2024-03-25",{"title":7816,"description":8021},"blog/2024-03-25","-yUwcU_AN04PJSvzxBiKNOXIVN4aX7NB1Roy729TSA4",{"id":8028,"title":8029,"body":8030,"description":8102,"extension":135,"meta":8103,"navigation":82,"path":8104,"seo":8105,"stem":8106,"__hash__":8107},"blog/blog/2024-03-14.md","2024-03-14",{"type":8,"value":8031,"toc":8099},[8032,8035,8044,8047,8056,8064,8066],[11,8033,8029],{"id":8034},"_2024-03-14",[15,8036,8037,8038,8043],{},"C'est ce matin, où finalement, je regarde comment font les autres pour faire leur algorithme.\nJe tombe sur un article\nintéressant : ",[22,8039,8042],{"href":8040,"rel":8041},"https://medium.com/@assertis/so-you-want-to-build-a-journey-planner-f99bfa8d069d",[26],"so-you-want-to-build-a-journey-planner",".\nBeaucoup de lien n'existe plus dans cet article, je les chercherai avec Wayback Machine si besoin est.\nD'ailleurs, ça me fait penser que j'aimerais bien avoir un outil pour sauvegarder les articles que je lis.",[15,8045,8046],{},"Revenons à nos moutons, je découvre l'algorithme CSA (Connection Scan Algorithm) de Captain Train, puis dans l'article,\nje constate qu'il parle de GTFS (General Transit Feed Specification or Google Transit Feed Specification),\nun standard pour les données de transport en commun, j'aime bien les standards.\nDonc là sans en lire plus, ni sur le standard, ni sur l'article, ça m'évoque que tous les services en commun publient\nleurs GTFS ce qui permet de voir les liens entre les stations et les horaires.\nDans mon cas, je pourrai me baser sur les horaires à chaque station pour connaitre le temps entre les stations.",[15,8048,8049,8050,8055],{},"J'ai en un clin d'œil trouvé\nles ",[22,8051,8054],{"href":8052,"rel":8053},"https://prim.iledefrance-mobilites.fr/en/jeux-de-donnees/offre-horaires-tc-gtfs-idfm",[26],"GTFS de la RATP",".\nJe mets ça de côté et retourne à l'article.",[15,8057,8058,8059,8063],{},"En utilisant Wayback Machine, j'ai pu retrouver un lien mort de l'article, qui au final m'a mené à cette url\nvalide : ",[22,8060,8061],{"href":8061,"rel":8062},"https://tristramg.eu/routing-calc-history/",[26],"\nC'est un article qui parle de l'histoire des algorithmes de calcul d'itinéraire. L'auteur de cet article Tristram,\ntravaillait chez Captain Train et travaille actuellement chez Codeurs en liberté, dont on a parlé ce matin même avec un\ncollègue.\nLe monde est petit.",[4842,8065,4939],{"id":4938},[4573,8067,8068,8073,8080,8087,8092],{},[168,8069,8070],{},[22,8071,8042],{"href":8040,"rel":8072},[26],[168,8074,8075],{},[22,8076,8079],{"href":8077,"rel":8078},"https://github.com/trainline-eu/csa-challenge",[26],"Connection Scan Algorithm - GitHub",[168,8081,8082],{},[22,8083,8086],{"href":8084,"rel":8085},"https://gtfs.org",[26],"GTFS",[168,8088,8089],{},[22,8090,8054],{"href":8052,"rel":8091},[26],[168,8093,8094],{},[22,8095,8098],{"href":8096,"rel":8097},"https://en.wikipedia.org/wiki/Journey_planner",[26],"Journey Planner - Wikipedia",{"title":54,"searchDepth":79,"depth":79,"links":8100},[8101],{"id":4938,"depth":79,"text":4939},"C'est ce matin, où finalement, je regarde comment font les autres pour faire leur algorithme.\nJe tombe sur un article\nintéressant : so-you-want-to-build-a-journey-planner.\nBeaucoup de lien n'existe plus dans cet article, je les chercherai avec Wayback Machine si besoin est.\nD'ailleurs, ça me fait penser que j'aimerais bien avoir un outil pour sauvegarder les articles que je lis.",{"date":8029},"/blog/2024-03-14",{"title":8029,"description":8102},"blog/2024-03-14","_hwEVykPfZy7LTTxOwZzem-7O6u_CV0Xp7J367E_QTQ",{"id":8109,"title":8110,"body":8111,"description":8118,"extension":135,"meta":8268,"navigation":82,"path":8269,"seo":8270,"stem":8271,"__hash__":8272},"blog/blog/2024-03-13.md","2024-03-13",{"type":8,"value":8112,"toc":8266},[8113,8116,8119,8128,8135,8138,8141,8144,8160,8163,8175,8178,8198,8201,8217,8220,8223,8226,8233,8236,8239,8242,8248,8251,8257,8260,8263],[11,8114,8110],{"id":8115},"_2024-03-13",[15,8117,8118],{},"Je n'ai pas fait de note hier, mais il a fallu résoudre un bug sur la modale de fin.\nJe ne passais plus les bons paramètres à la fonction qui vérifie si les stations sont reliées entre elles.\nPlus de tests, ça aurait pu être bien ou TS, mais bon …",[15,8120,8121,8122,8127],{},"Aujourd'hui, je vais m'attaquer au fait d'afficher les lignes de métro dans la bonne couleur.\nJe tombe sur ",[22,8123,8126],{"href":8124,"rel":8125},"https://fr.wikipedia.org/wiki/Mod%C3%A8le:M%C3%A9tro_de_Paris/couleur_fond",[26],"cette page wikipédia",",\nla source est vraiment sympa, j'aime bien ce genre de document.",[15,8129,8130,8131,8134],{},"Est-ce que j'ajoute l'info dans json des lignes ? Cela a pour conséquence de modifier le script\n",[30,8132,8133],{},"extract-lines","\npour qu'il ajoute les couleurs.\nSinon j'ajoute l'info dans la class map qui gère ça. La deuxième solution me paraît suffisante.",[15,8136,8137],{},"J'ajoute la liste de couleur, je change une ligne de code et ça fonctionne, j'aime beaucoup. J'envoie direct en prod.",[15,8139,8140],{},"Dans la todo, le prochain sujet, c'est le cout de changement de ligne dans l'algo de Dijkstra. C'est parti !",[15,8142,8143],{},"Créons un jeu de test, j'imagine un par exemple de prendre la 13 qui passe par Saint-Lazare, et remonter jusqu'à\nBrochant.\nSi on part de Saint-Lazare, on peut prendre la 13 ou la 14 puis 13.\nEn prenant la 13 ça donne :",[4573,8145,8146,8149,8152,8154,8157],{},[168,8147,8148],{},"Saint-Lazare",[168,8150,8151],{},"Liège",[168,8153,4567],{},[168,8155,8156],{},"La Fourche",[168,8158,8159],{},"Brochant",[15,8161,8162],{},"En prenant la 14 puis 13 ça donne :",[4573,8164,8165,8167,8170,8173],{},[168,8166,8148],{},[168,8168,8169],{},"Pont Cardinet",[168,8171,8172],{},"Porte de Clichy",[168,8174,8159],{},[15,8176,8177],{},"Donc admettons que je vienne de Miromesnil, dans les deux cas je suis dans la 13, puis l'algo actuel me dirait de\nprendre la 14, puis re 13.\nCe qui donne :\nEn prenant la 13 ça donne 6 stations :",[4573,8179,8180,8183,8186,8189,8192,8195],{},[168,8181,8182],{},"13 - Miromesnil",[168,8184,8185],{},"13 - Saint-Lazare",[168,8187,8188],{},"13 - Liège",[168,8190,8191],{},"13 - Place de Clichy",[168,8193,8194],{},"13 - La Fourche",[168,8196,8197],{},"13 - Brochant",[15,8199,8200],{},"En prenant la 14 puis 13 ça donne 5 stations :",[4573,8202,8203,8205,8208,8211,8214],{},[168,8204,8182],{},[168,8206,8207],{},"13->14 - Saint-Lazare",[168,8209,8210],{},"14 - Pont Cardinet",[168,8212,8213],{},"14->13 - Porte de Clichy",[168,8215,8216],{},"13 Brochant",[15,8218,8219],{},"Voilà mon jeu de test.",[15,8221,8222],{},"Ensuite, comment faire, je pense qu'à la création du graph, au lieu de simplement retourner la distance pour la station\nadjacente,\nje peux aussi ajouter la ligne. Ensuite au moment, où l'algo calcule les nodes suivants, si la ligne est différente,\nalors j'ajoute un cout de 1 par exemple.",[15,8224,8225],{},"Le code écrit est mine de rien un peu compliqué, je demande à ChatGPT de le passer en TS, ça sera plus simple pour\nchanger les signatures.\nIl m'a très bien fait ça, maintenant, j'ajoute mon intuition.",[15,8227,8228,8229,8232],{},"J'hésite pour l'argument de\n",[30,8230,8231],{},"computeSmallestStationsPath"," entre un cout de changement de ligne (un nombre)\nou juste un booléen qui active ou non cette feature.\nComme ça, rapidement, je ne vois pas de cas où je voudrais un cout différent de X, donc je vais partir sur un booléen.",[15,8234,8235],{},"D'ailleurs ce coût est-ce qu'il est bien de 1 ?",[15,8237,8238],{},"L'exemple de mon test d'au-dessus est intéressant :",[15,8240,8241],{},"On est à \"Notre-Dame de Lorette\" et on veut aller à \"Brochant\".\nNotre-Dame de Lorette est sur la 12, et Brochant est sur la 13.\nLe plus naturel serait de faire un changement de ligne de 12->13 à Saint-Lazare, mais avec un coût de 0 ou de 1 l'algo\nretourne toujours :",[49,8243,8246],{"className":8244,"code":8245,"language":126},[124],"\"Notre-Dame de Lorette\",\n\"Trinité d'Estienne d'Orves\",\n\"Saint-Lazare\",\n\"Pont Cardinet\",\n\"Porte de Clichy\",\n\"Brochant\",\n",[30,8247,8245],{"__ignoreMap":54},[15,8249,8250],{},"VS",[49,8252,8255],{"className":8253,"code":8254,"language":126},[124],"\"Notre-Dame de Lorette\",\n\"Trinité d'Estienne d'Orves\",\n\"Saint-Lazare\",\n\"Liège\",\n\"Place de Clichy\",\n\"La Fourche\",\n\"Brochant\",\n",[30,8256,8254],{"__ignoreMap":54},[15,8258,8259],{},"Cout total : 7 vs 7, mais l'algorithme retourne toujours le premier.",[15,8261,8262],{},"Si je prends un cout de 2, alors l'algo retourne le deuxième chemin, car j'obtiens : 8 pour 12->13 vs 9 pour 12->14->13.",[15,8264,8265],{},"Je vais me renseigner sur comment fonctionne les algos de CityMapper, ou autres.",{"title":54,"searchDepth":79,"depth":79,"links":8267},[],{"date":8110},"/blog/2024-03-13",{"title":8110,"description":8118},"blog/2024-03-13","U2Htf0IWVDkqQxOhNjsKQx0w9tl64UGbjkq9kTNrWY0",{"id":8274,"title":8275,"body":8276,"description":8283,"extension":135,"meta":8355,"navigation":82,"path":8356,"seo":8357,"stem":8358,"__hash__":8359},"blog/blog/2024-03-11.md","2024-03-11",{"type":8,"value":8277,"toc":8353},[8278,8281,8284,8287,8290,8296,8299,8305,8308,8311,8342,8345],[11,8279,8275],{"id":8280},"_2024-03-11",[15,8282,8283],{},"La gestion de la hauteur de carte et le centrage de la carte ne sont pas optimaux, ça serait bien d'améliorer ce point.",[15,8285,8286],{},"Je commence à avoir pas mal d'idées en vrac, mais pas de TODO, ça ne serait pas le moment de commencer à en faire une ?\nUn projet GitHub ?",[15,8288,8289],{},"En soit le projet GitHub, c'est pas mal, mais j'ai la flemme de faire des pull requests ça marche sans ?\nUn fichier texte dans docs, c'est bien aussi …",[15,8291,8292,8293,8295],{},"La tâche \"- ",[58,8294],{}," Script - Merge-duplicate-station - Ne pas prendre compte les accents dans les noms\", me plait bien, je\nvais commencer par ça.\nActuellement, il faut se souvenir de l'ordre pour lancer les scripts, et ils ne sont pas testés. Je vais améliorer ça.",[15,8297,8298],{},"Alors merci les pages de journal, je ne savais plus l'ordre des scripts, mais je viens de le retrouver :",[49,8300,8303],{"className":8301,"code":8302,"language":126},[124],"node src/merge-duplicate-stations.js\nnode src/extract-lines.js\nnode src/add-adjacent-stations.js\n",[30,8304,8302],{"__ignoreMap":54},[15,8306,8307],{},"Première étape, exporter des fonctions dans chaque script.\nEnsuite, pour améliorer la testabilité, je vais passer en argument les données et que ça me les retourne modifiées.\nJe peux enfin tester la feature que j'ajoute, puis je fais un script qui lance les 3 scripts dans l'ordre.\nAh les données sont un peu plus cohérentes, ça fait plaisir.",[15,8309,8310],{},"J'ai enchainé sur plusieurs tâches grâce à la todo, j'ai un peu laissé le journal, voilà ce que j'ai fait de la todo :",[4573,8312,8315,8324,8330,8336],{"className":8313},[8314],"contains-task-list",[168,8316,8319,8323],{"className":8317},[8318],"task-list-item",[8320,8321],"input",{"checked":82,"disabled":82,"type":8322},"checkbox"," UX - Modale de fin - Ajouter le chemin le plus court et le chemin du joueur",[168,8325,8327,8329],{"className":8326},[8318],[8320,8328],{"checked":82,"disabled":82,"type":8322}," UX - Search Input - Ajouter un feedback si la station n'existe pas",[168,8331,8333,8335],{"className":8332},[8318],[8320,8334],{"checked":82,"disabled":82,"type":8322}," UX - Search Input - Retirer les stations déjà ajoutées",[168,8337,8339,8341],{"className":8338},[8318],[8320,8340],{"checked":82,"disabled":82,"type":8322}," Script - Merge-duplicate-station - Ne pas prendre compte les accents dans les noms",[15,8343,8344],{},"Mais aussi :",[4573,8346,8347,8350],{},[168,8348,8349],{},"Corriger un bug avec l'animation d'ajout des stations qui prenait de plus en plus de temps à chaque ajout",[168,8351,8352],{},"Corriger le workflow CD pour bien commit et pusher les screenshots du rendu de l'app",{"title":54,"searchDepth":79,"depth":79,"links":8354},[],{"date":8275},"/blog/2024-03-11",{"title":8275,"description":8283},"blog/2024-03-11","4nUTIGm1pXzqtwa8lZOCeWbeCk0YVynahr-_FrjL91I",{"id":8361,"title":8362,"body":8363,"description":8370,"extension":135,"meta":8408,"navigation":82,"path":8409,"seo":8410,"stem":8411,"__hash__":8412},"blog/blog/2024-03-10.md","2024-03-10",{"type":8,"value":8364,"toc":8406},[8365,8368,8371,8374,8377,8388,8391,8400,8403],[11,8366,8362],{"id":8367},"_2024-03-10",[15,8369,8370],{},"C'est le grand jour, hier, j'ai enfin ajouté le code pour vérifier si le joueur a fini, je peux donc faire une modale de\nfin de partie.",[15,8372,8373],{},"Avec Bootstrap, c'est plutôt rapide.",[15,8375,8376],{},"Maintenant, j'ai bien envie d'améliorer le champ de recherche, je prépare le code pour pouvoir faire du TDD\ntranquillement\nsur le filtre de la liste déroulante.\nJ'ajoute plusieurs règles :",[4573,8378,8379,8382,8385],{},[168,8380,8381],{},"Filtrer d'abord par ce qui commence par la recherche, puis ordre alphabétique le reste",[168,8383,8384],{},"Ne pas prendre en compte les accents",[168,8386,8387],{},"Ne pas tenir compte des tirets vs espaces",[15,8389,8390],{},"Je suis plutôt content du résultat. Il faudrait ajouter le fait de retirer les stations déjà ajoutées.",[15,8392,8393,8394,8399],{},"Je me rends compte que le visuel a quand même bien évolué.\nJ'aimerais bien pouvoir garder une trace de tout ça. Je me lance sur un script.\nEst-ce que je vais encore utiliser puppeteer ? En cherchant rapidement, je\ntrouve ",[22,8395,8398],{"href":8396,"rel":8397},"https://github.com/sindresorhus/pageres",[26],"pageres",",\nmais je vois que derrière ça utilise puppeteer. Bon ça doit être encore la norme.",[15,8401,8402],{},"J'ai rapidement un résultat convaincant, maintenant la partie moins fun c'est d'aller sur chaque version et de lancer le\nscript.\nPuis, ça serait bien que ça se fasse automatiquement à chaque release minor ou major.",[15,8404,8405],{},"Pour finir la journée, j'installe un linter ça manque.",{"title":54,"searchDepth":79,"depth":79,"links":8407},[],{"date":8362},"/blog/2024-03-10",{"title":8362,"description":8370},"blog/2024-03-10","MMzp5Q9Bd6l6-uTEE3P4MIXx7St9OiMBnaVzJoY9hYM",{"id":8414,"title":8415,"body":8416,"description":8423,"extension":135,"meta":8444,"navigation":82,"path":8445,"seo":8446,"stem":8447,"__hash__":8448},"blog/blog/2024-03-09.md","2024-03-09",{"type":8,"value":8417,"toc":8442},[8418,8421,8424,8427,8430,8433,8436,8439],[11,8419,8415],{"id":8420},"_2024-03-09",[15,8422,8423],{},"Première envie de la journée, changer le css, je me renseigne sur uno.css,\nmais je ne suis pas convaincu sur le fait d'être productif.\nJe vais partir sur Bootstrap.",[15,8425,8426],{},"Migration faîte et MEP faite. Je me dis que ça serait bien d'avoir l'historique du design de toutes les versions.\nJe garde ça dans le coin de ma tête.\nPourquoi pas rajouter l'info dans le changelog ?\nEst-ce que je fais en sorte de générer ça automatiquement ?",[15,8428,8429],{},"Maintenant que je suis sur bootstrap, je vais m'attaquer au champ de recherche.\nActuellement, je suis sur un select, mais ce n'est pas le top niveau recherche.\nJe passe sur un champ input avec un dropdown. Je suis plutôt convaincu du résultat.",[15,8431,8432],{},"Je me suis rendu compte il y a quelques jours que j'ai un souci avec la station \"Champs-Élysées - Clemenceau\" qui est en\ndouble.\nUne version avec un accent à Clémenceau et une sans. Il va falloir améliorer le script \"merge-duplicate-stations\".",[15,8434,8435],{},"Avec ce nouveau champ de recherche, le fichier \"script\", qui est plutôt mon fichier index ou front.js, a bien grossi.\nJe me lance dans un refactoring pour séparer tout ce qui concerne la carte dans une class dans un fichier distinct.",[15,8437,8438],{},"J'ai passé un peu de temps à chercher comment ajouter au Dijkstra le cout de changement de ligne.",[15,8440,8441],{},"Finalement, je me suis rendu compte que pour savoir si le joueur a relié les deux stations est plutôt simple, mais ça\nattendra demain.",{"title":54,"searchDepth":79,"depth":79,"links":8443},[],{"date":8415},"/blog/2024-03-09",{"title":8415,"description":8423},"blog/2024-03-09","_gdXd-3dCERgBSTUPGRf6jFIQ8-K2HHK2KPQD5gi3B8",{"id":8450,"title":8451,"body":8452,"description":8459,"extension":135,"meta":8514,"navigation":82,"path":8515,"seo":8516,"stem":8517,"__hash__":8518},"blog/blog/2024-03-06.md","2024-03-06",{"type":8,"value":8453,"toc":8512},[8454,8457,8460,8467,8470,8509],[11,8455,8451],{"id":8456},"_2024-03-06",[15,8458,8459],{},"Sans trop faire attention hier soir, je n'ai pas vu que GitHub avait échoué la vérification DNS.\nJe retire donc le CNAME et je le remets et ça fonctionne, super le site est en prod !",[15,8461,8462,8463,8466],{},"Je vois un petit souci avec le zoom, les chemins entre les stations ne sont pas zoomés, je fixe ça rapidement.\nJe n'utilisais pas\n",[30,8464,8465],{},"g"," qui est l'élément SVG zoomable, mais je l'ajoutais dans le svg, affaire résolue.",[15,8468,8469],{},"Il me reste quoi à faire ?\nDe tête :",[4573,8471,8473,8479,8485,8491,8497,8503],{"className":8472},[8314],[168,8474,8476,8478],{"className":8475},[8318],[8320,8477],{"disabled":82,"type":8322}," Améliorer le responsive, si une application de métro ne peut pas se jouer dans le métro …",[168,8480,8482,8484],{"className":8481},[8318],[8320,8483],{"disabled":82,"type":8322}," Ajouter les boutons pour le zoom : zoomer, dézoomer, reset",[168,8486,8488,8490],{"className":8487},[8318],[8320,8489],{"disabled":82,"type":8322}," Ajouter un mode practice ?",[168,8492,8494,8496],{"className":8493},[8318],[8320,8495],{"disabled":82,"type":8322}," Ajouter l'écran de fin de partie avec le chemin le plus court et le chemin du joueur",[168,8498,8500,8502],{"className":8499},[8318],[8320,8501],{"disabled":82,"type":8322}," Ajouter les stations du joueur en dessous de la carte, et pouvoir les activer/désactiver",[168,8504,8506,8508],{"className":8505},[8318],[8320,8507],{"disabled":82,"type":8322}," Ajouter un mode par temps entre stations",[15,8510,8511],{},"Je stoppe la todo ici, je vais commencer par le responsive mais pas là, je suis fatigué.\nJ'ai quand même regardé un peu ça n'a pas l'air si évident que ça de faire un SVG responsive.\nJ'ai proposé une première version, mais je n’en suis pas entièrement satisfait.",{"title":54,"searchDepth":79,"depth":79,"links":8513},[],{"date":8451},"/blog/2024-03-06",{"title":8451,"description":8459},"blog/2024-03-06","DzllBlnUeWRC4BG5uGIirhw1EhtFCDdZGYIdCSAwjQw",{"id":8520,"title":8521,"body":8522,"description":8557,"extension":135,"meta":8558,"navigation":82,"path":8559,"seo":8560,"stem":8561,"__hash__":8562},"blog/blog/2024-03-05.md","2024-03-05",{"type":8,"value":8523,"toc":8555},[8524,8527,8533,8540,8546,8549,8552],[11,8525,8521],{"id":8526},"_2024-03-05",[15,8528,8529,8530,8532],{},"Je rajoute la station de départ et d'arrivée sur la carte.\nAvec un peu de refactoring pour pouvoir donner une couleur à la méthode\n",[30,8531,179],{},", j'arrive à un résultat qui me\nplaît bien.",[15,8534,8535,8536,8539],{},"Aussi, je fixe la seed avec la date du jour en nombre :\n",[30,8537,8538],{},"20240305"," pour que tous les joueurs aient les mêmes stations.\nCela m'a l'air concluant de ce côté-là.",[15,8541,8542,8543,8545],{},"En regardant la todo de la veille, je vois \"- ",[58,8544],{}," Enregistrer les stations déjà piochées ? Au moins celui de la vieille\npour ne pas tomber 2 jours de suite sur le même\".\nVu ce que j'ai fait avec le random avec seed, je pense que c'est inutile.",[15,8547,8548],{},"Il manque en réalité, le moment où la personne a trouvé le chemin entre les deux stations.\nC'est-à-dire, afficher le plus court chemin et le chemin qu'a fait le joueur.",[15,8550,8551],{},"Rapidement, j'ai demandé à ChatGPT de m'aider à obtenir le code pour zoomer avec la roulette, la feature est ajoutée\nsimplement, il restera des boutons à ajouter pour zoomer et dézoomer, ainsi qu'un bouton pour reset le zoom.",[15,8553,8554],{},"Allez, c'est le grand jour, j'ajoute le workflow de CD que je copie depuis un autre repo que j'ai fait.",{"title":54,"searchDepth":79,"depth":79,"links":8556},[],"Je rajoute la station de départ et d'arrivée sur la carte.\nAvec un peu de refactoring pour pouvoir donner une couleur à la méthode\naddStation, j'arrive à un résultat qui me\nplaît bien.",{"date":8521},"/blog/2024-03-05",{"title":8521,"description":8557},"blog/2024-03-05","GRNmT_VH6tqVNTA5iSMPuJUWanmJT95ZxOvB6M9GU2c",{"id":8564,"title":8565,"body":8566,"description":8573,"extension":135,"meta":8655,"navigation":82,"path":8656,"seo":8657,"stem":8658,"__hash__":8659},"blog/blog/2024-03-04.md","2024-03-04",{"type":8,"value":8567,"toc":8653},[8568,8571,8574,8577,8580,8583,8586,8589,8592,8647,8650],[11,8569,8565],{"id":8570},"_2024-03-04",[15,8572,8573],{},"Aujourd'hui, il faudrait que je penche sur un script pour choisir deux stations qui ne sont pas trop proches l'une de\nl'autre pour pouvoir faire le jeu.",[15,8575,8576],{},"Et surtout, il faudra que je fasse deux outils : - le premier, pour checker si les deux stations ont bien été reliées\nentre elles par le joueur - le second, pour calculer le chemin le plus court (Dijkstra?) : est-ce que ça sera en nombre\nde stations ou en temps de trajet ?",[15,8578,8579],{},"Je vais commencer par le second outil, qui me permettra de voir ensuite pour le premier outil,\nd'avoir la longueur du chemin et ainsi ne pas prendre les chemins trop court",[15,8581,8582],{},"Je vais donc commencer par regarder comment je peux utiliser Dijkstra pour trouver le chemin le plus court entre deux\nstations.",[15,8584,8585],{},"Juste avant, j'en ai un peu marre de ne pas avoir de linter, formatter, c'est une bonne raison pour installer Biome.\nFinalement, le plugin Biome de Webstorm, ne gère pas le lint on save donc hop je passe au script.",[15,8587,8588],{},"J'ai demandé à ChatGPT, qui m'a fait une version de Dijkstra en JavaScript. J'ai eu à créer le graph à la main, mais\nvoilà le code a l'air de fonctionner.",[15,8590,8591],{},"Une idée me vient d'ajouter un cout de changement de ligne ?\nD'ailleurs ma todo :",[4573,8593,8595,8601,8607,8613,8619,8625,8631,8637,8642],{"className":8594},[8314],[168,8596,8598,8600],{"className":8597},[8318],[8320,8599],{"disabled":82,"type":8322}," Ajouter un cout de changement de ligne sur le script de Dijkstra",[168,8602,8604,8606],{"className":8603},[8318],[8320,8605],{"checked":82,"disabled":82,"type":8322}," Exporter une méthode pour le Dijsktra",[168,8608,8610,8612],{"className":8609},[8318],[8320,8611],{"checked":82,"disabled":82,"type":8322}," Créer le script qui pioche 2 stations",[168,8614,8616,8618],{"className":8615},[8318],[8320,8617],{"disabled":82,"type":8322}," Enregistrer les stations déjà piochées ? Au moins celui de la vieille pour ne pas tomber 2 jours de suite sur le\nmême",[168,8620,8622,8624],{"className":8621},[8318],[8320,8623],{"disabled":82,"type":8322}," Optimiser le build : supprimer les propriétés inutiles dans les stations et lignes",[168,8626,8628,8630],{"className":8627},[8318],[8320,8629],{"disabled":82,"type":8322}," Trouver un nom",[168,8632,8634,8636],{"className":8633},[8318],[8320,8635],{"disabled":82,"type":8322}," MEP",[168,8638,8640,8490],{"className":8639},[8318],[8320,8641],{"disabled":82,"type":8322},[168,8643,8645,8508],{"className":8644},[8318],[8320,8646],{"disabled":82,"type":8322},[15,8648,8649],{},"J'ai pu réaliser le script qui pioche deux stations, avec un random avec seed,\npour que tous les joueurs le même jour aient les mêmes stations.",[15,8651,8652],{},"J'en ai fini pour aujourd'hui !",{"title":54,"searchDepth":79,"depth":79,"links":8654},[],{"date":8565},"/blog/2024-03-04",{"title":8565,"description":8573},"blog/2024-03-04","LZ_zeIrZJyK6OBppWiHRyEA-GPbgvI6iUvHpf0P2pr8",{"id":8661,"title":8662,"body":8663,"description":8670,"extension":135,"meta":9021,"navigation":82,"path":9022,"seo":9023,"stem":9024,"__hash__":9025},"blog/blog/2024-03-03.md","2024-03-03",{"type":8,"value":8664,"toc":9019},[8665,8668,8671,8757,8760,8767,8770,8773,8793,8796,8799,9002,9005,9008,9011,9014,9017],[11,8666,8662],{"id":8667},"_2024-03-03",[15,8669,8670],{},"Aujourd'hui, continuons sur le script pour ajouter les stations adjacentes.\nAprès quelques modifications, je me rends compte que je lance le script avec les deux sens de la ligne,\nce qui n'a pas vraiment d'intérêt.\nAutre point, lors d'une fourche, les index ne sont pas corrects, je me retrouve avec la station \"Pierre et Marie Curie\"\nsur la ligne 7 qui a comme stations adjacentes :",[49,8672,8674],{"className":250,"code":8673,"language":252,"meta":54,"style":54},"{\n  \"adjacentStations\": {\n    \"7\": [\n      \"Porte d'Ivry\",\n      \"Mairie d'Ivry\",\n      \"Porte d'Ivry\",\n      \"Mairie d'Ivry\",\n      \"Porte d'Ivry\",\n      \"Villejuif - Louis Aragon\",\n      \"Porte d'Ivry\",\n      \"Villejuif - Louis Aragon\"\n    ]\n  }\n}\n",[30,8675,8676,8680,8688,8695,8702,8709,8715,8721,8727,8734,8740,8745,8749,8753],{"__ignoreMap":54},[58,8677,8678],{"class":60,"line":61},[58,8679,4993],{"class":259},[58,8681,8682,8685],{"class":60,"line":79},[58,8683,8684],{"class":270},"  \"adjacentStations\"",[58,8686,8687],{"class":259},": {\n",[58,8689,8690,8693],{"class":60,"line":86},[58,8691,8692],{"class":270},"    \"7\"",[58,8694,289],{"class":259},[58,8696,8697,8700],{"class":60,"line":92},[58,8698,8699],{"class":277},"      \"Porte d'Ivry\"",[58,8701,281],{"class":259},[58,8703,8704,8707],{"class":60,"line":97},[58,8705,8706],{"class":277},"      \"Mairie d'Ivry\"",[58,8708,281],{"class":259},[58,8710,8711,8713],{"class":60,"line":103},[58,8712,8699],{"class":277},[58,8714,281],{"class":259},[58,8716,8717,8719],{"class":60,"line":309},[58,8718,8706],{"class":277},[58,8720,281],{"class":259},[58,8722,8723,8725],{"class":60,"line":321},[58,8724,8699],{"class":277},[58,8726,281],{"class":259},[58,8728,8729,8732],{"class":60,"line":334},[58,8730,8731],{"class":277},"      \"Villejuif - Louis Aragon\"",[58,8733,281],{"class":259},[58,8735,8736,8738],{"class":60,"line":347},[58,8737,8699],{"class":277},[58,8739,281],{"class":259},[58,8741,8742],{"class":60,"line":358},[58,8743,8744],{"class":277},"      \"Villejuif - Louis Aragon\"\n",[58,8746,8747],{"class":60,"line":364},[58,8748,504],{"class":259},[58,8750,8751],{"class":60,"line":369},[58,8752,4439],{"class":259},[58,8754,8755],{"class":60,"line":381},[58,8756,5100],{"class":259},[15,8758,8759],{},"Donc, on peut voir les doublons aller-retour + aller-retour de l'autre fourche \"Villejuif - Louis Aragon\".",[15,8761,8762,8763,8766],{},"Autre problème, en regardant la Station \"Saint-Lazare\", je vois que les stations adjacentes sur la 13 sont \"Miromesnil\"\net \"Place de Clichy\", au lieu de \"Liège\".\n\"Liège\", n'est même pas présente dans la liste des stations, je vais donc devoir modifier le\nscript\n",[30,8764,8765],{},"merge-duplicate-stations.js","\net accessoirement, je vais chercher le nombre de stations.",[15,8768,8769],{},"Bon, une petite condition de plus et je me retrouve avec la station Liège, qui s'appelait visiblement Berlin avant.",[15,8771,8772],{},"Pour rappel, si je veux retrouver toutes les données dans le bon sens, je peux :",[49,8774,8776],{"className":4872,"code":8775,"language":4874,"meta":54,"style":54},"node src/merge-duplicate-stations.js\nnode src/export-stations.js\nnode src/add-adjacent-stations.js\n",[30,8777,8778,8783,8788],{"__ignoreMap":54},[58,8779,8780],{"class":60,"line":61},[58,8781,8782],{},"node src/merge-duplicate-stations.js\n",[58,8784,8785],{"class":60,"line":79},[58,8786,8787],{},"node src/export-stations.js\n",[58,8789,8790],{"class":60,"line":86},[58,8791,8792],{},"node src/add-adjacent-stations.js\n",[15,8794,8795],{},"Bon, j'ai fini par ajouter quelques tests : nombre de stations, nombre de lignes, etc",[15,8797,8798],{},"La station Saint-Lazare ressemble désormais à quelque chose de correct :",[49,8800,8802],{"className":250,"code":8801,"language":252,"meta":54,"style":54},"{\n  \"lines\": [\n    \"14\",\n    \"12\",\n    \"3\",\n    \"13\"\n  ],\n  \"inLineIndex\": {\n    \"3\": 87,\n    \"12\": 177,\n    \"13\": 180,\n    \"14\": 73\n  },\n  \"adjacentStations\": {\n    \"3\": [\n      \"Havre - Caumartin\",\n      \"Europe\"\n    ],\n    \"12\": [\n      \"Trinité d'Estienne d'Orves\",\n      \"Madeleine\"\n    ],\n    \"13\": [\n      \"Liège\",\n      \"Miromesnil\"\n    ],\n    \"14\": [\n      \"Madeleine\",\n      \"Pont Cardinet\"\n    ]\n  }\n}\n",[30,8803,8804,8808,8815,8822,8829,8836,8841,8845,8852,8863,8874,8886,8895,8899,8905,8911,8918,8923,8928,8934,8941,8946,8950,8956,8963,8968,8972,8978,8985,8990,8994,8998],{"__ignoreMap":54},[58,8805,8806],{"class":60,"line":61},[58,8807,4993],{"class":259},[58,8809,8810,8813],{"class":60,"line":79},[58,8811,8812],{"class":270},"  \"lines\"",[58,8814,289],{"class":259},[58,8816,8817,8820],{"class":60,"line":86},[58,8818,8819],{"class":277},"    \"14\"",[58,8821,281],{"class":259},[58,8823,8824,8827],{"class":60,"line":92},[58,8825,8826],{"class":277},"    \"12\"",[58,8828,281],{"class":259},[58,8830,8831,8834],{"class":60,"line":97},[58,8832,8833],{"class":277},"    \"3\"",[58,8835,281],{"class":259},[58,8837,8838],{"class":60,"line":103},[58,8839,8840],{"class":277},"    \"13\"\n",[58,8842,8843],{"class":60,"line":309},[58,8844,6055],{"class":259},[58,8846,8847,8850],{"class":60,"line":321},[58,8848,8849],{"class":270},"  \"inLineIndex\"",[58,8851,8687],{"class":259},[58,8853,8854,8856,8858,8861],{"class":60,"line":334},[58,8855,8833],{"class":270},[58,8857,274],{"class":259},[58,8859,8860],{"class":270},"87",[58,8862,281],{"class":259},[58,8864,8865,8867,8869,8872],{"class":60,"line":347},[58,8866,8826],{"class":270},[58,8868,274],{"class":259},[58,8870,8871],{"class":270},"177",[58,8873,281],{"class":259},[58,8875,8876,8879,8881,8884],{"class":60,"line":358},[58,8877,8878],{"class":270},"    \"13\"",[58,8880,274],{"class":259},[58,8882,8883],{"class":270},"180",[58,8885,281],{"class":259},[58,8887,8888,8890,8892],{"class":60,"line":364},[58,8889,8819],{"class":270},[58,8891,274],{"class":259},[58,8893,8894],{"class":270},"73\n",[58,8896,8897],{"class":60,"line":369},[58,8898,510],{"class":259},[58,8900,8901,8903],{"class":60,"line":381},[58,8902,8684],{"class":270},[58,8904,8687],{"class":259},[58,8906,8907,8909],{"class":60,"line":393},[58,8908,8833],{"class":270},[58,8910,289],{"class":259},[58,8912,8913,8916],{"class":60,"line":405},[58,8914,8915],{"class":277},"      \"Havre - Caumartin\"",[58,8917,281],{"class":259},[58,8919,8920],{"class":60,"line":417},[58,8921,8922],{"class":277},"      \"Europe\"\n",[58,8924,8925],{"class":60,"line":427},[58,8926,8927],{"class":259},"    ],\n",[58,8929,8930,8932],{"class":60,"line":432},[58,8931,8826],{"class":270},[58,8933,289],{"class":259},[58,8935,8936,8939],{"class":60,"line":437},[58,8937,8938],{"class":277},"      \"Trinité d'Estienne d'Orves\"",[58,8940,281],{"class":259},[58,8942,8943],{"class":60,"line":449},[58,8944,8945],{"class":277},"      \"Madeleine\"\n",[58,8947,8948],{"class":60,"line":461},[58,8949,8927],{"class":259},[58,8951,8952,8954],{"class":60,"line":473},[58,8953,8878],{"class":270},[58,8955,289],{"class":259},[58,8957,8958,8961],{"class":60,"line":485},[58,8959,8960],{"class":277},"      \"Liège\"",[58,8962,281],{"class":259},[58,8964,8965],{"class":60,"line":495},[58,8966,8967],{"class":277},"      \"Miromesnil\"\n",[58,8969,8970],{"class":60,"line":501},[58,8971,8927],{"class":259},[58,8973,8974,8976],{"class":60,"line":507},[58,8975,8819],{"class":270},[58,8977,289],{"class":259},[58,8979,8980,8983],{"class":60,"line":513},[58,8981,8982],{"class":277},"      \"Madeleine\"",[58,8984,281],{"class":259},[58,8986,8987],{"class":60,"line":518},[58,8988,8989],{"class":277},"      \"Pont Cardinet\"\n",[58,8991,8992],{"class":60,"line":530},[58,8993,504],{"class":259},[58,8995,8996],{"class":60,"line":537},[58,8997,4439],{"class":259},[58,8999,9000],{"class":60,"line":542},[58,9001,5100],{"class":259},[15,9003,9004],{},"Mais le script n'est pas suffisant, certaines stations n'ont toujours pas de stations adjacentes comme \"Olympiades\", \"\nMairie de Montreuil\", …",[15,9006,9007],{},"Étonnamment, les deux stations sont des terminus, je vais donc voir le problème.\nJ'ai déplacé une condition, et il me reste plus que 2 stations sans stations adjacentes : \"Danube\" et \"Pré\nSaint-Gervais\", les deux stations sont sur la boucle de la ligne 7bis, que je mets de côté.",[15,9009,9010],{},"Je me suis remis sur l'affichage des lignes entre les stations adjacentes, cela fonctionne,\nmais il me reste un problème avec la fourche de la 13 par exemple.\nAussi, un autre problème sur comment j'itère sur les lignes, j'affiche 2 bouts de liaison (ligne dans le sens A->B et\nB->A).\nJe pense que dans le inLineIndex, je stocke uniquement la ref de la ligne exemple : 13, mais pas son sens, ni sa\nbranche.\nIl faut donc être plus précis.",[15,9012,9013],{},"Le changement s'est fait sans encombre, et cela fonctionne bien.",[15,9015,9016],{},"Dernière étape de la journée, fixer le build, un souci de \"source\" dans le package.json et on est bon.",[130,9018,5670],{},{"title":54,"searchDepth":79,"depth":79,"links":9020},[],{"date":8662},"/blog/2024-03-03",{"title":8662,"description":8670},"blog/2024-03-03","hTPFQK_4vH46YIuiO2px62XwDTQzi-PT18tZnUo1ZXg",{"id":9027,"title":9028,"body":9029,"description":9036,"extension":135,"meta":9390,"navigation":82,"path":9391,"seo":9392,"stem":9393,"__hash__":9394},"blog/blog/2024-03-02.md","2024-03-02",{"type":8,"value":9030,"toc":9388},[9031,9034,9037,9040,9043,9046,9083,9086,9089,9124,9127,9218,9221,9224,9365,9368,9375,9386],[11,9032,9028],{"id":9033},"_2024-03-02",[15,9035,9036],{},"Je commence à écrire la fonction qui va me permettre de relier les stations entre elles.\nJe prends pour exemple : Stalingrad, Jaurès.",[15,9038,9039],{},"Le souci que j'observe, c'est que les stations bien qu'adjacentes ne sont pas à la suite\ndans le tableau des coordonnées des lignes. Entre Jaurès et Stalingrad, il y a 15 points d'écart.\nJe suis embêté, je ne sais pas comment je vais faire pour savoir si les stations sont adjacentes entre elles.",[15,9041,9042],{},"Je vais essayer de voir si je peux trouver une solution en regardant les données.\nC'est tout à fait normal que les stations ne soient pas adjacentes dans le tableau des coordonnées d'une ligne,\ncomme on peut le voir avec mon exemple, où la ligne 2 n'est pas une ligne droite à ce moment-là.",[15,9044,9045],{},"Je me dis que je peux peut-être ajouter l'information dans les stations de métro de leurs stations adjacentes.\nL'idée que j'ai serai de faire un nouveau script dont voici le pseudo code :",[49,9047,9051],{"className":9048,"code":9049,"language":9050,"meta":54,"style":54},"language-python shiki shiki-themes github-light github-dark","- For each line\n    - Filter stationInLine in stations\n    - For each coordinates in line\n        - For each station in stationInLine\n            - If coordinates is in station\n                - Save station index\n","python",[30,9052,9053,9058,9063,9068,9073,9078],{"__ignoreMap":54},[58,9054,9055],{"class":60,"line":61},[58,9056,9057],{},"- For each line\n",[58,9059,9060],{"class":60,"line":79},[58,9061,9062],{},"    - Filter stationInLine in stations\n",[58,9064,9065],{"class":60,"line":86},[58,9066,9067],{},"    - For each coordinates in line\n",[58,9069,9070],{"class":60,"line":92},[58,9071,9072],{},"        - For each station in stationInLine\n",[58,9074,9075],{"class":60,"line":97},[58,9076,9077],{},"            - If coordinates is in station\n",[58,9079,9080],{"class":60,"line":103},[58,9081,9082],{},"                - Save station index\n",[15,9084,9085],{},"Ensuite grâce à ça, j'aurai les index des stations par rapport aux coordonnées de la ligne,\nje pourrai donc chercher les stations adjacentes en prenant les index les plus proches.\nÀ voir si je veux faire un script, pour le calculer à la volée, ou si je veux le stocker dans un fichier.\nJe pense le calculer une fois pour toutes, ça évitera d'alourdir les calculs côtés clients.",[15,9087,9088],{},"Le format que je souhaite avoir est le suivant :",[49,9090,9092],{"className":250,"code":9091,"language":252,"meta":54,"style":54},"{\n  \"adjacentStations\": [\n    \"station1\",\n    \"station2\"\n  ]\n}\n",[30,9093,9094,9098,9104,9111,9116,9120],{"__ignoreMap":54},[58,9095,9096],{"class":60,"line":61},[58,9097,4993],{"class":259},[58,9099,9100,9102],{"class":60,"line":79},[58,9101,8684],{"class":270},[58,9103,289],{"class":259},[58,9105,9106,9109],{"class":60,"line":86},[58,9107,9108],{"class":277},"    \"station1\"",[58,9110,281],{"class":259},[58,9112,9113],{"class":60,"line":92},[58,9114,9115],{"class":277},"    \"station2\"\n",[58,9117,9118],{"class":60,"line":97},[58,9119,5095],{"class":259},[58,9121,9122],{"class":60,"line":103},[58,9123,5100],{"class":259},[15,9125,9126],{},"Est-ce que j'ai besoin de savoir sur quelle ligne sont les stations adjacentes ?\nJe ne crois pas que ça soit utile, mais en même temps pourquoi pas enregistrer l'information comme je l'ai donc avoir un\nformat du type :",[49,9128,9130],{"className":250,"code":9129,"language":252,"meta":54,"style":54},"{\n  \"adjacentStations\": {\n    \"2\": [\n      \"station1\",\n      \"station2\"\n    ],\n    \"3\": [\n      \"station2\"\n    ]\n  },\n  \"inLineIndex\": {\n    \"2\": 17,\n    \"7bis\": 3\n  }\n}\n",[30,9131,9132,9136,9142,9149,9156,9161,9165,9171,9175,9179,9183,9189,9200,9210,9214],{"__ignoreMap":54},[58,9133,9134],{"class":60,"line":61},[58,9135,4993],{"class":259},[58,9137,9138,9140],{"class":60,"line":79},[58,9139,8684],{"class":270},[58,9141,8687],{"class":259},[58,9143,9144,9147],{"class":60,"line":86},[58,9145,9146],{"class":270},"    \"2\"",[58,9148,289],{"class":259},[58,9150,9151,9154],{"class":60,"line":92},[58,9152,9153],{"class":277},"      \"station1\"",[58,9155,281],{"class":259},[58,9157,9158],{"class":60,"line":97},[58,9159,9160],{"class":277},"      \"station2\"\n",[58,9162,9163],{"class":60,"line":103},[58,9164,8927],{"class":259},[58,9166,9167,9169],{"class":60,"line":309},[58,9168,8833],{"class":270},[58,9170,289],{"class":259},[58,9172,9173],{"class":60,"line":321},[58,9174,9160],{"class":277},[58,9176,9177],{"class":60,"line":334},[58,9178,504],{"class":259},[58,9180,9181],{"class":60,"line":347},[58,9182,510],{"class":259},[58,9184,9185,9187],{"class":60,"line":358},[58,9186,8849],{"class":270},[58,9188,8687],{"class":259},[58,9190,9191,9193,9195,9198],{"class":60,"line":364},[58,9192,9146],{"class":270},[58,9194,274],{"class":259},[58,9196,9197],{"class":270},"17",[58,9199,281],{"class":259},[58,9201,9202,9205,9207],{"class":60,"line":369},[58,9203,9204],{"class":270},"    \"7bis\"",[58,9206,274],{"class":259},[58,9208,9209],{"class":270},"3\n",[58,9211,9212],{"class":60,"line":381},[58,9213,4439],{"class":259},[58,9215,9216],{"class":60,"line":393},[58,9217,5100],{"class":259},[15,9219,9220],{},"En écrivant le script, je me rends compte que les multiline string ne me permettent pas de correctement calculer les\nindex des stations.",[15,9222,9223],{},"Je décide de faire une fonction pour les afficher correctement :",[49,9225,9227],{"className":51,"code":9226,"language":53,"meta":54,"style":54},"function printLine(lineName) {\n  const line = lines.find((l) => {\n    return l.properties.ref === lineName;\n  });\n\n  const colors = ['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'pink', 'brown', 'grey', 'black'];\n\n  if (line.geometry.type === 'LineString') {\n    svg.append('path')\n      .datum(line)\n      .attr('d', d3.geoPath()\n        .projection(projection))\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 2);\n  }\n\n  if (line.geometry.type === 'MultiLineString') {\n    for (let i = 0; i \u003C line.geometry.coordinates.length; i++) {\n      for (let j = 0; j \u003C line.geometry.coordinates[i].length - 1; j++) {\n        svg.append('path')\n          .attr('d', d3.line()([projection(line.geometry.coordinates[i][j]), projection(line.geometry.coordinates[i][j + 1])]))\n          .attr('stroke', colors[i % colors.length])\n          .attr('stroke-width', 2)\n          .attr('fill', 'none');\n      }\n    }\n  }\n}\n",[30,9228,9229,9234,9239,9244,9248,9252,9257,9261,9266,9271,9276,9281,9286,9291,9296,9301,9305,9309,9314,9319,9324,9329,9334,9339,9344,9349,9353,9357,9361],{"__ignoreMap":54},[58,9230,9231],{"class":60,"line":61},[58,9232,9233],{},"function printLine(lineName) {\n",[58,9235,9236],{"class":60,"line":79},[58,9237,9238],{},"  const line = lines.find((l) => {\n",[58,9240,9241],{"class":60,"line":86},[58,9242,9243],{},"    return l.properties.ref === lineName;\n",[58,9245,9246],{"class":60,"line":92},[58,9247,5826],{},[58,9249,9250],{"class":60,"line":97},[58,9251,83],{"emptyLinePlaceholder":82},[58,9253,9254],{"class":60,"line":103},[58,9255,9256],{},"  const colors = ['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'pink', 'brown', 'grey', 'black'];\n",[58,9258,9259],{"class":60,"line":309},[58,9260,83],{"emptyLinePlaceholder":82},[58,9262,9263],{"class":60,"line":321},[58,9264,9265],{},"  if (line.geometry.type === 'LineString') {\n",[58,9267,9268],{"class":60,"line":334},[58,9269,9270],{},"    svg.append('path')\n",[58,9272,9273],{"class":60,"line":347},[58,9274,9275],{},"      .datum(line)\n",[58,9277,9278],{"class":60,"line":358},[58,9279,9280],{},"      .attr('d', d3.geoPath()\n",[58,9282,9283],{"class":60,"line":364},[58,9284,9285],{},"        .projection(projection))\n",[58,9287,9288],{"class":60,"line":369},[58,9289,9290],{},"      .attr('fill', 'none')\n",[58,9292,9293],{"class":60,"line":381},[58,9294,9295],{},"      .attr('stroke', 'black')\n",[58,9297,9298],{"class":60,"line":393},[58,9299,9300],{},"      .attr('stroke-width', 2);\n",[58,9302,9303],{"class":60,"line":405},[58,9304,4439],{},[58,9306,9307],{"class":60,"line":417},[58,9308,83],{"emptyLinePlaceholder":82},[58,9310,9311],{"class":60,"line":427},[58,9312,9313],{},"  if (line.geometry.type === 'MultiLineString') {\n",[58,9315,9316],{"class":60,"line":432},[58,9317,9318],{},"    for (let i = 0; i \u003C line.geometry.coordinates.length; i++) {\n",[58,9320,9321],{"class":60,"line":437},[58,9322,9323],{},"      for (let j = 0; j \u003C line.geometry.coordinates[i].length - 1; j++) {\n",[58,9325,9326],{"class":60,"line":449},[58,9327,9328],{},"        svg.append('path')\n",[58,9330,9331],{"class":60,"line":461},[58,9332,9333],{},"          .attr('d', d3.line()([projection(line.geometry.coordinates[i][j]), projection(line.geometry.coordinates[i][j + 1])]))\n",[58,9335,9336],{"class":60,"line":473},[58,9337,9338],{},"          .attr('stroke', colors[i % colors.length])\n",[58,9340,9341],{"class":60,"line":485},[58,9342,9343],{},"          .attr('stroke-width', 2)\n",[58,9345,9346],{"class":60,"line":495},[58,9347,9348],{},"          .attr('fill', 'none');\n",[58,9350,9351],{"class":60,"line":501},[58,9352,498],{},[58,9354,9355],{"class":60,"line":507},[58,9356,5090],{},[58,9358,9359],{"class":60,"line":513},[58,9360,4439],{},[58,9362,9363],{"class":60,"line":518},[58,9364,5100],{},[15,9366,9367],{},"Voici le résultat que j'obtiens :",[15,9369,9370],{},[9371,9372],"img",{"alt":9373,"src":9374},"Lignes de métro","assets/2024-03-02-lignes.png",[15,9376,9377,9378,9381,9382,9385],{},"La fonction n'est pas parfaite, elle utilise un\n",[30,9379,9380],{},"find"," au lieu d'un\n",[30,9383,9384],{},"filter"," pour trouver la ligne.\nCela me permet de voir les multilinestring (en rouge et autres couleurs) et les lignes simples (en noir).\nOn voit bien que la boucle de la 7 bis n'est pas évidente à faire.\nJe vais surement retirer la ligne 7 bis pour le moment, je vais me concentrer sur les lignes simples.",[130,9387,5670],{},{"title":54,"searchDepth":79,"depth":79,"links":9389},[],{"date":9028},"/blog/2024-03-02",{"title":9028,"description":9036},"blog/2024-03-02","DExpVLNEbRdurfBR5nO3jMs_axmx3pzaPB3KMj8tN_0",{"id":9396,"title":9397,"body":9398,"description":9405,"extension":135,"meta":9563,"navigation":82,"path":9564,"seo":9565,"stem":9566,"__hash__":9567},"blog/blog/2024-03-01.md","2024-03-01",{"type":8,"value":9399,"toc":9561},[9400,9403,9406,9414,9417,9420,9428,9431,9434,9441,9444,9453,9456,9459,9548,9559],[11,9401,9397],{"id":9402},"_2024-03-01",[15,9404,9405],{},"Aujourd'hui, j'ai envie de tracer le chemin entre 2 stations, s'il existe.\nPar exemple, le joueur ajoute \"Rome\" qui",[4573,9407,9408,9411],{},[168,9409,9410],{},"*est\nsur\nla\nligne\n2\n** et",[168,9412,9413],{},"*est\nadjacente\n** à Place de Clichy\nPuis ajoute à un autre moment \"Place de Clichy\", qui est sur la ligne 13 et 2, alors j'ajoute le chemin entre les 2\nstations.",[15,9415,9416],{},"Je stocke déjà toutes les stations ajoutées dans une Map,\nil reste alors au moment de l'ajout d'une nouvelle station de vérifier si elle n'est pas adjacente à une station déjà en\nplace.",[15,9418,9419],{},"Voyons un peu les données :",[4573,9421,9422,9425],{},[168,9423,9424],{},"Est-ce que les stations ont les lignes auxquelles elles appartiennent ?",[168,9426,9427],{},"Est-ce que les lignes ont quelque chose en commun avec ce qu'il y aurait dans les stations ?",[15,9429,9430],{},"Ah, mais je n'ai pas terminé l'extract des lignes.",[15,9432,9433],{},"J'y retourne. En regardant, il reste qu'à enregistrer, j'ai l'impression.",[15,9435,9436,9437,9440],{},"C'est bon, de retour sur le lien entre stations et lignes.\nJ'ai l'impression que c'est le\n",[30,9438,9439],{},"properties.@relations.ref"," qui pourrait fonctionner,\nmais il ne faut pas oublier que ce n'est pas harmonisé (par exemple la ligne 9 ne vient pas du même contributeur).",[15,9442,9443],{},"En vérifiant avec cette commande cela m'a l'air correct :",[49,9445,9447],{"className":4872,"code":9446,"language":4874,"meta":54,"style":54},"cat assets/export.geojson | jq '.features | map(select(.properties.railway == \"stop\" or (.properties.public_transport == \"stop_position\" and .properties[\"type:RATP\"] == \"metro\")))' | rg -C 25 'Miromesnil'\n",[30,9448,9449],{"__ignoreMap":54},[58,9450,9451],{"class":60,"line":61},[58,9452,9446],{},[15,9454,9455],{},"Bon, par contre dans le merge des stations, je n'ai pas mergé les refs des lignes, je vais modifier le script.",[15,9457,9458],{},"Je modifie, le script et le lance",[49,9460,9462],{"className":51,"code":9461,"language":53,"meta":54,"style":54},"const currentCoordinates = s.geometry.coordinates;\nconst currentLine = s.properties['@relations'].at(0).reltags.ref;\n\nif (stations.has(stationName)) {\n  const station = stations.get(stationName);\n  station.properties.coordinates.push(currentCoordinates);\n  if (currentLine)\n    station.properties.lines.add(currentLine);\n}\nelse {\n  s.properties.coordinates = [currentCoordinates];\n  s.properties.lines = new Set();\n\n  if (currentLine)\n    s.properties.lines.add(currentLine);\n\n  stations.set(stationName, s);\n}\n",[30,9463,9464,9469,9474,9478,9483,9488,9493,9498,9503,9507,9512,9517,9522,9526,9530,9535,9539,9544],{"__ignoreMap":54},[58,9465,9466],{"class":60,"line":61},[58,9467,9468],{},"const currentCoordinates = s.geometry.coordinates;\n",[58,9470,9471],{"class":60,"line":79},[58,9472,9473],{},"const currentLine = s.properties['@relations'].at(0).reltags.ref;\n",[58,9475,9476],{"class":60,"line":86},[58,9477,83],{"emptyLinePlaceholder":82},[58,9479,9480],{"class":60,"line":92},[58,9481,9482],{},"if (stations.has(stationName)) {\n",[58,9484,9485],{"class":60,"line":97},[58,9486,9487],{},"  const station = stations.get(stationName);\n",[58,9489,9490],{"class":60,"line":103},[58,9491,9492],{},"  station.properties.coordinates.push(currentCoordinates);\n",[58,9494,9495],{"class":60,"line":309},[58,9496,9497],{},"  if (currentLine)\n",[58,9499,9500],{"class":60,"line":321},[58,9501,9502],{},"    station.properties.lines.add(currentLine);\n",[58,9504,9505],{"class":60,"line":334},[58,9506,5100],{},[58,9508,9509],{"class":60,"line":347},[58,9510,9511],{},"else {\n",[58,9513,9514],{"class":60,"line":358},[58,9515,9516],{},"  s.properties.coordinates = [currentCoordinates];\n",[58,9518,9519],{"class":60,"line":364},[58,9520,9521],{},"  s.properties.lines = new Set();\n",[58,9523,9524],{"class":60,"line":369},[58,9525,83],{"emptyLinePlaceholder":82},[58,9527,9528],{"class":60,"line":381},[58,9529,9497],{},[58,9531,9532],{"class":60,"line":393},[58,9533,9534],{},"    s.properties.lines.add(currentLine);\n",[58,9536,9537],{"class":60,"line":405},[58,9538,83],{"emptyLinePlaceholder":82},[58,9540,9541],{"class":60,"line":417},[58,9542,9543],{},"  stations.set(stationName, s);\n",[58,9545,9546],{"class":60,"line":427},[58,9547,5100],{},[15,9549,9550,9551,9554,9555,9558],{},"Hum, cela ne passe pas avec un\n",[30,9552,9553],{},"console.log",", je vois que la station\n",[30,9556,9557],{},"Marcadet - Poissonniers",", n'a pas de ref je peux\nme base sur quoi ?\nEn enquêtant sur la station, je me rends compte que j'ai déjà les deux lignes qui m'intéressent, que le Point geojson\nqui\nn'a pas de relation est du \"surplus\".\nJe vais faire en sorte de ne rien faire si je ne l'ai pas en espérant que ça soit suffisant.",[130,9560,132],{},{"title":54,"searchDepth":79,"depth":79,"links":9562},[],{"date":9397},"/blog/2024-03-01",{"title":9397,"description":9405},"blog/2024-03-01","3IxbY8f2c8bzkskr3mkEiX6XNMmXP_qImsJxZaOWnS0",{"id":9569,"title":9570,"body":9571,"description":9578,"extension":135,"meta":9671,"navigation":82,"path":9672,"seo":9673,"stem":9674,"__hash__":9675},"blog/blog/2024-02-27.md","2024-02-27",{"type":8,"value":9572,"toc":9669},[9573,9576,9579,9582,9585,9628,9631,9650,9660,9663,9666],[11,9574,9570],{"id":9575},"_2024-02-27",[15,9577,9578],{},"Nous avons Paris d'affiché, un champ qui permet de chercher une station de métro,\net un bouton pour valider la station et qui l'ajoute à la carte.",[15,9580,9581],{},"Cependant, on peut voir que certaines stations sont en doublons.",[15,9583,9584],{},"Dans cet exemple, on peut voir que la station \"Nation\" remonte 6 fois",[49,9586,9590],{"className":9587,"code":9588,"language":9589,"meta":54,"style":54},"language-bash shiki shiki-themes github-light github-dark","cat assets/export.geojson | jq '.features | map(select(.properties.railway == \"stop\" or (.properties.public_transport == \"stop_position\" and .properties[\"type:RATP\"] == \"metro\")))' | rg '\"name\": \"Nation\"'| wc -l\n","bash",[30,9591,9592],{"__ignoreMap":54},[58,9593,9594,9598,9601,9605,9608,9611,9613,9616,9619,9622,9625],{"class":60,"line":61},[58,9595,9597],{"class":9596},"sScJk","cat",[58,9599,9600],{"class":277}," assets/export.geojson",[58,9602,9604],{"class":9603},"szBVR"," |",[58,9606,9607],{"class":9596}," jq",[58,9609,9610],{"class":277}," '.features | map(select(.properties.railway == \"stop\" or (.properties.public_transport == \"stop_position\" and .properties[\"type:RATP\"] == \"metro\")))'",[58,9612,9604],{"class":9603},[58,9614,9615],{"class":9596}," rg",[58,9617,9618],{"class":277}," '\"name\": \"Nation\"'",[58,9620,9621],{"class":9603},"|",[58,9623,9624],{"class":9596}," wc",[58,9626,9627],{"class":270}," -l\n",[15,9629,9630],{},"En regardant les données, on peut voir que les stations en doublons n'ont pas exactement les mêmes coordonnées.\nEn cherchant avec les coordonnées d'une station, on peut voir que ça nous remonte la ligne associée",[49,9632,9634],{"className":9587,"code":9633,"language":9589,"meta":54,"style":54}," cat assets/export.geojson | jq '.features[] | select(.geometry.coordinates[][] == [2.3213306,48.8822428])'\n",[30,9635,9636],{"__ignoreMap":54},[58,9637,9638,9641,9643,9645,9647],{"class":60,"line":61},[58,9639,9640],{"class":9596}," cat",[58,9642,9600],{"class":277},[58,9644,9604],{"class":9603},[58,9646,9607],{"class":9596},[58,9648,9649],{"class":277}," '.features[] | select(.geometry.coordinates[][] == [2.3213306,48.8822428])'\n",[15,9651,9652,9653,9655,9656,9659],{},"Comme les lignes sont représentées en geojson, grâce à des\n",[30,9654,4854],{},", ou des\n",[30,9657,9658],{},"LineString",",\nje me dis que ça va m'être utile de garder toutes les coordonnées d'une unique station.",[15,9661,9662],{},"C'est parti pour faire un script pour merger les stations en doublons.",[15,9664,9665],{},"Ensuite, je vais devoir relier les stations entre elles, pour ça je vais vouloir extraire les lignes de métro du \"gros\"\ngeojson.\nC'est parti pour un autre script.",[130,9667,9668],{},"html pre.shiki code .sScJk, html code.shiki .sScJk{--shiki-default:#6F42C1;--shiki-dark:#B392F0}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html pre.shiki code .szBVR, html code.shiki .szBVR{--shiki-default:#D73A49;--shiki-dark:#F97583}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":54,"searchDepth":79,"depth":79,"links":9670},[],{"date":9570},"/blog/2024-02-27",{"title":9570,"description":9578},"blog/2024-02-27","w5x19yR9dLrMsZVSVeCzp1NVLqQWTLqnExgyMtOYaGU",{"id":9677,"title":9678,"body":9679,"description":9875,"extension":135,"meta":9876,"navigation":82,"path":9877,"seo":9878,"stem":9879,"__hash__":9880},"blog/blog/2024-02-25.md","2024-02-25",{"type":8,"value":9680,"toc":9870},[9681,9684,9693,9696,9700,9726,9740,9743,9785,9788,9791,9795,9798,9807,9810,9819,9821,9868],[11,9682,9678],{"id":9683},"_2024-02-25",[15,9685,9686,9687,9692],{},"Suite à une idée d'une collègue Marianne, je me lance sur ce projet.\nL'idée est de faire un jeu comme ",[22,9688,9691],{"href":9689,"rel":9690},"https://travle.earth/",[26],"Travle.earth",", mais avec les stations du métro de Paris.",[15,9694,9695],{},"Comment je vais m'y prendre ?",[4842,9697,9699],{"id":9698},"données","Données",[15,9701,9702,9703,9708,9709,9714,9715,9720,9721],{},"Tout d'abord, je regarde comment je pourrai avoir les données.\nLes données ne sont pas présentes sur ",[22,9704,9707],{"href":9705,"rel":9706},"https://data.ratp.fr/",[26],"Data RATP","\nNi sur ",[22,9710,9713],{"href":9711,"rel":9712},"https://www.data.gouv.fr/fr/reuses/open-data-du-metro-parisien/",[26],"Data Gouv","\nUn bout d'espoir\nsur : ",[22,9716,9719],{"href":9717,"rel":9718},"https://data.iledefrance-mobilites.fr/explore/dataset/emplacement-des-gares-idf",[26],"Data île de france mobilités","\nPuis : ",[22,9722,9725],{"href":9723,"rel":9724},"https://opendata.paris.fr/explore/dataset/plan-de-voirie-acces-pietons-metro-et-parkings/information/",[26],"Open Data Paris",[15,9727,9728,9729,9734,9735,33],{},"Enfin, je me souviens d'",[22,9730,9733],{"href":9731,"rel":9732},"https://overpass-turbo.eu/",[26],"Overpass Turbo",",\nqui permet de faire des requêtes sur les données ",[22,9736,9739],{"href":9737,"rel":9738},"https://www.openstreetmap.org",[26],"OpenStreetMap",[15,9741,9742],{},"Et là, j'arrive à une requête concluante qui me donne les stations de métro de Paris et le tracé des lignes de métro",[49,9744,9748],{"className":9745,"code":9746,"language":9747,"meta":54,"style":54},"language-overpass shiki shiki-themes github-light github-dark","[bbox:{{bbox}}];\n(\n  rel[type=route][route=subway];\n);\nout meta;\n>;\nout qt;\n","overpass",[30,9749,9750,9755,9760,9765,9770,9775,9780],{"__ignoreMap":54},[58,9751,9752],{"class":60,"line":61},[58,9753,9754],{},"[bbox:{{bbox}}];\n",[58,9756,9757],{"class":60,"line":79},[58,9758,9759],{},"(\n",[58,9761,9762],{"class":60,"line":86},[58,9763,9764],{},"  rel[type=route][route=subway];\n",[58,9766,9767],{"class":60,"line":92},[58,9768,9769],{},");\n",[58,9771,9772],{"class":60,"line":97},[58,9773,9774],{},"out meta;\n",[58,9776,9777],{"class":60,"line":103},[58,9778,9779],{},">;\n",[58,9781,9782],{"class":60,"line":309},[58,9783,9784],{},"out qt;\n",[15,9786,9787],{},"C'est la première fois que j'ouvre un geojson, mais ça m'a pas l'air si compliqué.\nCependant, le fichier geojson fait plus de 6Mo et Webstorm ne veut pas faire de recherche dedans.\nCa tombe bien, ce projet ça permet aussi de se refaire la main sur jq.",[15,9789,9790],{},"Les données sont bien là, mais il y a un peu de travail pour les nettoyer.",[4842,9792,9794],{"id":9793},"comment-afficher-paris-et-les-stations-de-métro","Comment afficher Paris, et les stations de métro ?",[15,9796,9797],{},"Travle, utilise D3.js, et en regardant la documentation ça parait cohérent d'utiliser cette librairie aussi.\nMe voilà, à essayer de récupérer un geojson de Paris, et ses arrondissements, pour l'afficher sur page html.",[15,9799,9800,9801,9806],{},"Je me suis basé sur ",[22,9802,9805],{"href":9803,"rel":9804},"https://d3-graph-gallery.com/graph/backgroundmap_country.html",[26],"cet exemple",",\nqui permet d'afficher la France avec D3.js. Après quelques modifications, j'arrive à afficher Paris.",[15,9808,9809],{},"Après quelques heures, je pense que ce projet est faisable, mes inquiétudes sont sur le fait de relier les stations\nentre elles au fur et à mesure que l'utilisateur les essaye.",[15,9811,9812,9815,9816,33],{},[58,9813,9814],{},"EDIT 2023-03-25",": Je découvre que les données d'île-de-France mobilités sont sur un autre\nsite : ",[22,9817,7847],{"href":7845,"rel":9818},[26],[4842,9820,4939],{"id":4938},[4573,9822,9823,9828,9834,9840,9846,9852,9857,9862],{},[168,9824,9825],{},[22,9826,9691],{"href":9689,"rel":9827},[26],[168,9829,9830],{},[22,9831,9833],{"href":9705,"rel":9832},[26],"Open Data - RATP",[168,9835,9836],{},[22,9837,9839],{"href":9711,"rel":9838},[26],"Open Data - Gouv",[168,9841,9842],{},[22,9843,9845],{"href":9717,"rel":9844},[26],"Open Data - Île de france mobilités",[168,9847,9848],{},[22,9849,9851],{"href":9723,"rel":9850},[26],"Open Data - Paris",[168,9853,9854],{},[22,9855,9733],{"href":9731,"rel":9856},[26],[168,9858,9859],{},[22,9860,9739],{"href":9737,"rel":9861},[26],[168,9863,9864],{},[22,9865,9867],{"href":9803,"rel":9866},[26],"D3.js - Background map of a country",[130,9869,132],{},{"title":54,"searchDepth":79,"depth":79,"links":9871},[9872,9873,9874],{"id":9698,"depth":79,"text":9699},{"id":9793,"depth":79,"text":9794},{"id":4938,"depth":79,"text":4939},"Suite à une idée d'une collègue Marianne, je me lance sur ce projet.\nL'idée est de faire un jeu comme Travle.earth, mais avec les stations du métro de Paris.",{"date":9678},"/blog/2024-02-25",{"title":9678,"description":9875},"blog/2024-02-25","meA3MgIGTQEtxqqgM3BS9K5VJH6Pznt0lfQdpuF4paY",1752398828671]