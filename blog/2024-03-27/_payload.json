[{"data":1,"prerenderedAt":1627},["ShallowReactive",2],{"/blog/2024-03-27":3},{"id":4,"title":5,"body":6,"description":16,"extension":1620,"meta":1621,"navigation":1622,"path":1623,"seo":1624,"stem":1625,"__hash__":1626},"blog/blog/2024-03-27.md","2024-03-27",{"type":7,"value":8,"toc":1609},"minimark",[9,13,17,36,41,44,68,75,149,152,155,215,218,238,241,280,283,290,333,340,343,347,350,676,681,694,698,712,749,752,756,759,763,776,779,849,852,855,863,866,873,879,882,885,888,942,945,951,954,994,997,1000,1065,1068,1074,1077,1080,1160,1163,1359,1362,1368,1371,1385,1395,1398,1404,1407,1564,1567,1570,1574,1577,1587,1591,1605],[10,11,5],"h1",{"id":12},"_2024-03-27",[14,15,16],"p",{},"Cette migration vers l'usage de GTFS est plutôt intéressante. Cela me permet de résoudre plusieurs choses :",[18,19,20,24,27,30,33],"ul",{},[21,22,23],"li",{},"Avoir un mode par temps de trajet",[21,25,26],{},"Avoir un affichage des stations plus précises (l'unique point par station)",[21,28,29],{},"Avoir toutes les correspondances possibles (ex: Saint-Lazare - St-Augustin)",[21,31,32],{},"Être en mesure d'ajouter le RER, le bus, le tramway, etc.",[21,34,35],{},"Être en mesure de pouvoir faire d'autres villes avec quelques changements",[37,38,40],"h2",{"id":39},"import-des-données","Import des données",[14,42,43],{},"Hier, je me suis arrêté à un moment où je streamais les données parsées pour les enregistrer en base de données.\nSeulement, à la fin du script, je n'avais pas tout en base. Regardons de plus près.",[45,46,51],"pre",{"className":47,"code":48,"language":49,"meta":50,"style":50},"language-shell shiki shiki-themes github-light github-dark","❯ wc -l ~/Downloads/IDFM-gtfs/trips.txt\n  440474 /Users/vincenthardouin/Downloads/IDFM-gtfs/trips.txt\n","shell","",[52,53,54,62],"code",{"__ignoreMap":50},[55,56,59],"span",{"class":57,"line":58},"line",1,[55,60,61],{},"❯ wc -l ~/Downloads/IDFM-gtfs/trips.txt\n",[55,63,65],{"class":57,"line":64},2,[55,66,67],{},"  440474 /Users/vincenthardouin/Downloads/IDFM-gtfs/trips.txt\n",[14,69,70,71,74],{},"Il y a 440 474 lignes dans le fichier\n",[52,72,73],{},"trips.txt",", moins 1 ligne de header et j'ai 433 lignes dans ma base de données.",[45,76,78],{"className":47,"code":77,"language":49,"meta":50,"style":50},"❯ pgcli postgresql://postgres@localhost:5432/idfm\nServer: PostgreSQL 14.10\nVersion: 4.0.1\nHome: http://pgcli.com\npostgres@localhost:idfm> select count(*) from trips;\n+-------+\n| count |\n|-------|\n| 433   |\n+-------+\nSELECT 1\nTime: 0.014s\n",[52,79,80,85,90,96,102,108,114,120,126,132,137,143],{"__ignoreMap":50},[55,81,82],{"class":57,"line":58},[55,83,84],{},"❯ pgcli postgresql://postgres@localhost:5432/idfm\n",[55,86,87],{"class":57,"line":64},[55,88,89],{},"Server: PostgreSQL 14.10\n",[55,91,93],{"class":57,"line":92},3,[55,94,95],{},"Version: 4.0.1\n",[55,97,99],{"class":57,"line":98},4,[55,100,101],{},"Home: http://pgcli.com\n",[55,103,105],{"class":57,"line":104},5,[55,106,107],{},"postgres@localhost:idfm> select count(*) from trips;\n",[55,109,111],{"class":57,"line":110},6,[55,112,113],{},"+-------+\n",[55,115,117],{"class":57,"line":116},7,[55,118,119],{},"| count |\n",[55,121,123],{"class":57,"line":122},8,[55,124,125],{},"|-------|\n",[55,127,129],{"class":57,"line":128},9,[55,130,131],{},"| 433   |\n",[55,133,135],{"class":57,"line":134},10,[55,136,113],{},[55,138,140],{"class":57,"line":139},11,[55,141,142],{},"SELECT 1\n",[55,144,146],{"class":57,"line":145},12,[55,147,148],{},"Time: 0.014s\n",[14,150,151],{},"Une légère différence …",[14,153,154],{},"Voici mon implémentation de stream :",[45,156,160],{"className":157,"code":158,"language":159,"meta":50,"style":50},"language-javascript shiki shiki-themes github-light github-dark","await new Promise((resolve, reject) => {\n  stream.on('data', async (chunk) => {\n    await saveFunction([chunk]);\n  });\n  stream.on('end', () => {\n    resolve();\n  });\n  stream.on('error', (error) => {\n    reject(error);\n  });\n});\n","javascript",[52,161,162,167,172,177,182,187,192,196,201,206,210],{"__ignoreMap":50},[55,163,164],{"class":57,"line":58},[55,165,166],{},"await new Promise((resolve, reject) => {\n",[55,168,169],{"class":57,"line":64},[55,170,171],{},"  stream.on('data', async (chunk) => {\n",[55,173,174],{"class":57,"line":92},[55,175,176],{},"    await saveFunction([chunk]);\n",[55,178,179],{"class":57,"line":98},[55,180,181],{},"  });\n",[55,183,184],{"class":57,"line":104},[55,185,186],{},"  stream.on('end', () => {\n",[55,188,189],{"class":57,"line":110},[55,190,191],{},"    resolve();\n",[55,193,194],{"class":57,"line":116},[55,195,181],{},[55,197,198],{"class":57,"line":122},[55,199,200],{},"  stream.on('error', (error) => {\n",[55,202,203],{"class":57,"line":128},[55,204,205],{},"    reject(error);\n",[55,207,208],{"class":57,"line":134},[55,209,181],{},[55,211,212],{"class":57,"line":139},[55,213,214],{},"});\n",[14,216,217],{},"Je suppose que l'async callback ne fonctionne pas, ce qui parait assez logique.\nJe transforme donc le code sous cette forme :",[45,219,221],{"className":157,"code":220,"language":159,"meta":50,"style":50},"for await (const chunk of stream) {\n  await saveFunction([chunk]);\n}\n",[52,222,223,228,233],{"__ignoreMap":50},[55,224,225],{"class":57,"line":58},[55,226,227],{},"for await (const chunk of stream) {\n",[55,229,230],{"class":57,"line":64},[55,231,232],{},"  await saveFunction([chunk]);\n",[55,234,235],{"class":57,"line":92},[55,236,237],{},"}\n",[14,239,240],{},"Je relance le script, c'est long, mais ça fonctionne bien. Là, on commit 1 à 1 chaque ligne.\nJe me dis que je peux envoyer des batchs :",[45,242,244],{"className":157,"code":243,"language":159,"meta":50,"style":50},"for await (const data of stream) {\n  chunks.push(data);\n  if (chunks.length > 10000) {\n    await saveFunction(chunks);\n    chunks = [];\n  }\n}\n",[52,245,246,251,256,261,266,271,276],{"__ignoreMap":50},[55,247,248],{"class":57,"line":58},[55,249,250],{},"for await (const data of stream) {\n",[55,252,253],{"class":57,"line":64},[55,254,255],{},"  chunks.push(data);\n",[55,257,258],{"class":57,"line":92},[55,259,260],{},"  if (chunks.length > 10000) {\n",[55,262,263],{"class":57,"line":98},[55,264,265],{},"    await saveFunction(chunks);\n",[55,267,268],{"class":57,"line":104},[55,269,270],{},"    chunks = [];\n",[55,272,273],{"class":57,"line":110},[55,274,275],{},"  }\n",[55,277,278],{"class":57,"line":116},[55,279,237],{},[14,281,282],{},"Je relance le script, c'est plus rapide. On commit par batch de 1000 lignes. 10 secondes pour 413 000 lignes, testons\npar 10 000. J'augmente donc à 10 000 la taille du batch de cette fonction est aussi dans le batchInsert de knex, j'ai\nles mêmes résultats. Je reste à 1 000.",[14,284,285,286,289],{},"Oups, durant l'import, j'ai l'erreur :\n",[52,287,288],{}," hint: 'Check free disk space.',",". Je ne dois pas allouer assez de place pour\ndocker.\nMais la base est si grosse que ça ? Je regarde :",[45,291,293],{"className":47,"code":292,"language":49,"meta":50,"style":50},"postgres@localhost:idfm> SELECT pg_size_pretty( pg_database_size('idfm') );\n+----------------+\n| pg_size_pretty |\n|----------------|\n| 1912 MB        |\n+----------------+\nSELECT 1\nTime: 0.033s\n",[52,294,295,300,305,310,315,320,324,328],{"__ignoreMap":50},[55,296,297],{"class":57,"line":58},[55,298,299],{},"postgres@localhost:idfm> SELECT pg_size_pretty( pg_database_size('idfm') );\n",[55,301,302],{"class":57,"line":64},[55,303,304],{},"+----------------+\n",[55,306,307],{"class":57,"line":92},[55,308,309],{},"| pg_size_pretty |\n",[55,311,312],{"class":57,"line":98},[55,313,314],{},"|----------------|\n",[55,316,317],{"class":57,"line":104},[55,318,319],{},"| 1912 MB        |\n",[55,321,322],{"class":57,"line":110},[55,323,304],{},[55,325,326],{"class":57,"line":116},[55,327,142],{},[55,329,330],{"class":57,"line":122},[55,331,332],{},"Time: 0.033s\n",[14,334,335,336,339],{},"Ah 2 Go quand même. Bon, naïvement, je lance un\n",[52,337,338],{},"docker system prune",". Je récupère 3Go.\nJe relance. En 4 minutes 55, j'ai tout en base. Je ne sais pas quoi en penser niveau performance, mais ce n'est déjà pas\nsi mal.\nLe map sur les 1000 éléments à chaque insertion ne doit pas aider, mais ce n'est pas le sujet.",[14,341,342],{},"Je vais pouvoir passer aux requêtes sql pour récupérer les données.",[37,344,346],{"id":345},"export-des-données","Export des données",[14,348,349],{},"Hier, j'ai fait un semblant de json qui me plairait bien :",[45,351,355],{"className":352,"code":353,"language":354,"meta":50,"style":50},"language-json shiki shiki-themes github-light github-dark","{\n  \"routes\": [\n    {\n      \"route_id\": \"route_id\",\n      \"route_name\": \"route_name\",\n      \"route_color\": \"route_color\"\n    }\n  ],\n  \"stops\": [\n    {\n      \"name\": \"stop_name\",\n      \"id\": \"stop_id\",\n      \"stop_unique_id\": \"stop_unique_id\",\n      \"route_id\": \"route_id\"\n    }\n  ],\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ],\n  \"stops_unique\": [\n    {\n      \"id\": \"stop_unique_id\",\n      \"name\": \"stop_name\",\n      \"lat\": 48.123,\n      \"lon\": 2.123\n    }\n  ]\n}\n","json",[52,356,357,363,372,377,392,404,414,419,424,431,435,447,459,472,482,487,492,500,505,517,530,543,551,557,570,581,587,593,598,603,611,616,627,638,650,660,665,671],{"__ignoreMap":50},[55,358,359],{"class":57,"line":58},[55,360,362],{"class":361},"sVt8B","{\n",[55,364,365,369],{"class":57,"line":64},[55,366,368],{"class":367},"sj4cs","  \"routes\"",[55,370,371],{"class":361},": [\n",[55,373,374],{"class":57,"line":92},[55,375,376],{"class":361},"    {\n",[55,378,379,382,385,389],{"class":57,"line":98},[55,380,381],{"class":367},"      \"route_id\"",[55,383,384],{"class":361},": ",[55,386,388],{"class":387},"sZZnC","\"route_id\"",[55,390,391],{"class":361},",\n",[55,393,394,397,399,402],{"class":57,"line":104},[55,395,396],{"class":367},"      \"route_name\"",[55,398,384],{"class":361},[55,400,401],{"class":387},"\"route_name\"",[55,403,391],{"class":361},[55,405,406,409,411],{"class":57,"line":110},[55,407,408],{"class":367},"      \"route_color\"",[55,410,384],{"class":361},[55,412,413],{"class":387},"\"route_color\"\n",[55,415,416],{"class":57,"line":116},[55,417,418],{"class":361},"    }\n",[55,420,421],{"class":57,"line":122},[55,422,423],{"class":361},"  ],\n",[55,425,426,429],{"class":57,"line":128},[55,427,428],{"class":367},"  \"stops\"",[55,430,371],{"class":361},[55,432,433],{"class":57,"line":134},[55,434,376],{"class":361},[55,436,437,440,442,445],{"class":57,"line":139},[55,438,439],{"class":367},"      \"name\"",[55,441,384],{"class":361},[55,443,444],{"class":387},"\"stop_name\"",[55,446,391],{"class":361},[55,448,449,452,454,457],{"class":57,"line":145},[55,450,451],{"class":367},"      \"id\"",[55,453,384],{"class":361},[55,455,456],{"class":387},"\"stop_id\"",[55,458,391],{"class":361},[55,460,462,465,467,470],{"class":57,"line":461},13,[55,463,464],{"class":367},"      \"stop_unique_id\"",[55,466,384],{"class":361},[55,468,469],{"class":387},"\"stop_unique_id\"",[55,471,391],{"class":361},[55,473,475,477,479],{"class":57,"line":474},14,[55,476,381],{"class":367},[55,478,384],{"class":361},[55,480,481],{"class":387},"\"route_id\"\n",[55,483,485],{"class":57,"line":484},15,[55,486,418],{"class":361},[55,488,490],{"class":57,"line":489},16,[55,491,423],{"class":361},[55,493,495,498],{"class":57,"line":494},17,[55,496,497],{"class":367},"  \"adjacents\"",[55,499,371],{"class":361},[55,501,503],{"class":57,"line":502},18,[55,504,376],{"class":361},[55,506,508,511,513,515],{"class":57,"line":507},19,[55,509,510],{"class":367},"      \"from_stop_id\"",[55,512,384],{"class":361},[55,514,456],{"class":387},[55,516,391],{"class":361},[55,518,520,523,525,528],{"class":57,"line":519},20,[55,521,522],{"class":367},"      \"to_stop_id\"",[55,524,384],{"class":361},[55,526,527],{"class":387},"\"adjacent_stop_id\"",[55,529,391],{"class":361},[55,531,533,536,538,541],{"class":57,"line":532},21,[55,534,535],{"class":367},"      \"time\"",[55,537,384],{"class":361},[55,539,540],{"class":367},"123",[55,542,391],{"class":361},[55,544,546,549],{"class":57,"line":545},22,[55,547,548],{"class":367},"      \"path\"",[55,550,371],{"class":361},[55,552,554],{"class":57,"line":553},23,[55,555,556],{"class":361},"        {\n",[55,558,560,563,565,568],{"class":57,"line":559},24,[55,561,562],{"class":367},"          \"lat\"",[55,564,384],{"class":361},[55,566,567],{"class":367},"48.123",[55,569,391],{"class":361},[55,571,573,576,578],{"class":57,"line":572},25,[55,574,575],{"class":367},"          \"lon\"",[55,577,384],{"class":361},[55,579,580],{"class":367},"2.123\n",[55,582,584],{"class":57,"line":583},26,[55,585,586],{"class":361},"        }\n",[55,588,590],{"class":57,"line":589},27,[55,591,592],{"class":361},"      ]\n",[55,594,596],{"class":57,"line":595},28,[55,597,418],{"class":361},[55,599,601],{"class":57,"line":600},29,[55,602,423],{"class":361},[55,604,606,609],{"class":57,"line":605},30,[55,607,608],{"class":367},"  \"stops_unique\"",[55,610,371],{"class":361},[55,612,614],{"class":57,"line":613},31,[55,615,376],{"class":361},[55,617,619,621,623,625],{"class":57,"line":618},32,[55,620,451],{"class":367},[55,622,384],{"class":361},[55,624,469],{"class":387},[55,626,391],{"class":361},[55,628,630,632,634,636],{"class":57,"line":629},33,[55,631,439],{"class":367},[55,633,384],{"class":361},[55,635,444],{"class":387},[55,637,391],{"class":361},[55,639,641,644,646,648],{"class":57,"line":640},34,[55,642,643],{"class":367},"      \"lat\"",[55,645,384],{"class":361},[55,647,567],{"class":367},[55,649,391],{"class":361},[55,651,653,656,658],{"class":57,"line":652},35,[55,654,655],{"class":367},"      \"lon\"",[55,657,384],{"class":361},[55,659,580],{"class":367},[55,661,663],{"class":57,"line":662},36,[55,664,418],{"class":361},[55,666,668],{"class":57,"line":667},37,[55,669,670],{"class":361},"  ]\n",[55,672,674],{"class":57,"line":673},38,[55,675,237],{"class":361},[677,678,680],"h3",{"id":679},"routes","Routes",[14,682,683,684,689,690,693],{},"Je commence par les routes, dans mon cas, je ne veux que les lignes de métros.\nEn basant sur ",[685,686,688],"a",{"href":687},"assets/IDFM_Documentation_GTFS.pdf","le document GTFS de IDFM",", je peux voir que le\n",[52,691,692],{},"route_type"," est à 1\npour les métros. Faisons du TDD, après ce moment sans tests, pour l'import.",[677,695,697],{"id":696},"stops","Stops",[14,699,700,701,704,705,708,709,711],{},"Ensuite, les stops, ça va être plus sympa. Pour les stops, il faut faire la jointure avec\n",[52,702,703],{},"stop_times",", puis\n",[52,706,707],{},"trips",", et\nles liés aux\n",[52,710,679],{},".\nEn faisant cette requête :",[45,713,717],{"className":714,"code":715,"language":716,"meta":50,"style":50},"language-sql shiki shiki-themes github-light github-dark","select distinct(stop_name)\nfrom stops\ninner join stop_times on stops.stop_id = stop_times.stop_id\ninner join trips on trips.trip_id = stop_times.trip_id\ninner join routes on routes.route_id = trips.route_id\nwhere routes.route_type = 1;\n","sql",[52,718,719,724,729,734,739,744],{"__ignoreMap":50},[55,720,721],{"class":57,"line":58},[55,722,723],{},"select distinct(stop_name)\n",[55,725,726],{"class":57,"line":64},[55,727,728],{},"from stops\n",[55,730,731],{"class":57,"line":92},[55,732,733],{},"inner join stop_times on stops.stop_id = stop_times.stop_id\n",[55,735,736],{"class":57,"line":98},[55,737,738],{},"inner join trips on trips.trip_id = stop_times.trip_id\n",[55,740,741],{"class":57,"line":104},[55,742,743],{},"inner join routes on routes.route_id = trips.route_id\n",[55,745,746],{"class":57,"line":110},[55,747,748],{},"where routes.route_type = 1;\n",[14,750,751],{},"J'ai la réponse en 2s, et 0.6s au deuxième appel (avec du cache). C'est clairement OK, merci PG \u003C3.",[677,753,755],{"id":754},"adjacents","Adjacents",[14,757,758],{},"Pour les adjacents, il y a plusieurs calculs à faire.",[677,760,762],{"id":761},"adjacents-sur-une-même-ligne","Adjacents sur une même ligne",[14,764,765,766,768,769,772,773,775],{},"Il faut d'abord récupérer les adjacents sur une même ligne, pour ça il faut se baser sur les\n",[52,767,703],{}," grâce\nau\n",[52,770,771],{},"stop_sequence",".\nSi la station a un\n",[52,774,771],{}," de 5, alors ses adjacents sont les stations 4 et 6.",[14,777,778],{},"J'obtiens quelque chose avec cette requête :",[45,780,782],{"className":714,"code":781,"language":716,"meta":50,"style":50},"SELECT DISTINCT s.stop_name AS station_name,\n        st.stop_sequence AS current_sequence,\n        adjacent_stops.stop_sequence AS adjacent_sequence,\n        adjacent_stops_station.stop_name AS adjacent_station_name,\n        r.route_short_name AS line_number\n FROM stop_times AS st\n INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n INNER JOIN stops AS s ON st.stop_id = s.stop_id\n INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n INNER JOIN trips AS t ON st.trip_id = t.trip_id\n INNER JOIN routes AS r ON t.route_id = r.route_id\n WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n AND r.route_type = 1;\n",[52,783,784,789,794,799,804,809,814,819,824,829,834,839,844],{"__ignoreMap":50},[55,785,786],{"class":57,"line":58},[55,787,788],{},"SELECT DISTINCT s.stop_name AS station_name,\n",[55,790,791],{"class":57,"line":64},[55,792,793],{},"        st.stop_sequence AS current_sequence,\n",[55,795,796],{"class":57,"line":92},[55,797,798],{},"        adjacent_stops.stop_sequence AS adjacent_sequence,\n",[55,800,801],{"class":57,"line":98},[55,802,803],{},"        adjacent_stops_station.stop_name AS adjacent_station_name,\n",[55,805,806],{"class":57,"line":104},[55,807,808],{},"        r.route_short_name AS line_number\n",[55,810,811],{"class":57,"line":110},[55,812,813],{}," FROM stop_times AS st\n",[55,815,816],{"class":57,"line":116},[55,817,818],{}," INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[55,820,821],{"class":57,"line":122},[55,822,823],{}," INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[55,825,826],{"class":57,"line":128},[55,827,828],{}," INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[55,830,831],{"class":57,"line":134},[55,832,833],{}," INNER JOIN trips AS t ON st.trip_id = t.trip_id\n",[55,835,836],{"class":57,"line":139},[55,837,838],{}," INNER JOIN routes AS r ON t.route_id = r.route_id\n",[55,840,841],{"class":57,"line":145},[55,842,843],{}," WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[55,845,846],{"class":57,"line":461},[55,847,848],{}," AND r.route_type = 1;\n",[14,850,851],{},"Elle met 5s, c'est plutôt correct sur 9 millions de lignes et pour un one-shot.",[14,853,854],{},"Ce qui m'étonne avec cette requête, c'est que par exemple si on prends Alésia, on a :",[45,856,861],{"className":857,"code":859,"language":860},[858],"language-text","+-----------------------------------------+------------------+-------------------+-------------------------------------+-------------+\n| station_name                            | current_sequence | adjacent_sequence | adjacent_station_name               | line_number |\n|-----------------------------------------+------------------+-------------------+-------------------------------------+-------------|\n| Alésia                                  | 1                | 0                 | Porte d'Orléans                     | 4           |\n| Alésia                                  | 1                | 2                 | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 4                | 3                 | Porte d'Orléans                     | 4           |\n| Alésia                                  | 4                | 5                 | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 19               | 18                | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 19               | 20                | Porte d'Orléans                     | 4           |\n| Alésia                                  | 24               | 23                | Mouton-Duvernet                     | 4           |\n| Alésia                                  | 24               | 25                | Porte d'Orléans                     | 4           |\n","text",[52,862,859],{"__ignoreMap":50},[14,864,865],{},"On peut voir les aller-retour par exemple dans un sens, Alésia et la deuxième station (current_sequence = 1) et a donc\ncomme stations adjacentes : Porte d'Orléans et Mouton-Duvernet.\nDans l'autre sens, Alésia, c'est la 19e station avec les mêmes stations adjacentes. Mais, c'est aussi la 4e station et\nla 19e, comme si la ligne était raccourcie à un moment donné ou rallongée d'ailleurs.",[14,867,868,869,872],{},"Si j'affiche le\n",[52,870,871],{},"trip_headsign",", je pourrais en savoir plus",[45,874,877],{"className":875,"code":876,"language":860},[858],"+-----------------------------------------+------------------+-------------------+-------------------------------------+-------------+-------------------------------------------------+\n| station_name                            | current_sequence | adjacent_sequence | adjacent_station_name               | line_number | trip_name                                       |\n|-----------------------------------------+------------------+-------------------+-------------------------------------+-------------+-------------------------------------------------|\n| Alésia                                  | 1                | 0                 | Porte d'Orléans                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 1                | 2                 | Mouton-Duvernet                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 4                | 3                 | Porte d'Orléans                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 4                | 5                 | Mouton-Duvernet                     | 4           | Porte de Clignancourt                           |\n| Alésia                                  | 19               | 18                | Mouton-Duvernet                     | 4           | Bagneux - Lucie Aubrac                          |\n| Alésia                                  | 19               | 20                | Porte d'Orléans                     | 4           | Bagneux - Lucie Aubrac                          |\n| Alésia                                  | 24               | 23                | Mouton-Duvernet                     | 4           | Bagneux - Lucie Aubrac                          |\n| Alésia                                  | 24               | 25                | Porte d'Orléans                     | 4           | Bagneux - Lucie Aubrac                          |\n",[52,878,876],{"__ignoreMap":50},[14,880,881],{},"On est clairement dans ce cas où la ligne est rallongée.",[14,883,884],{},"Bon dans tous les cas ça ne change pas les stations adjacentes, mais c'est intéressant à savoir.",[14,886,887],{},"Pour la version sans doublon :",[45,889,891],{"className":714,"code":890,"language":716,"meta":50,"style":50},"SELECT DISTINCT s.stop_name AS station_name,\n     adjacent_stops_station.stop_name AS adjacent_station_name\nFROM stop_times AS st\nINNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\nINNER JOIN stops AS s ON st.stop_id = s.stop_id\nINNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\nINNER JOIN trips AS t ON st.trip_id = t.trip_id\nINNER JOIN routes AS r ON t.route_id = r.route_id\nWHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\nAND r.route_type = 1;\n",[52,892,893,897,902,907,912,917,922,927,932,937],{"__ignoreMap":50},[55,894,895],{"class":57,"line":58},[55,896,788],{},[55,898,899],{"class":57,"line":64},[55,900,901],{},"     adjacent_stops_station.stop_name AS adjacent_station_name\n",[55,903,904],{"class":57,"line":92},[55,905,906],{},"FROM stop_times AS st\n",[55,908,909],{"class":57,"line":98},[55,910,911],{},"INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[55,913,914],{"class":57,"line":104},[55,915,916],{},"INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[55,918,919],{"class":57,"line":110},[55,920,921],{},"INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[55,923,924],{"class":57,"line":116},[55,925,926],{},"INNER JOIN trips AS t ON st.trip_id = t.trip_id\n",[55,928,929],{"class":57,"line":122},[55,930,931],{},"INNER JOIN routes AS r ON t.route_id = r.route_id\n",[55,933,934],{"class":57,"line":128},[55,935,936],{},"WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[55,938,939],{"class":57,"line":134},[55,940,941],{},"AND r.route_type = 1;\n",[14,943,944],{},"J'obtiens quelque chose comme ça :",[45,946,949],{"className":947,"code":948,"language":860},[858],"+-----------------------------------------+-----------------------------------------+\n| station_name                            | adjacent_station_name                   |\n|-----------------------------------------+-----------------------------------------|\n| Abbesses                                | Lamarck - Caulaincourt                  |\n| Abbesses                                | Pigalle                                 |\n| Aimé Césaire                            | Front Populaire                         |\n| Aimé Césaire                            | Mairie d'Aubervilliers                  |\n| Alexandre Dumas                         | Avron                                   |\n| Alexandre Dumas                         | Philippe Auguste                        |\n| Alma - Marceau                          | Franklin D. Roosevelt                   |\n| Alma - Marceau                          | Iéna                                    |\n| Alésia                                  | Mouton-Duvernet                         |\n| Alésia                                  | Porte d'Orléans                         |\n",[52,950,948],{"__ignoreMap":50},[14,952,953],{},"Je n'ai pas besoin du nom des stations, mais uniquement des ids, je peux donc supprimer 2 jointures.",[45,955,957],{"className":714,"code":956,"language":716,"meta":50,"style":50},"SELECT DISTINCT st.stop_id AS stop_id,\n    adjacent_stops.stop_id AS adjacent_stop_id\nFROM stop_times AS st\nINNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\nINNER JOIN trips AS t ON st.trip_id = t.trip_id\nINNER JOIN routes AS r ON t.route_id = r.route_id\nWHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n    AND r.route_type = 1\n",[52,958,959,964,969,973,977,981,985,989],{"__ignoreMap":50},[55,960,961],{"class":57,"line":58},[55,962,963],{},"SELECT DISTINCT st.stop_id AS stop_id,\n",[55,965,966],{"class":57,"line":64},[55,967,968],{},"    adjacent_stops.stop_id AS adjacent_stop_id\n",[55,970,971],{"class":57,"line":92},[55,972,906],{},[55,974,975],{"class":57,"line":98},[55,976,911],{},[55,978,979],{"class":57,"line":104},[55,980,926],{},[55,982,983],{"class":57,"line":110},[55,984,931],{},[55,986,987],{"class":57,"line":116},[55,988,936],{},[55,990,991],{"class":57,"line":122},[55,992,993],{},"    AND r.route_type = 1\n",[14,995,996],{},"Par contre, je n'ai pas du tout pris en compte le temps de trajet entre les stations, je vais devoir le faire.",[14,998,999],{},"J'obtiens :",[45,1001,1003],{"className":714,"code":1002,"language":716,"meta":50,"style":50}," SELECT DISTINCT\n     st.stop_id AS stop_id,\n     adjacent_stops.stop_id AS adjacent_stop_id,\n     st.arrival_time::interval - adjacent_stops.arrival_time::interval AS duration,\n     t.trip_headsign AS trip_headsign,\n     t.direction_id AS direction_id,\n     r.route_short_name AS route_name\n FROM stop_times AS st\n INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n INNER JOIN trips AS t ON st.trip_id = t.trip_id\n INNER JOIN routes AS r ON t.route_id = r.route_id\n WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n  AND r.route_type = 1;\n",[52,1004,1005,1010,1015,1020,1025,1030,1035,1040,1044,1048,1052,1056,1060],{"__ignoreMap":50},[55,1006,1007],{"class":57,"line":58},[55,1008,1009],{}," SELECT DISTINCT\n",[55,1011,1012],{"class":57,"line":64},[55,1013,1014],{},"     st.stop_id AS stop_id,\n",[55,1016,1017],{"class":57,"line":92},[55,1018,1019],{},"     adjacent_stops.stop_id AS adjacent_stop_id,\n",[55,1021,1022],{"class":57,"line":98},[55,1023,1024],{},"     st.arrival_time::interval - adjacent_stops.arrival_time::interval AS duration,\n",[55,1026,1027],{"class":57,"line":104},[55,1028,1029],{},"     t.trip_headsign AS trip_headsign,\n",[55,1031,1032],{"class":57,"line":110},[55,1033,1034],{},"     t.direction_id AS direction_id,\n",[55,1036,1037],{"class":57,"line":116},[55,1038,1039],{},"     r.route_short_name AS route_name\n",[55,1041,1042],{"class":57,"line":122},[55,1043,813],{},[55,1045,1046],{"class":57,"line":128},[55,1047,818],{},[55,1049,1050],{"class":57,"line":134},[55,1051,833],{},[55,1053,1054],{"class":57,"line":139},[55,1055,838],{},[55,1057,1058],{"class":57,"line":145},[55,1059,843],{},[55,1061,1062],{"class":57,"line":461},[55,1063,1064],{},"  AND r.route_type = 1;\n",[14,1066,1067],{},"Dont voici le résultat :",[45,1069,1072],{"className":1070,"code":1071,"language":860},[858],"+------------+------------------+------------------+-------------------------------------------------+--------------+------------+\n| stop_id    | adjacent_stop_id | duration         | trip_headsign                                   | direction_id | route_name |\n|------------+------------------+------------------+-------------------------------------------------+--------------+------------|\n| IDFM:21784 | IDFM:463056      | 0:02:00          | Créteil-Pointe du Lac                           | 1            | 8          |\n| IDFM:21784 | IDFM:463056      | 0:03:00          | Créteil-Pointe du Lac                           | 1            | 8          |\n| IDFM:21902 | IDFM:463250      | -1 day, 23:58:00 | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n| IDFM:21902 | IDFM:463250      | -1 day, 23:59:00 | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n| IDFM:21902 | IDFM:463316      | 0:01:00          | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n| IDFM:21902 | IDFM:463316      | 0:02:00          | Gallieni (Parc de Bagnolet)                     | 0            | 3          |\n",[52,1073,1071],{"__ignoreMap":50},[14,1075,1076],{},"On peut constater plusieurs soucis, la durée en négatif et surtout pas la durée pour un même trajet.",[14,1078,1079],{},"En faisant un case, je résous le problème de la durée négative :",[45,1081,1083],{"className":714,"code":1082,"language":716,"meta":50,"style":50}," SELECT DISTINCT\n     st.stop_id AS stop_id,\n     adjacent_stops.stop_id AS adjacent_stop_id,\n     CASE\n          WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n              THEN adjacent_stops.arrival_time::interval - st.arrival_time::interval\n          ELSE st.arrival_time::interval - adjacent_stops.arrival_time::interval\n      END AS duration,\n     t.trip_headsign AS trip_headsign,\n     t.direction_id AS direction_id,\n     r.route_short_name AS route_name\n FROM stop_times AS st\n INNER JOIN stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n INNER JOIN trips AS t ON st.trip_id = t.trip_id\n INNER JOINroutes AS r ON t.route_id = r.route_id\n WHERE ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n    AND r.route_type = 1;\n",[52,1084,1085,1089,1093,1097,1102,1107,1112,1117,1122,1126,1130,1134,1138,1142,1146,1151,1155],{"__ignoreMap":50},[55,1086,1087],{"class":57,"line":58},[55,1088,1009],{},[55,1090,1091],{"class":57,"line":64},[55,1092,1014],{},[55,1094,1095],{"class":57,"line":92},[55,1096,1019],{},[55,1098,1099],{"class":57,"line":98},[55,1100,1101],{},"     CASE\n",[55,1103,1104],{"class":57,"line":104},[55,1105,1106],{},"          WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n",[55,1108,1109],{"class":57,"line":110},[55,1110,1111],{},"              THEN adjacent_stops.arrival_time::interval - st.arrival_time::interval\n",[55,1113,1114],{"class":57,"line":116},[55,1115,1116],{},"          ELSE st.arrival_time::interval - adjacent_stops.arrival_time::interval\n",[55,1118,1119],{"class":57,"line":122},[55,1120,1121],{},"      END AS duration,\n",[55,1123,1124],{"class":57,"line":128},[55,1125,1029],{},[55,1127,1128],{"class":57,"line":134},[55,1129,1034],{},[55,1131,1132],{"class":57,"line":139},[55,1133,1039],{},[55,1135,1136],{"class":57,"line":145},[55,1137,813],{},[55,1139,1140],{"class":57,"line":461},[55,1141,818],{},[55,1143,1144],{"class":57,"line":474},[55,1145,833],{},[55,1147,1148],{"class":57,"line":484},[55,1149,1150],{}," INNER JOINroutes AS r ON t.route_id = r.route_id\n",[55,1152,1153],{"class":57,"line":489},[55,1154,843],{},[55,1156,1157],{"class":57,"line":494},[55,1158,1159],{},"    AND r.route_type = 1;\n",[14,1161,1162],{},"Pour ma culture j'ai voulu voir les arrêts les plus longs:",[45,1164,1166],{"className":714,"code":1165,"language":716,"meta":50,"style":50},"WITH stops_and_adjacents AS (\n    SELECT DISTINCT\n        st.stop_id AS from_stop_id,\n        s.stop_name AS from_stop_name,\n        adjacent_stops.stop_id AS to_stop_id,\n        adjacent_stops_station.stop_name AS to_stop_name,\n        CASE\n            WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n                THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n            ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n        END AS duration\n    FROM\n        stop_times AS st\n    INNER JOIN\n        stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n    INNER JOIN\n        trips AS t ON st.trip_id = t.trip_id\n    INNER JOIN stops AS s ON st.stop_id = s.stop_id\n    INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n    INNER JOIN\n        routes AS r ON t.route_id = r.route_id\n    WHERE\n        ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n        AND r.route_type = 1\n)\nSELECT\n    from_stop_id,\n    from_stop_name,\n    to_stop_id,\n    to_stop_name,\n    MIN(duration) AS min_duration\nFROM\n    stops_and_adjacents\nGROUP BY\n    from_stop_id,\n    from_stop_name,\n    to_stop_id,\n    to_stop_name\nORDER BY min_duration DESC;\n",[52,1167,1168,1173,1178,1183,1188,1193,1198,1203,1208,1213,1218,1223,1228,1233,1238,1243,1247,1252,1257,1262,1266,1271,1276,1281,1286,1291,1296,1301,1306,1311,1316,1321,1326,1331,1336,1340,1344,1348,1353],{"__ignoreMap":50},[55,1169,1170],{"class":57,"line":58},[55,1171,1172],{},"WITH stops_and_adjacents AS (\n",[55,1174,1175],{"class":57,"line":64},[55,1176,1177],{},"    SELECT DISTINCT\n",[55,1179,1180],{"class":57,"line":92},[55,1181,1182],{},"        st.stop_id AS from_stop_id,\n",[55,1184,1185],{"class":57,"line":98},[55,1186,1187],{},"        s.stop_name AS from_stop_name,\n",[55,1189,1190],{"class":57,"line":104},[55,1191,1192],{},"        adjacent_stops.stop_id AS to_stop_id,\n",[55,1194,1195],{"class":57,"line":110},[55,1196,1197],{},"        adjacent_stops_station.stop_name AS to_stop_name,\n",[55,1199,1200],{"class":57,"line":116},[55,1201,1202],{},"        CASE\n",[55,1204,1205],{"class":57,"line":122},[55,1206,1207],{},"            WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n",[55,1209,1210],{"class":57,"line":128},[55,1211,1212],{},"                THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n",[55,1214,1215],{"class":57,"line":134},[55,1216,1217],{},"            ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n",[55,1219,1220],{"class":57,"line":139},[55,1221,1222],{},"        END AS duration\n",[55,1224,1225],{"class":57,"line":145},[55,1226,1227],{},"    FROM\n",[55,1229,1230],{"class":57,"line":461},[55,1231,1232],{},"        stop_times AS st\n",[55,1234,1235],{"class":57,"line":474},[55,1236,1237],{},"    INNER JOIN\n",[55,1239,1240],{"class":57,"line":484},[55,1241,1242],{},"        stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[55,1244,1245],{"class":57,"line":489},[55,1246,1237],{},[55,1248,1249],{"class":57,"line":494},[55,1250,1251],{},"        trips AS t ON st.trip_id = t.trip_id\n",[55,1253,1254],{"class":57,"line":502},[55,1255,1256],{},"    INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[55,1258,1259],{"class":57,"line":507},[55,1260,1261],{},"    INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[55,1263,1264],{"class":57,"line":519},[55,1265,1237],{},[55,1267,1268],{"class":57,"line":532},[55,1269,1270],{},"        routes AS r ON t.route_id = r.route_id\n",[55,1272,1273],{"class":57,"line":545},[55,1274,1275],{},"    WHERE\n",[55,1277,1278],{"class":57,"line":553},[55,1279,1280],{},"        ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[55,1282,1283],{"class":57,"line":559},[55,1284,1285],{},"        AND r.route_type = 1\n",[55,1287,1288],{"class":57,"line":572},[55,1289,1290],{},")\n",[55,1292,1293],{"class":57,"line":583},[55,1294,1295],{},"SELECT\n",[55,1297,1298],{"class":57,"line":589},[55,1299,1300],{},"    from_stop_id,\n",[55,1302,1303],{"class":57,"line":595},[55,1304,1305],{},"    from_stop_name,\n",[55,1307,1308],{"class":57,"line":600},[55,1309,1310],{},"    to_stop_id,\n",[55,1312,1313],{"class":57,"line":605},[55,1314,1315],{},"    to_stop_name,\n",[55,1317,1318],{"class":57,"line":613},[55,1319,1320],{},"    MIN(duration) AS min_duration\n",[55,1322,1323],{"class":57,"line":618},[55,1324,1325],{},"FROM\n",[55,1327,1328],{"class":57,"line":629},[55,1329,1330],{},"    stops_and_adjacents\n",[55,1332,1333],{"class":57,"line":640},[55,1334,1335],{},"GROUP BY\n",[55,1337,1338],{"class":57,"line":652},[55,1339,1300],{},[55,1341,1342],{"class":57,"line":662},[55,1343,1305],{},[55,1345,1346],{"class":57,"line":667},[55,1347,1310],{},[55,1349,1350],{"class":57,"line":673},[55,1351,1352],{},"    to_stop_name\n",[55,1354,1356],{"class":57,"line":1355},39,[55,1357,1358],{},"ORDER BY min_duration DESC;\n",[14,1360,1361],{},"Et voici les résultats :",[45,1363,1366],{"className":1364,"code":1365,"language":860},[858],"+--------------+-----------------------------------------+-------------+-----------------------------------------+--------------+\n| from_stop_id | from_stop_name                          | to_stop_id  | to_stop_name                            | min_duration |\n|--------------+-----------------------------------------+-------------+-----------------------------------------+--------------|\n| IDFM:463221  | Mairie de Montreuil                     | IDFM:21913  | Porte de Montreuil                      | 00:06:00     |\n| IDFM:21913   | Porte de Montreuil                      | IDFM:463221 | Mairie de Montreuil                     | 00:06:00     |\n| IDFM:463131  | Bobigny Pablo Picasso                   | IDFM:22014  | Bobigny-Pantin - Raymond Queneau        | 00:04:00     |\n| IDFM:22014   | Bobigny-Pantin - Raymond Queneau        | IDFM:463131 | Bobigny Pablo Picasso                   | 00:04:00     |\n| IDFM:463002  | Bobigny-Pantin - Raymond Queneau        | IDFM:22015  | Bobigny Pablo Picasso                   | 00:03:00     |\n| IDFM:463159  | Châtelet                                | IDFM:21958  | Gare de Lyon                            | 00:03:00     |\n| IDFM:21959   | Châtelet                                | IDFM:463046 | Gare de Lyon                            | 00:03:00     |\n| IDFM:22015   | Bobigny Pablo Picasso                   | IDFM:463002 | Bobigny-Pantin - Raymond Queneau        | 00:03:00     |\n| IDFM:21958   | Gare de Lyon                            | IDFM:463159 | Châtelet                                | 00:03:00     |\n| IDFM:463046  | Gare de Lyon                            | IDFM:21959  | Châtelet                                | 00:03:00     |\n",[52,1367,1365],{"__ignoreMap":50},[14,1369,1370],{},"Ce qui est intéressant, c'est que le chemin : Mairie de Montreuil -> Porte de Montreuil, ne devrait pas exister, car il\ny a des stations entre les deux.",[14,1372,1373,1374,1376,1377,1380,1381,1384],{},"Oups, je me rends compte que ce qui peut m'aider c'est dans la table\n",[52,1375,703],{},", il y a un\n",[52,1378,1379],{},"pickup_type","\net\n",[52,1382,1383],{},"drop_off_type"," mais je n'ai\npas fait la colonne. Je vais devoir la rajouter.",[14,1386,1387,1388,1394],{},"D'ailleurs, j'en ai un peu marre de regarder le csv dans TextEdit,\nj'installe ",[685,1389,1393],{"href":1390,"rel":1391},"https://github.com/YS-L/csvlens",[1392],"nofollow","csvlens",", c'est plutôt pas mal.",[14,1396,1397],{},"En regardant les données après avoir ajouté les colonnes, je me rends qu'il y a pas mal où on ne peut pas monter ou\ndescendre :",[45,1399,1402],{"className":1400,"code":1401,"language":860},[858],"postgres@localhost:idfm> select count(*), count(*) filter(where drop_off_type = 1), count(*) filter(where pickup_type =1) from stop_times;\n+---------+--------+--------+\n| count   | count  | count  |\n|---------+--------+--------|\n| 9761752 | 442360 | 441737 |\n+---------+--------+--------+\nSELECT 1\nTime: 0.958s\n",[52,1403,1401],{"__ignoreMap":50},[14,1405,1406],{},"En regardant du coup notre cas :",[45,1408,1410],{"className":714,"code":1409,"language":716,"meta":50,"style":50},"postgres@localhost:idfm> SELECT DISTINCT\n         st.stop_id AS from_stop_id,\n         s.stop_name AS from_stop_name,\n         adjacent_stops.stop_id AS to_stop_id,\n         adjacent_stops_station.stop_name AS to_stop_name,\n         CASE\n             WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n                 THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n             ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n         END AS duration,\n         st.pickup_type, st.drop_off_type, adjacent_stops.pickup_type, adjacent_stops.drop_off_type\n     FROM\n         stop_times AS st\n     INNER JOIN\n         stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n     INNER JOIN\n         trips AS t ON st.trip_id = t.trip_id\n     INNER JOIN stops AS s ON st.stop_id = s.stop_id\n     INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n     INNER JOIN\n         routes AS r ON t.route_id = r.route_id\n     WHERE\n         ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n         AND r.route_type = 1 AND st.stop_id = 'IDFM:463221'\n+--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------+\n| from_stop_id | from_stop_name      | to_stop_id  | to_stop_name       | duration | pickup_type | drop_off_type | pickup_type | drop_off_type |\n|--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------|\n| IDFM:463221  | Mairie de Montreuil | IDFM:21913  | Porte de Montreuil | 00:06:00 | 0           | 1             | 1           | 0             |\n| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:01:00 | 0           | 1             | 0           | 0             |\n| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:02:00 | 0           | 1             | 0           | 0             |\n+--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------+\n",[52,1411,1412,1417,1422,1427,1432,1437,1442,1447,1452,1457,1462,1467,1472,1477,1482,1487,1491,1496,1501,1506,1510,1515,1520,1525,1530,1535,1540,1545,1550,1555,1560],{"__ignoreMap":50},[55,1413,1414],{"class":57,"line":58},[55,1415,1416],{},"postgres@localhost:idfm> SELECT DISTINCT\n",[55,1418,1419],{"class":57,"line":64},[55,1420,1421],{},"         st.stop_id AS from_stop_id,\n",[55,1423,1424],{"class":57,"line":92},[55,1425,1426],{},"         s.stop_name AS from_stop_name,\n",[55,1428,1429],{"class":57,"line":98},[55,1430,1431],{},"         adjacent_stops.stop_id AS to_stop_id,\n",[55,1433,1434],{"class":57,"line":104},[55,1435,1436],{},"         adjacent_stops_station.stop_name AS to_stop_name,\n",[55,1438,1439],{"class":57,"line":110},[55,1440,1441],{},"         CASE\n",[55,1443,1444],{"class":57,"line":116},[55,1445,1446],{},"             WHEN st.arrival_time::interval \u003C= adjacent_stops.arrival_time::interval\n",[55,1448,1449],{"class":57,"line":122},[55,1450,1451],{},"                 THEN (adjacent_stops.arrival_time::interval - st.arrival_time::interval)::TEXT\n",[55,1453,1454],{"class":57,"line":128},[55,1455,1456],{},"             ELSE (st.arrival_time::interval - adjacent_stops.arrival_time::interval)::TEXT\n",[55,1458,1459],{"class":57,"line":134},[55,1460,1461],{},"         END AS duration,\n",[55,1463,1464],{"class":57,"line":139},[55,1465,1466],{},"         st.pickup_type, st.drop_off_type, adjacent_stops.pickup_type, adjacent_stops.drop_off_type\n",[55,1468,1469],{"class":57,"line":145},[55,1470,1471],{},"     FROM\n",[55,1473,1474],{"class":57,"line":461},[55,1475,1476],{},"         stop_times AS st\n",[55,1478,1479],{"class":57,"line":474},[55,1480,1481],{},"     INNER JOIN\n",[55,1483,1484],{"class":57,"line":484},[55,1485,1486],{},"         stop_times AS adjacent_stops ON st.trip_id = adjacent_stops.trip_id\n",[55,1488,1489],{"class":57,"line":489},[55,1490,1481],{},[55,1492,1493],{"class":57,"line":494},[55,1494,1495],{},"         trips AS t ON st.trip_id = t.trip_id\n",[55,1497,1498],{"class":57,"line":502},[55,1499,1500],{},"     INNER JOIN stops AS s ON st.stop_id = s.stop_id\n",[55,1502,1503],{"class":57,"line":507},[55,1504,1505],{},"     INNER JOIN stops AS adjacent_stops_station ON adjacent_stops.stop_id = adjacent_stops_station.stop_id\n",[55,1507,1508],{"class":57,"line":519},[55,1509,1481],{},[55,1511,1512],{"class":57,"line":532},[55,1513,1514],{},"         routes AS r ON t.route_id = r.route_id\n",[55,1516,1517],{"class":57,"line":545},[55,1518,1519],{},"     WHERE\n",[55,1521,1522],{"class":57,"line":553},[55,1523,1524],{},"         ABS(st.stop_sequence - adjacent_stops.stop_sequence) = 1\n",[55,1526,1527],{"class":57,"line":559},[55,1528,1529],{},"         AND r.route_type = 1 AND st.stop_id = 'IDFM:463221'\n",[55,1531,1532],{"class":57,"line":572},[55,1533,1534],{},"+--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------+\n",[55,1536,1537],{"class":57,"line":583},[55,1538,1539],{},"| from_stop_id | from_stop_name      | to_stop_id  | to_stop_name       | duration | pickup_type | drop_off_type | pickup_type | drop_off_type |\n",[55,1541,1542],{"class":57,"line":589},[55,1543,1544],{},"|--------------+---------------------+-------------+--------------------+----------+-------------+---------------+-------------+---------------|\n",[55,1546,1547],{"class":57,"line":595},[55,1548,1549],{},"| IDFM:463221  | Mairie de Montreuil | IDFM:21913  | Porte de Montreuil | 00:06:00 | 0           | 1             | 1           | 0             |\n",[55,1551,1552],{"class":57,"line":600},[55,1553,1554],{},"| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:01:00 | 0           | 1             | 0           | 0             |\n",[55,1556,1557],{"class":57,"line":605},[55,1558,1559],{},"| IDFM:463221  | Mairie de Montreuil | IDFM:463176 | Croix de Chavaux   | 00:02:00 | 0           | 1             | 0           | 0             |\n",[55,1561,1562],{"class":57,"line":613},[55,1563,1534],{},[14,1565,1566],{},"Donc ce qu'on peut voir c'est qu'à Mairie de Montreuil, c'est un arrêt où on peut que monter, mais on ne peut pas\ndescendre (le train doit faire une boucle ou autres). Et à son arrivée à Porte de Montreuil, on ne peut que descendre.",[14,1568,1569],{},"On est vraiment dans un cas à la marge, je pense. Est-ce que je ne pourrais pas avoir tous les bouts de lignes pour\néviter ce genre de cas ?",[677,1571,1573],{"id":1572},"adjacents-sur-une-correspondance","Adjacents sur une correspondance",[14,1575,1576],{},"Exemple : Saint-Lazare : Je peux changer de la ligne 13 à la 12, 14, …",[14,1578,1579,1580,1583,1584,1586],{},"Il faut donc récupérer les\n",[52,1581,1582],{},"pathways"," et les\n",[52,1585,696],{}," pour avoir les correspondances.",[37,1588,1590],{"id":1589},"ressources","Ressources",[18,1592,1593,1600],{},[21,1594,1595],{},[685,1596,1599],{"href":1597,"rel":1598},"https://2ality.com/2019/11/nodejs-streams-async-iteration.html",[1392],"Easier Node.js streams via async iteration",[21,1601,1602],{},[685,1603,1393],{"href":1390,"rel":1604},[1392],[1606,1607,1608],"style",{},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}",{"title":50,"searchDepth":64,"depth":64,"links":1610},[1611,1612,1619],{"id":39,"depth":64,"text":40},{"id":345,"depth":64,"text":346,"children":1613},[1614,1615,1616,1617,1618],{"id":679,"depth":92,"text":680},{"id":696,"depth":92,"text":697},{"id":754,"depth":92,"text":755},{"id":761,"depth":92,"text":762},{"id":1572,"depth":92,"text":1573},{"id":1589,"depth":64,"text":1590},"md",{"date":5},true,"/blog/2024-03-27",{"title":5,"description":16},"blog/2024-03-27","IL_KVPET7djwRa2uFT2uqipy8tmjnU9FSf5maCvUOl0",1752417582968]