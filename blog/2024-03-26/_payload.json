[{"data":1,"prerenderedAt":744},["ShallowReactive",2],{"/blog/2024-03-26":3},{"id":4,"title":5,"body":6,"description":16,"extension":737,"meta":738,"navigation":739,"path":740,"seo":741,"stem":742,"__hash__":743},"blog/blog/2024-03-26.md","2024-03-26",{"type":7,"value":8,"toc":734},"minimark",[9,13,17,20,23,26,29,40,52,55,58,68,71,130,147,150,412,415,423,426,429,445,448,451,696,699,708,711,714,717,722,730],[10,11,5],"h1",{"id":12},"_2024-03-26",[14,15,16],"p",{},"Bon qu'est-ce que je souhaite faire et pour faire quoi ?",[14,18,19],{},"Actuellement, l'application prend en charge les lignes de métro de Paris, et permet de calculer un itinéraire entre deux\nstations en fonction du nombre de stations. C'est un peu simpliste, mais ça fonctionne.",[14,21,22],{},"J'aimerais ajouter la possibilité de jouer avec le trajet le plus rapide, et le moins de correspondance.\nPour la première partie, il me faut le temps entre chaque station, et le temps de correspondance dans une station.",[14,24,25],{},"Pour avoir cette information, je vais devoir utiliser les données d'Île-de-France Mobilités, et plus particulièrement\nle General Transit Feed Specification (GTFS) dans sa version schedule.",[14,27,28],{},"Je vais devoir utiliser les données, c'est clairement du relationnel, et je vais devoir faire des jointures entre les\ndifférents fichiers.\nEst-ce que je vais devoir utiliser une BDD pour ça ? Franchement, je pense que les requêtes peuvent me simplifier la\nvie.",[14,30,31,32,39],{},"Je trouve ",[33,34,38],"a",{"href":35,"rel":36},"https://docs.mobilitydb.com/MobilityDB-workshop/master/ch04.html#idp22",[37],"nofollow","un article"," qui donne les schémas à\ncréer pour PostgreSQL et les étapes pour copier les données. C'est ce qu'il me faut.",[14,41,42,43,47,48,51],{},"Ce qui m'embête avec les données d'IDFM, c'est qu'il n'y a pas le fichier\n",[44,45,46],"code",{},"shape.txt",", ça me permettrait de tracer les\nlignes plus facilement. J'ai par contre bien récupéré les tracés des lignes, qui comporte le\n",[44,49,50],{},"route_id",", c'est plutôt\nok.",[14,53,54],{},"Si je résume, pour mon besoin, je charge les fichiers dans ma BDD. Grâce à ça, je peux faire des requêtes pour avoir le\ntemps entre chaque station et chaque correspondance.",[14,56,57],{},"Pour me baser que sur le GTFS qu'est-ce qu'il me faut :",[59,60,61,65],"ul",{},[62,63,64],"li",{},"Calculer les stations adjacentes",[62,66,67],{},"Calculer les portions de lignes à afficher entre les stations",[14,69,70],{},"Essayons de voir comment je peux faire ça.",[72,73,74,107,110],"ol",{},[62,75,76,77,80,81,80,84,87,88,91,92,80,95,80,98,80,100,80,103,106],{},"Obtenir les stations adjacentes : j'utilise une jointure entre :\n",[44,78,79],{},"stop_times",",\n",[44,82,83],{},"trips",[44,85,86],{},"routes",". Je ne garde que les\nmétros :\n",[44,89,90],{},"route_type = 1",". Je fais un distinct\nsur\n",[44,93,94],{},"trip_headsign",[44,96,97],{},"direction_id",[44,99,50],{},[44,101,102],{},"stop_id",[44,104,105],{},"stop_name",".",[62,108,109],{},"Obtenir les portions de lignes à afficher : Je le fais en JavaScript",[62,111,112,113,116,117,120,121,80,124,80,127,106],{},"Obtenir les correspondances : j'utilise une jointure entre\n",[44,114,115],{},"pathways"," et\n",[44,118,119],{},"stops",". Je garde le\n",[44,122,123],{},"from_stop_id",[44,125,126],{},"to_stop_id",[44,128,129],{},"transversal_time",[14,131,132,133,136,137,116,140,142,143,146],{},"Cela me parait plutôt bon comme plan, je me demande si je vais pas stocker directement la portion avec la station\nadjacente.\nD'ailleurs est-ce que j'utilise le même vocabulaire :\n",[44,134,135],{},"stop"," à la place de\n",[44,138,139],{},"station",[44,141,86],{}," à la place\nde\n",[44,144,145],{},"lignes"," ?",[14,148,149],{},"Ce qui me donnerait quelque chose comme :",[151,152,157],"pre",{"className":153,"code":154,"language":155,"meta":156,"style":156},"language-json shiki shiki-themes github-light github-dark","{\n  \"routes\": [\n    {\n      \"route_id\": \"route_id\",\n      \"route_name\": \"route_name\",\n      \"route_color\": \"route_color\"\n    }\n  ],\n  \"stops\": [\n    {\n      \"name\": \"stop_name\",\n      \"id\": \"stop_id\",\n      \"route_id\": \"route_id\"\n    }\n  ],\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ]\n}\n","json","",[44,158,159,168,178,184,199,212,223,229,235,243,248,261,274,284,289,294,302,307,319,332,345,353,359,372,383,389,395,400,406],{"__ignoreMap":156},[160,161,164],"span",{"class":162,"line":163},"line",1,[160,165,167],{"class":166},"sVt8B","{\n",[160,169,171,175],{"class":162,"line":170},2,[160,172,174],{"class":173},"sj4cs","  \"routes\"",[160,176,177],{"class":166},": [\n",[160,179,181],{"class":162,"line":180},3,[160,182,183],{"class":166},"    {\n",[160,185,187,190,193,197],{"class":162,"line":186},4,[160,188,189],{"class":173},"      \"route_id\"",[160,191,192],{"class":166},": ",[160,194,196],{"class":195},"sZZnC","\"route_id\"",[160,198,80],{"class":166},[160,200,202,205,207,210],{"class":162,"line":201},5,[160,203,204],{"class":173},"      \"route_name\"",[160,206,192],{"class":166},[160,208,209],{"class":195},"\"route_name\"",[160,211,80],{"class":166},[160,213,215,218,220],{"class":162,"line":214},6,[160,216,217],{"class":173},"      \"route_color\"",[160,219,192],{"class":166},[160,221,222],{"class":195},"\"route_color\"\n",[160,224,226],{"class":162,"line":225},7,[160,227,228],{"class":166},"    }\n",[160,230,232],{"class":162,"line":231},8,[160,233,234],{"class":166},"  ],\n",[160,236,238,241],{"class":162,"line":237},9,[160,239,240],{"class":173},"  \"stops\"",[160,242,177],{"class":166},[160,244,246],{"class":162,"line":245},10,[160,247,183],{"class":166},[160,249,251,254,256,259],{"class":162,"line":250},11,[160,252,253],{"class":173},"      \"name\"",[160,255,192],{"class":166},[160,257,258],{"class":195},"\"stop_name\"",[160,260,80],{"class":166},[160,262,264,267,269,272],{"class":162,"line":263},12,[160,265,266],{"class":173},"      \"id\"",[160,268,192],{"class":166},[160,270,271],{"class":195},"\"stop_id\"",[160,273,80],{"class":166},[160,275,277,279,281],{"class":162,"line":276},13,[160,278,189],{"class":173},[160,280,192],{"class":166},[160,282,283],{"class":195},"\"route_id\"\n",[160,285,287],{"class":162,"line":286},14,[160,288,228],{"class":166},[160,290,292],{"class":162,"line":291},15,[160,293,234],{"class":166},[160,295,297,300],{"class":162,"line":296},16,[160,298,299],{"class":173},"  \"adjacents\"",[160,301,177],{"class":166},[160,303,305],{"class":162,"line":304},17,[160,306,183],{"class":166},[160,308,310,313,315,317],{"class":162,"line":309},18,[160,311,312],{"class":173},"      \"from_stop_id\"",[160,314,192],{"class":166},[160,316,271],{"class":195},[160,318,80],{"class":166},[160,320,322,325,327,330],{"class":162,"line":321},19,[160,323,324],{"class":173},"      \"to_stop_id\"",[160,326,192],{"class":166},[160,328,329],{"class":195},"\"adjacent_stop_id\"",[160,331,80],{"class":166},[160,333,335,338,340,343],{"class":162,"line":334},20,[160,336,337],{"class":173},"      \"time\"",[160,339,192],{"class":166},[160,341,342],{"class":173},"123",[160,344,80],{"class":166},[160,346,348,351],{"class":162,"line":347},21,[160,349,350],{"class":173},"      \"path\"",[160,352,177],{"class":166},[160,354,356],{"class":162,"line":355},22,[160,357,358],{"class":166},"        {\n",[160,360,362,365,367,370],{"class":162,"line":361},23,[160,363,364],{"class":173},"          \"lat\"",[160,366,192],{"class":166},[160,368,369],{"class":173},"48.123",[160,371,80],{"class":166},[160,373,375,378,380],{"class":162,"line":374},24,[160,376,377],{"class":173},"          \"lon\"",[160,379,192],{"class":166},[160,381,382],{"class":173},"2.123\n",[160,384,386],{"class":162,"line":385},25,[160,387,388],{"class":166},"        }\n",[160,390,392],{"class":162,"line":391},26,[160,393,394],{"class":166},"      ]\n",[160,396,398],{"class":162,"line":397},27,[160,399,228],{"class":166},[160,401,403],{"class":162,"line":402},28,[160,404,405],{"class":166},"  ]\n",[160,407,409],{"class":162,"line":408},29,[160,410,411],{"class":166},"}\n",[14,413,414],{},"Un problème que je vois, c'est quand je vais vouloir ajouter une station, j'aimerais :",[59,416,417,420],{},[62,418,419],{},"ajouter un unique point sur la carte",[62,421,422],{},"s'il y a des liaisons, les ajouter",[14,424,425],{},"Mais, en l'état, je ne vois pas comment je choisis la station à afficher. Il me faut peut-être une liste de stations\nsans\nrelation, qui est uniquement le point à afficher si la station est seule. Je vais chercher dans les données.",[14,427,428],{},"Il y a bien 2 versions :",[59,430,431,438],{},[62,432,433],{},[33,434,437],{"href":435,"rel":436},"https://prim.iledefrance-mobilites.fr/jeux-de-donnees/emplacement-des-gares-idf",[37],"Gares et stations du réseau ferré d'Île-de-France (par ligne) - PRIM IDFM",[62,439,440],{},[33,441,444],{"href":442,"rel":443},"https://prim.iledefrance-mobilites.fr/jeux-de-donnees/emplacement-des-gares-idf-data-generalisee",[37],"Gares et stations du réseau ferré d'Île-de-France (donnée généralisée) - PRIM IDFM",[14,446,447],{},"Cool, ça répond à mon besoin et améliora l'application.",[14,449,450],{},"Donc comment je représente le json :",[151,452,454],{"className":153,"code":453,"language":155,"meta":156,"style":156},"{\n  \"routes\": [\n    {\n      \"route_id\": \"route_id\",\n      \"route_name\": \"route_name\",\n      \"route_color\": \"route_color\"\n    }\n  ],\n  \"stops\": [\n    {\n      \"name\": \"stop_name\",\n      \"id\": \"stop_id\",\n      \"route_id\": \"route_id\"\n    }\n  ],\n  \"adjacents\": [\n    {\n      \"from_stop_id\": \"stop_id\",\n      \"to_stop_id\": \"adjacent_stop_id\",\n      \"time\": 123,\n      \"path\": [\n        {\n          \"lat\": 48.123,\n          \"lon\": 2.123\n        }\n      ]\n    }\n  ],\n  \"stops_unique\": [\n    {\n      \"name\": \"stop_name\",\n      \"lat\": 48.123,\n      \"lon\": 2.123\n    }\n  ]\n}\n",[44,455,456,460,466,470,480,490,498,502,506,512,516,526,536,544,548,552,558,562,572,582,592,598,602,612,620,624,628,632,636,643,648,659,671,681,686,691],{"__ignoreMap":156},[160,457,458],{"class":162,"line":163},[160,459,167],{"class":166},[160,461,462,464],{"class":162,"line":170},[160,463,174],{"class":173},[160,465,177],{"class":166},[160,467,468],{"class":162,"line":180},[160,469,183],{"class":166},[160,471,472,474,476,478],{"class":162,"line":186},[160,473,189],{"class":173},[160,475,192],{"class":166},[160,477,196],{"class":195},[160,479,80],{"class":166},[160,481,482,484,486,488],{"class":162,"line":201},[160,483,204],{"class":173},[160,485,192],{"class":166},[160,487,209],{"class":195},[160,489,80],{"class":166},[160,491,492,494,496],{"class":162,"line":214},[160,493,217],{"class":173},[160,495,192],{"class":166},[160,497,222],{"class":195},[160,499,500],{"class":162,"line":225},[160,501,228],{"class":166},[160,503,504],{"class":162,"line":231},[160,505,234],{"class":166},[160,507,508,510],{"class":162,"line":237},[160,509,240],{"class":173},[160,511,177],{"class":166},[160,513,514],{"class":162,"line":245},[160,515,183],{"class":166},[160,517,518,520,522,524],{"class":162,"line":250},[160,519,253],{"class":173},[160,521,192],{"class":166},[160,523,258],{"class":195},[160,525,80],{"class":166},[160,527,528,530,532,534],{"class":162,"line":263},[160,529,266],{"class":173},[160,531,192],{"class":166},[160,533,271],{"class":195},[160,535,80],{"class":166},[160,537,538,540,542],{"class":162,"line":276},[160,539,189],{"class":173},[160,541,192],{"class":166},[160,543,283],{"class":195},[160,545,546],{"class":162,"line":286},[160,547,228],{"class":166},[160,549,550],{"class":162,"line":291},[160,551,234],{"class":166},[160,553,554,556],{"class":162,"line":296},[160,555,299],{"class":173},[160,557,177],{"class":166},[160,559,560],{"class":162,"line":304},[160,561,183],{"class":166},[160,563,564,566,568,570],{"class":162,"line":309},[160,565,312],{"class":173},[160,567,192],{"class":166},[160,569,271],{"class":195},[160,571,80],{"class":166},[160,573,574,576,578,580],{"class":162,"line":321},[160,575,324],{"class":173},[160,577,192],{"class":166},[160,579,329],{"class":195},[160,581,80],{"class":166},[160,583,584,586,588,590],{"class":162,"line":334},[160,585,337],{"class":173},[160,587,192],{"class":166},[160,589,342],{"class":173},[160,591,80],{"class":166},[160,593,594,596],{"class":162,"line":347},[160,595,350],{"class":173},[160,597,177],{"class":166},[160,599,600],{"class":162,"line":355},[160,601,358],{"class":166},[160,603,604,606,608,610],{"class":162,"line":361},[160,605,364],{"class":173},[160,607,192],{"class":166},[160,609,369],{"class":173},[160,611,80],{"class":166},[160,613,614,616,618],{"class":162,"line":374},[160,615,377],{"class":173},[160,617,192],{"class":166},[160,619,382],{"class":173},[160,621,622],{"class":162,"line":385},[160,623,388],{"class":166},[160,625,626],{"class":162,"line":391},[160,627,394],{"class":166},[160,629,630],{"class":162,"line":397},[160,631,228],{"class":166},[160,633,634],{"class":162,"line":402},[160,635,234],{"class":166},[160,637,638,641],{"class":162,"line":408},[160,639,640],{"class":173},"  \"stops_unique\"",[160,642,177],{"class":166},[160,644,646],{"class":162,"line":645},30,[160,647,183],{"class":166},[160,649,651,653,655,657],{"class":162,"line":650},31,[160,652,253],{"class":173},[160,654,192],{"class":166},[160,656,258],{"class":195},[160,658,80],{"class":166},[160,660,662,665,667,669],{"class":162,"line":661},32,[160,663,664],{"class":173},"      \"lat\"",[160,666,192],{"class":166},[160,668,369],{"class":173},[160,670,80],{"class":166},[160,672,674,677,679],{"class":162,"line":673},33,[160,675,676],{"class":173},"      \"lon\"",[160,678,192],{"class":166},[160,680,382],{"class":173},[160,682,684],{"class":162,"line":683},34,[160,685,228],{"class":166},[160,687,689],{"class":162,"line":688},35,[160,690,405],{"class":166},[160,692,694],{"class":162,"line":693},36,[160,695,411],{"class":166},[14,697,698],{},"J'ai l'impression qu'avec ça je peux répondre à tout ce que je veux faire.",[14,700,701,702,116,705,106],{},"Pour ce qui est d'intéragir avec la base de données, je fais un combo dont j'ai l'habitude :\n",[44,703,704],{},"knex",[44,706,707],{},"pg",[14,709,710],{},"En moins d'1 minute avec un copier/coller d'un autre projet, j'ai quelque chose d'opérationnel.",[14,712,713],{},"J'enchaine ensuite, avec la création de la migration, je m'aide du schéma de MobilityDB, je demande à Mistral en Local\nde me le convertir en knex schema builder. Cela fonctionne plutôt bien.",[14,715,716],{},"Pour les données, je crée des fonctions en TDD pour insérer les données. Puis, j'essaie de parser le csv en stream pour\nles insérer en base. Cela ne fonctionne pas comme je veux je regarderai demain.",[718,719,721],"h2",{"id":720},"ressources","Ressources",[59,723,724],{},[62,725,726],{},[33,727,729],{"href":35,"rel":728},[37],"Managing GTFS Data - MobilityDB",[731,732,733],"style",{},"html pre.shiki code .sVt8B, html code.shiki .sVt8B{--shiki-default:#24292E;--shiki-dark:#E1E4E8}html pre.shiki code .sj4cs, html code.shiki .sj4cs{--shiki-default:#005CC5;--shiki-dark:#79B8FF}html pre.shiki code .sZZnC, html code.shiki .sZZnC{--shiki-default:#032F62;--shiki-dark:#9ECBFF}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}",{"title":156,"searchDepth":170,"depth":170,"links":735},[736],{"id":720,"depth":170,"text":721},"md",{"date":5},true,"/blog/2024-03-26",{"title":5,"description":16},"blog/2024-03-26","j-fdPkW4CVoUdtUl1_FaVw63wmd-Oz_ZirKwN9jBoao",1752397954410]