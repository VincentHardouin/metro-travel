[{"data":1,"prerenderedAt":90},["ShallowReactive",2],{"/blog/2024-04-26":3},{"id":4,"title":5,"body":6,"description":16,"extension":83,"meta":84,"navigation":85,"path":86,"seo":87,"stem":88,"__hash__":89},"blog/blog/2024-04-26.md","2024-04-26",{"type":7,"value":8,"toc":79},"minimark",[9,13,17,20,23,26,29,39,47,50,53,68,73],[10,11,5],"h1",{"id":12},"_2024-04-26",[14,15,16],"p",{},"Longtemps que je n'ai pas pris le temps d'écrire dans ce journal. Récapitulons la semaine passée, le 20 avril, j'ai mis\nen production l'utilisation des données provenant de GTFS. Heureux d'être arrivé au bout de cette migration.",[14,18,19],{},"Le 23, j'ai migré le projet de Javascript natif vers Vue.js, ce qui m'a permis au passage d'ajouter la fonctionnalité de\ntoggle les stations ajoutées.",[14,21,22],{},"Enfin, le 25, j'ai ajouté le mode \"Practice\", qui permet de s'entraîner à trouver les stations avec un départ et une\narrivée différente à chaque fois.",[14,24,25],{},"Aujourd'hui, je vais corriger un bug qui survient quand on désactive une station et qu'on l'ajoute à nouveau via le\nchamp de recherche. Ce qui en plus a pour conséquence d'inverser la coche de la liste des stations.",[14,27,28],{},"Là-dedans, on peut voir deux choses :",[30,31,32,36],"ol",{},[33,34,35],"li",{},"la recherche des stations ne retire plus les stations déjà ajoutées, c'était\nplutôt voulu pour déléguer les stations ajoutées au composant d'en dessous.",[33,37,38],{},"la coche de la liste des stations est inversée, car les coches ne sont pas liées à l'état des stations.",[14,40,41,42,46],{},"Ce qui ne me convient pas, c'est lorsque j'ajoute une station, la méthode\n",[43,44,45],"code",{},"addStation"," me retourne si le jeu est fini ou\nnon. Ensuite quand je désactive une station, je la retire de la liste des stations ajoutées de la partie, alors qu'il ne\nfaudrait pas, je pense.",[14,48,49],{},"J'ai une méthode toggleStation, qui décide si la station est ajoutée ou retirée, mais je ne l'utilise pas pour ajouter\nuniquement pour les checkbox.\nActuellement, la class Game, ne sait pas si une station est simplement désactivée, elle sait juste qu'elle n'est pas\najoutée.",[14,51,52],{},"D'ailleurs, le fait que la class n'ait pas l'information fait que ça biaise les résultats du jeu, où seulement les\nstations ajoutées et encore actives sont prises en compte. Donc si l'utilisateur fait une erreur, il peut désactiver et\nobtenir quand même le plus petit score.",[14,54,55,56,59,60,63,64,67],{},"Il faut donc que la classe ait connaissance de l'état de la station. Dans un premier temps, je renomme la\nMap\n",[43,57,58],{},"addedStops"," en\n",[43,61,62],{},"currentState",", qui contient les stations ajoutées et leur état\n",[43,65,66],{},"{ isActive: true }",".",[14,69,70,71,67],{},"J'ajoute ensuite un getter qui remplace l'ancienne variable\n",[43,72,58],{},[14,74,75,76,78],{},"Maintenant, j'essaie d'utiliser un ref qui pointe vers l'instance de Game, mais cela ne fonctionne pas. Après quelques\nessais infructueux, je décide de mettre à jour à chaque ajout ou toggle la ref\n",[43,77,58],{},". Je pense que je pourrais\nutiliser les events, mais j'ai quelque chose de fonctionnel qui peut partir en production, c'est déjà une première\nétape.",{"title":80,"searchDepth":81,"depth":81,"links":82},"",2,[],"md",{"date":5},true,"/blog/2024-04-26",{"title":5,"description":16},"blog/2024-04-26","CpX83hRRKwYeAt6UfcRQocL368nb-oieHqRU3pRnY9M",1752417582966]